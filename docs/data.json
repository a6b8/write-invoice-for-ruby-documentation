[{"permalink":"//","layout":"home","title":null,"content":"<img src=\"./assets/images/logo.png\" height=\"60px\">\n\n`write_invoice` is a ruby gem to generate multiple invoices in one document.\n \n:heavy_check_mark: Highly customizable\n\n:heavy_check_mark: More then [200(!) Examples](../options/#categories) available.\n\n:heavy_check_mark: Unique QR Code on every invoice.\n\n:heavy_check_mark: Encrypt your Document\n\n:heavy_check_mark: Watermark function for test purposes.\n\n\n## Source Code\n\n```bash\ngem install write_invoice\n```\n\n```ruby\nrequire 'write_invoice'\n\npyld = WriteInvoice::Example.generate()\ndoc = WriteInvoice::Document.generate( output: 'test.pdf', payload: pyld )\n```\n\n\n## Links\n\n- [Github](https://github.com/a6b8/write-invoice-for-ruby) <br>\n- [RubyGems](https://rubygems.org/gems/write_invoice)","dir":"/","name":"README.md","path":"README.md","url":"/"},{"sort":1,"permalink":"/tutorials/","layout":"page","title":"Tutorials","content":"<h1 id=\"tutorials\">Tutorials</h1>\n\n<ul>\n <li><a href=\"../tutorials/quickstart.html\">Quickstart</a></li>\n <li><a href=\"../tutorials/custom-logo.html\">Set your custom Logo</a></li>\n <li><a href=\"../tutorials/change-watermark.html\">Change your document watermark</a></li>\n <li><a href=\"../tutorials/encrypt-document.html\">Encrypt your document</a></li>\n <li><a href=\"../tutorials/change-qr-code.html\">Change your documet QR Code text</a></li>\n</ul>\n","dir":"/tutorials/","name":"README.md","path":"tutorials/README.md","url":"/tutorials/"},{"sort":1,"title":"A.1 show__qr_code","layout":"page","content":"# show__qr_code\n\nShow or Hide `QR Code` Image\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':show__qr_code' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :show__qr_code => true\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:show__qr_code``` | [Show](./#show) | [Three](/sections/three) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```true``` | ```^(?:true|false)``` | Boolean |\n\n## Example A.\n\nHide Qr Code\n\n### Output\n\n<img src=\"../assets/images/options/show__qr_code--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__qr_code => false}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__qr_code => false\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nShow Qr Code\n\n### Output\n\n<img src=\"../assets/images/options/show__qr_code--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__qr_code => true}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__qr_code => true\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"show__qr_code.md","path":"options/show__qr_code.md","url":"/options/show__qr_code.html"},{"sort":1,"title":"Quickstart","layout":"page","content":"# Quickstart\n\n\n## Overview\nFastest Way to get started:\n- Install gem with `gem install write_invoice`\n- Generate Payload with `WriteInvoice::Example.generate()`\n- Generate Document with `WriteInvoice::Document.generate()`\n\n*Observe all options and payload datapoints here: [sections/](../sections/)*\n\n## Steps\n\n### 1: Install gem\nInstall module from rubygems.\n\n```bash\ngem install write_invoice\n```\n\n\n### 2: Generate Example Payload\nGenerate a payload with `::example` Class.\n\n```ruby\nrequire 'write_invoice'\n\npyld = WriteInvoice::Example.generate()\n```\n\n\n### 3: Generate Document\n\n*To Storage*\n\n```ruby\nrequire 'write_invoice'\n\npyld = WriteInvoice::Example.generate()\nWriteInvoice::Document.generate( output: 'test.pdf', payload: pyld, options: {} )\n```\n\n*To Memory*\n\n```ruby\nrequire 'write_invoice'\n\npyld = WriteInvoice::Example.generate()\ndoc = WriteInvoice::Document.generate( payload: pyld, options: {} )\nFile.open( 'test.pdf', \"w\" ) { | f | f.write( doc ) }\n```","dir":"/tutorials/","name":"quickstart.md","path":"tutorials/quickstart.md","url":"/tutorials/quickstart.html"},{"sort":1,"title":"A. Header","layout":"page","content":"# Section: Header\n\nThe origin position of this section is on top of the page and can include a logo and other company defaults.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search='header' palette='section_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n \n\n## Options\n\n| **Nr** | **Name** | **Key** | **Default** | **Description** |\n| :--- | :--- | :--- | :--- | :--- |\n| [A.7](/options/#show) | [Show Logo](/options/show__logo) | :show__logo | `false` | Show or Hide Logo. To set your Image path or base64 string visit [headline__image__src](../options/headline__image__src.html) |\n| [A.9](/options/#show) | [Show Unencrypted](/options/show__unencrypted) | :show__unencrypted | `true` | Encrypt or unencrypt .pdf document. To set a password visit [Payload](../payload/#example) #example > document > encrypted |\n| [C.7](/options/#text) | [Text Page Count](/options/text__page_count) | :text__page_count | `<page> / <total>` | Set Page count output here. Use `<page>` to show current page number and `<total>` to show sum of all pages. |\n| [D.2](/options/#style) | [Style Page Count Align](/options/style__page_count__align) | :style__page_count__align | `right` | Set Page Count alignment |\n| [D.3](/options/#style) | [Style Page Count Start Count At](/options/style__page_count__start_count_at) | :style__page_count__start_count_at | `1` | Start to count from. |\n| [D.4](/options/#style) | [Style Page Count Offset Y](/options/style__page_count__offset_y) | :style__page_count__offset_y | `0` | Set an `y offset` for page count string. |\n| [D.10](/options/#style) | [Style Colors Header Default](/options/style__colors__header__default) | :style__colors__header__default | `000000` | Set background color for header section |\n| [D.13](/options/#style) | [Style Header Height](/options/style__header__height) | :style__header__height | `90` | Set total height of header section. |\n| [F.29](/options/#sections) | [Sections One Name](/options/sections__one__name) | :sections__one__name | `{:content=>nil, :struct=>\"<b><<--a-->></b>\\n<<--b-->>\\n<<--c-->>\\n<<--d-->>\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}, {:value=>:payload__from__address__phrase, :format=>nil}, {:value=>:payload__from__address__city, :format=>nil}, {:value=>:payload__from__address__country, :format=>nil}]}` | Define text in section \"one\" (header) |\n| [G.1](/options/#headline) | [Headline Grid X](/options/headline__grid__x) | :headline__grid__x | `3` | Set grid size on the `x axis`. |\n| [G.2](/options/#headline) | [Headline Grid Y](/options/headline__grid__y) | :headline__grid__y | `1` | Set grid size on the `y axis`. |\n| [G.3](/options/#headline) | [Headline Default Content](/options/headline__default__content) | :headline__default__content | `` | `Autofill` every cell with content if you wish. |\n| [G.4](/options/#headline) | [Headline Default Style](/options/headline__default__style) | :headline__default__style | `style__document__font_size__small` | Set `font style` as a reference. |\n| [G.5](/options/#headline) | [Headline Default Align](/options/headline__default__align) | :headline__default__align | `right` | Set default aligment behaviour of text. |\n| [G.6](/options/#headline) | [Headline Default Text Color](/options/headline__default__text_color) | :headline__default__text_color | `style__colors__header__default` | Set `default text` color in section \"one\" (headline). |\n| [G.7](/options/#headline) | [Headline Default Borders](/options/headline__default__borders) | :headline__default__borders | `[:left]` | Set `border type` in section \"one\" (headline). |\n| [G.8](/options/#headline) | [Headline Default Border Width](/options/headline__default__border_width) | :headline__default__border_width | `2` | Set `border width` in section \"one\" (headline). |\n| [G.9](/options/#headline) | [Headline Image Src](/options/headline__image__src) | :headline__image__src | `` | Set local `image path` for company logo, use .png or .jpg |\n| [G.10](/options/#headline) | [Headline Image Colspan](/options/headline__image__colspan) | :headline__image__colspan | `2` | Set how many cells in the `columns (x)` direction should be merge to show the image. |\n| [G.11](/options/#headline) | [Headline Image Rowspan](/options/headline__image__rowspan) | :headline__image__rowspan | `2` | Set how many cells in the `rows (y)` direction should be merge to show the image. |\n| [G.12](/options/#headline) | [Headline Image Grid](/options/headline__image__grid) | :headline__image__grid | `[0, 0]` | Set start position `[ columns x, rows y ]` of image. |\n| [G.13](/options/#headline) | [Headline Image Borders](/options/headline__image__borders) | :headline__image__borders | `[]` | Set `border type` of image cell. |\n| [G.14](/options/#headline) | [Headline Image Fit](/options/headline__image__fit) | :headline__image__fit | `[160, 100]` | Use `fit size` to adjust the image. |\n| [G.15](/options/#headline) | [Headline Image Border Width](/options/headline__image__border_width) | :headline__image__border_width | `0` | Set `border width` of image cell. |\n| [G.16](/options/#headline) | [Headline Texts](/options/headline__texts) | :headline__texts | `[{:content=>:sections__one__name__content, :grid=>[2, 0], :style=>:style__document__font_size__h1, :align=>:right, :text_color=>:style__colors__header__default, :borders=>[], :border_width=>0}]` | Set a reference to `string data`. |\n\n\n","dir":"/sections/","name":"header.md","path":"sections/header.md","url":"/sections/header.html"},{"sort":2,"title":"Set Custom Logo","layout":"page","content":"<h1 id=\"quickstart\">Quickstart</h1>\n\n<h2 id=\"overview\">Overview</h2>\n<p>Quickest way to generate an invoice with a custom logo is:</p>\n<ul>\n <li>Install gem with <code class=\"language-plaintext highlighter-rouge\">gem install write_invoice</code></li>\n <li>Generate Payload with <code class=\"language-plaintext highlighter-rouge\">WriteInvoice::Example.generate()</code></li>\n <li>Set Logo Path with <code class=\"language-plaintext highlighter-rouge\">headline__image__src:</code> in options.</li>\n <li>Generate Document with <code class=\"language-plaintext highlighter-rouge\">WriteInvoice::Document.generate()</code></li>\n</ul>\n\n<p><img src=\"../assets/images/template/preview--wo-mask.png\" /></p>\n\n<h2 id=\"steps\">Steps</h2>\n\n<h3 id=\"1-install-gem\">1: Install Gem</h3>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem <span class=\"nb\">install </span>write_invoice\n</code></pre>  </div></div>\n\n<h3 id=\"2-generate-payload\">2: Generate Payload</h3>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n</code></pre>  </div></div>\n\n<h3 id=\"3-set-logo-path-to-options\">3: Set Logo Path to options</h3>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">opts</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"ss\">show__logo: </span><span class=\"kp\">true</span><span class=\"p\">,</span>\n    <span class=\"ss\">headline__image__src: </span><span class=\"s1\">'your path or base64 string'</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<h3 id=\"4-generate-invoice\">4: Generate Invoice</h3>\n\n<p><em>To Storage</em></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">opts</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"ss\">show__logo: </span><span class=\"kp\">true</span><span class=\"p\">,</span>\n    <span class=\"ss\">headline__image__src: </span><span class=\"s1\">'your path or base64 string'</span>\n<span class=\"p\">}</span>\n\n<span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Document</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">output: </span><span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span> <span class=\"ss\">payload: </span><span class=\"n\">pyld</span><span class=\"p\">,</span> <span class=\"ss\">options: </span><span class=\"n\">opts</span> <span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<p><em>To Memory</em></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">opts</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"ss\">show__logo: </span><span class=\"kp\">true</span><span class=\"p\">,</span>\n    <span class=\"ss\">headline__image__src: </span><span class=\"s1\">'your path or base64 string'</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Document</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">payload: </span><span class=\"n\">pyld</span><span class=\"p\">,</span> <span class=\"ss\">options: </span><span class=\"n\">opts</span> <span class=\"p\">)</span>\n<span class=\"no\">File</span><span class=\"p\">.</span><span class=\"nf\">open</span><span class=\"p\">(</span> <span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span> <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"o\">|</span> <span class=\"n\">f</span> <span class=\"o\">|</span> <span class=\"n\">f</span><span class=\"p\">.</span><span class=\"nf\">write</span><span class=\"p\">(</span> <span class=\"n\">doc</span> <span class=\"p\">)</span> <span class=\"p\">}</span>\n</code></pre>  </div></div>\n","dir":"/tutorials/","name":"custom-logo.md","path":"tutorials/custom-logo.md","url":"/tutorials/custom-logo.html"},{"sort":2,"title":"A.2 show__sub_total","layout":"page","content":"# show__sub_total\n\nShow or Hide `Sub Total`\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':show__sub_total' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :show__sub_total => true\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:show__sub_total``` | [Show](./#show) | [Six](/sections/six) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```true``` | ```^(?:true|false)``` | Boolean |\n\n## Example A.\n\nHide Sub Total\n\n### Output\n\n<img src=\"../assets/images/options/show__sub_total--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__sub_total => false}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__sub_total => false\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nShow Sub Total\n\n### Output\n\n<img src=\"../assets/images/options/show__sub_total--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__sub_total => true}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__sub_total => true\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"show__sub_total.md","path":"options/show__sub_total.md","url":"/options/show__sub_total.html"},{"sort":2,"title":"B. Two","layout":"page","content":"# Section: Two\n\nThe origin position of this section is based below \"header\" and contains the address field of the receiver.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search='two' palette='section_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n \n\n## Options\n\n| **Nr** | **Name** | **Key** | **Default** | **Description** |\n| :--- | :--- | :--- | :--- | :--- |\n| [D.14](/options/#style) | [Style Address Label Offset X](/options/style__address_label__offset_x) | :style__address_label__offset_x | `20` | Set `x offset` for address label to adjust position for envelopes with window. |\n| [D.15](/options/#style) | [Style Address Label Move Down One](/options/style__address_label__move_down_one) | :style__address_label__move_down_one | `15` | Set distance between sender and receiver. |\n| [D.16](/options/#style) | [Style Address Label Move Down Two](/options/style__address_label__move_down_two) | :style__address_label__move_down_two | `100` | Set distance between address label and next section. |\n| [F.27](/options/#sections) | [Sections Two Small](/options/sections__two__small) | :sections__two__small | `{:content=>nil, :struct=>\"<u><<--a-->> - <<--b-->> - <<--c-->></u>\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}, {:value=>:payload__from__address__street, :format=>nil}, {:value=>:payload__from__address__city, :format=>nil}]}` | Define address label (from) in section \"two\" |\n| [F.28](/options/#sections) | [Sections Two To](/options/sections__two__to) | :sections__two__to | `{:content=>nil, :struct=>\"\\t\\t<b><<--a-->></b>\\n<<--b-->>\\n<<--c-->>\\nTax ID: <<--d-->>\", :assigns=>[{:value=>:payload__to__address__name, :format=>nil}, {:value=>:payload__to__address__street, :format=>nil}, {:value=>:payload__to__address__city, :format=>nil}, {:value=>:payload__to__tax_id, :format=>nil}]}` | Define address label (to) in section \"two\" |\n\n\n","dir":"/sections/","name":"two.md","path":"sections/two.md","url":"/sections/two.html"},{"sort":2,"title":"Sections","permalink":"/sections/","layout":"page","content":"<h1 id=\"sections\">Sections</h1>\n\n<div>\n <canvas id=\"canvas\" search=\"\" palette=\"section_overview\"></canvas>\n</div>\n\n<script src=\"../assets/js/marker.js\"></script>\n\n","dir":"/sections/","name":"README.md","path":"sections/README.md","url":"/sections/"},{"sort":3,"title":"C. Three","layout":"page","content":"# Section: Three\n\nThe origin position of this section is based below address field and contains two text field on the left and a qr code field on the right. \n\n\n## Preview\n\n<div >\n <canvas id='canvas' search='three' palette='section_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n \n\n## Options\n\n| **Nr** | **Name** | **Key** | **Default** | **Description** |\n| :--- | :--- | :--- | :--- | :--- |\n| [A.1](/options/#show) | [Show Qr Code](/options/show__qr_code) | :show__qr_code | `true` | Show or Hide `QR Code` Image |\n| [C.6](/options/#text) | [Text Invoice](/options/text__invoice) | :text__invoice | `Invoice` | Set default text `Invoice`. Note: Optional you can use Inline Formating. |\n| [D.45](/options/#style) | [Style Qr Code Width](/options/style__qr_code__width) | :style__qr_code__width | `40` | Set `QR Code` width (and height). |\n| [E.3](/options/#format_types) | [Format Types Date Eu](/options/format_types__date__eu) | :format_types__date__eu | `{:strf=>\"%d.%m.%Y\"}` | Define Format Type for viewing date values for the `EU region`. |\n| [F.24](/options/#sections) | [Sections Three Qr Code](/options/sections__three__qr_code) | :sections__three__qr_code | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__meta__qr_code, :format=>nil}]}` | Define text for `\"QR Code\"` in section \"three\". |\n| [F.25](/options/#sections) | [Sections Three Date](/options/sections__three__date) | :sections__three__date | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__date__invoice, :format=>:obj__format_types__date__eu}]}` | Define `date` in section \"three\" |\n| [F.26](/options/#sections) | [Sections Three Headline](/options/sections__three__headline) | :sections__three__headline | `{:content=>nil, :struct=>\"<b><<--a-->> | <<--b-->></b>\", :assigns=>[{:value=>:obj__text__invoice, :format=>nil}, {:value=>:payload__meta__id, :format=>nil}]}` | Define `headlinev in section \"three\". |\n\n\n","dir":"/sections/","name":"three.md","path":"sections/three.md","url":"/sections/three.html"},{"sort":3,"title":"A.3 show__shipping","layout":"page","content":"# show__shipping\n\nShow or Hide `Shipping Row`\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':show__shipping' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :show__shipping => true\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:show__shipping``` | [Show](./#show) | [Six](/sections/six) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```true``` | ```^(?:true|false)``` | Boolean |\n\n## Example A.\n\nHide Shipping\n\n### Output\n\n<img src=\"../assets/images/options/show__shipping--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__shipping => false}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__shipping => false\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nShow Shipping\n\n### Output\n\n<img src=\"../assets/images/options/show__shipping--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__shipping => true}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__shipping => true\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"show__shipping.md","path":"options/show__shipping.md","url":"/options/show__shipping.html"},{"sort":3,"title":"Change your document watermark","layout":"page","content":"<h1 id=\"change-your-document-watermark\">Change your document watermark</h1>\n\n<h2 id=\"overview\">Overview</h2>\n<p>Quickest way to change the watermark on your doocument is:</p>\n<ul>\n <li>Install gem with <code class=\"language-plaintext highlighter-rouge\">gem install write_invoice</code></li>\n <li>Generate Payload with <code class=\"language-plaintext highlighter-rouge\">WriteInvoice::Example.generate()</code></li>\n <li>Set Watermark <code class=\"language-plaintext highlighter-rouge\">text__watermark__:</code> in options.</li>\n <li>Generate Document with <code class=\"language-plaintext highlighter-rouge\">WriteInvoice::Document.generate()</code></li>\n</ul>\n\n<p><em>To Hide your Watermark set <code class=\"language-plaintext highlighter-rouge\">show__watermark: false</code> visit: <a href=\"../options/show__watermark.html\">show__watermark</a></em></p>\n\n<p><img src=\"../assets/images/options/text__watermark--b.png\" /></p>\n\n<h2 id=\"steps\">Steps</h2>\n\n<h3 id=\"1-install-gem\">1: Install Gem</h3>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem <span class=\"nb\">install </span>write_invoice\n</code></pre>  </div></div>\n\n<h3 id=\"2-generate-payload\">2: Generate Payload</h3>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n</code></pre>  </div></div>\n\n<h3 id=\"3-set-watermark-options\">3: Set Watermark options</h3>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">opts</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"ss\">text__watermark: </span><span class=\"s2\">\"Confidential\"</span><span class=\"p\">,</span> \n    <span class=\"ss\">style__watermark__font_size: </span><span class=\"mi\">120</span>\n<span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<h3 id=\"4-generate-document\">4: Generate Document</h3>\n\n<p><em>To Storage</em></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">opts</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"ss\">text__watermark: </span><span class=\"s2\">\"Confidential\"</span><span class=\"p\">,</span> \n    <span class=\"ss\">style__watermark__font_size: </span><span class=\"mi\">120</span>\n<span class=\"p\">}</span>\n\n<span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Document</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">output: </span><span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span> <span class=\"ss\">payload: </span><span class=\"n\">pyld</span><span class=\"p\">,</span> <span class=\"ss\">options: </span><span class=\"n\">opts</span> <span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<p><em>To Memory</em></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">opts</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"ss\">text__watermark: </span><span class=\"s2\">\"Confidential\"</span><span class=\"p\">,</span> \n    <span class=\"ss\">style__watermark__font_size: </span><span class=\"mi\">120</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Document</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">payload: </span><span class=\"n\">pyld</span><span class=\"p\">,</span> <span class=\"ss\">options: </span><span class=\"n\">opts</span> <span class=\"p\">)</span>\n<span class=\"no\">File</span><span class=\"p\">.</span><span class=\"nf\">open</span><span class=\"p\">(</span> <span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span> <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"o\">|</span> <span class=\"n\">f</span> <span class=\"o\">|</span> <span class=\"n\">f</span><span class=\"p\">.</span><span class=\"nf\">write</span><span class=\"p\">(</span> <span class=\"n\">doc</span> <span class=\"p\">)</span> <span class=\"p\">}</span>\n</code></pre>  </div></div>\n","dir":"/tutorials/","name":"change-watermark.md","path":"tutorials/change-watermark.md","url":"/tutorials/change-watermark.html"},{"sort":3,"title":"Payload","permalink":"/payload/","layout":"page","content":"<h1 id=\"payload\">Payload</h1>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'pp'</span>\n<span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">invoices_total: </span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ss\">articles_total: </span><span class=\"mi\">1</span><span class=\"o\">..</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ss\">debug: </span><span class=\"kp\">true</span> <span class=\"p\">)</span>\n<span class=\"nb\">puts</span> <span class=\"n\">payload</span><span class=\"p\">.</span><span class=\"nf\">pretty_inspect</span>\n</code></pre>  </div></div>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\">Name</th>\n <th style=\"text-align: left\">Type</th>\n <th style=\"text-align: left\">Default</th>\n <th style=\"text-align: left\">Required</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">invoices_total:</code></td>\n <td style=\"text-align: left\">Range</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">3..6</code></td>\n <td style=\"text-align: left\">no</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">articles_total:</code></td>\n <td style=\"text-align: left\">Range</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">2..6</code></td>\n <td style=\"text-align: left\">no</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">debug:</code></td>\n <td style=\"text-align: left\">Boolean</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\">no</td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"preview\">Preview</h2>\n\n<div>\n <canvas id=\"canvas\" search=\"\" palette=\"payload_overview\"></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script>\n\n<h2 id=\"example\">Example</h2>\n<p>This is a fictional payload which is generated with <code class=\"language-plaintext highlighter-rouge\">WriteInvoice::Example.generate()</code></p>\n\n<p><em>As Ruby Hash</em></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"s1\">'document'</span> <span class=\"o\">=&gt;</span> \n  <span class=\"p\">{</span><span class=\"s1\">'metadata'</span> <span class=\"o\">=&gt;</span> \n    <span class=\"p\">{</span><span class=\"s1\">'title'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Balin'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'author'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'This is a Demo Document.'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'subject'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Ecommerce Revenue'</span><span class=\"p\">},</span>\n   <span class=\"s1\">'encrypt'</span> <span class=\"o\">=&gt;</span> \n    <span class=\"p\">{</span><span class=\"s1\">'user_password'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Uxr7jivvJwS7xdvpMh68Bqd5YtaGsWbynuKLwZLSde'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'owner_password'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Uxr7jivvJwS7xdvpMh68Bqd5YtaGsWbynuKLwZLSde'</span><span class=\"p\">,</span>\n     <span class=\"s1\">'permissions'</span> <span class=\"o\">=&gt;</span> \n      <span class=\"p\">{</span><span class=\"s1\">'print_document'</span> <span class=\"o\">=&gt;</span> <span class=\"kp\">true</span><span class=\"p\">,</span>\n       <span class=\"s1\">'modify_contents'</span> <span class=\"o\">=&gt;</span> <span class=\"kp\">false</span><span class=\"p\">,</span>\n       <span class=\"s1\">'copy_contents'</span> <span class=\"o\">=&gt;</span> <span class=\"kp\">false</span><span class=\"p\">,</span>\n       <span class=\"s1\">'modify_annotations'</span> <span class=\"o\">=&gt;</span> <span class=\"kp\">false</span><span class=\"p\">}}},</span>\n <span class=\"s1\">'invoices'</span> <span class=\"o\">=&gt;</span> \n  <span class=\"p\">[{</span><span class=\"s1\">'meta'</span> <span class=\"o\">=&gt;</span> \n     <span class=\"p\">{</span><span class=\"s1\">'id'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'S8363649'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'qr_code'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'https://murray.writeinvoice.com/api/S8363649'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'headline'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'S8363649 | Rose Tico'</span><span class=\"p\">,</span>\n      <span class=\"s1\">'group'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'1998-W08'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'date'</span> <span class=\"o\">=&gt;</span> \n     <span class=\"p\">{</span><span class=\"s1\">'period'</span> <span class=\"o\">=&gt;</span> <span class=\"p\">{</span><span class=\"s1\">'from'</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">885423600</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">885423600</span><span class=\"p\">},</span>\n      <span class=\"s1\">'invoice'</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">886719600</span><span class=\"p\">,</span>\n      <span class=\"s1\">'billing'</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">888015600</span><span class=\"p\">},</span>\n    <span class=\"s1\">'from'</span> <span class=\"o\">=&gt;</span> \n     <span class=\"p\">{</span><span class=\"s1\">'address'</span> <span class=\"o\">=&gt;</span> \n       <span class=\"p\">{</span><span class=\"s1\">'name'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Balin'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'phrase'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Fully-configurable systematic function'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'street'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'209 Markus Walks'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'city'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'94799-9873 New Alex'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'country'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'United States of America'</span><span class=\"p\">},</span>\n      <span class=\"s1\">'bank'</span> <span class=\"o\">=&gt;</span> \n       <span class=\"p\">{</span><span class=\"s1\">'name'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Hodkiewicz Group'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'iban'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'GB75KODQ94217971207196'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'bic'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'BKCHGB2UXXX'</span><span class=\"p\">},</span>\n      <span class=\"s1\">'contact'</span> <span class=\"o\">=&gt;</span> \n       <span class=\"p\">{</span><span class=\"s1\">'phone'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'1-399-288-0072 x89236'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'mobile'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'1-808-316-7962 x084'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'email'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'oma.toy@writeinvoice.com'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'website'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'murray.writeinvoice.com'</span><span class=\"p\">},</span>\n      <span class=\"s1\">'tax_id'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'109-79-0901'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'to'</span> <span class=\"o\">=&gt;</span> \n     <span class=\"p\">{</span><span class=\"s1\">'address'</span> <span class=\"o\">=&gt;</span> \n       <span class=\"p\">{</span><span class=\"s1\">'name'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Rose Tico'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'street'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'11974 Veum Island'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'city'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'55098 Port Joeshire'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'country'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Mustafar'</span><span class=\"p\">},</span>\n      <span class=\"s1\">'tax_id'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'631-27-8818'</span><span class=\"p\">},</span>\n    <span class=\"s1\">'items'</span> <span class=\"o\">=&gt;</span> \n     <span class=\"p\">{</span><span class=\"s1\">'articles'</span> <span class=\"o\">=&gt;</span> \n       <span class=\"p\">[{</span><span class=\"s1\">'id'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'276-03-9155'</span><span class=\"p\">,</span>\n         <span class=\"s1\">'name'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Aerodynamic Cotton Coat'</span><span class=\"p\">,</span>\n         <span class=\"s1\">'pieces'</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n         <span class=\"s1\">'single'</span> <span class=\"o\">=&gt;</span> <span class=\"mf\">80.99</span><span class=\"p\">,</span>\n         <span class=\"s1\">'total'</span> <span class=\"o\">=&gt;</span> <span class=\"mf\">242.97</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s1\">'id'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'453-63-3074'</span><span class=\"p\">,</span>\n         <span class=\"s1\">'name'</span> <span class=\"o\">=&gt;</span> <span class=\"s1\">'Aerodynamic Leather Shoes'</span><span class=\"p\">,</span>\n         <span class=\"s1\">'pieces'</span> <span class=\"o\">=&gt;</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n         <span class=\"s1\">'single'</span> <span class=\"o\">=&gt;</span> <span class=\"mf\">74.6</span><span class=\"p\">,</span>\n         <span class=\"s1\">'total'</span> <span class=\"o\">=&gt;</span> <span class=\"mf\">298.4</span><span class=\"p\">}],</span>\n      <span class=\"s1\">'sub_total'</span> <span class=\"o\">=&gt;</span> <span class=\"mf\">541.37</span><span class=\"p\">,</span>\n      <span class=\"s1\">'shipping_fee'</span> <span class=\"o\">=&gt;</span> <span class=\"mf\">3.39</span><span class=\"p\">,</span>\n      <span class=\"s1\">'total_net'</span> <span class=\"o\">=&gt;</span> <span class=\"mf\">544.76</span><span class=\"p\">,</span>\n      <span class=\"s1\">'vat'</span> <span class=\"o\">=&gt;</span> <span class=\"mf\">103.5</span><span class=\"p\">,</span>\n      <span class=\"s1\">'total_gross'</span> <span class=\"o\">=&gt;</span> <span class=\"mf\">648.26</span><span class=\"p\">}}]}</span>\n\n\n<span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Document</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">output: </span><span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span> <span class=\"ss\">payload: </span><span class=\"n\">payload</span><span class=\"p\">,</span> <span class=\"ss\">options: </span><span class=\"p\">{}</span> <span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<p><em>As JSON String</em></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'json'</span>\n<span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"o\">&lt;&lt;-</span><span class=\"no\">EOS</span><span class=\"sh\">\n{\n  \"document\": {\n    \"metadata\": {\n      \"title\": \"Balin\",\n      \"author\": \"This is a Demo Document.\",\n      \"subject\": \"Ecommerce Revenue\"\n    },\n    \"encrypt\": {\n      \"user_password\": \"Uxr7jivvJwS7xdvpMh68Bqd5YtaGsWbynuKLwZLSde\",\n      \"owner_password\": \"Uxr7jivvJwS7xdvpMh68Bqd5YtaGsWbynuKLwZLSde\",\n      \"permissions\": {\n        \"print_document\": true,\n        \"modify_contents\": false,\n        \"copy_contents\": false,\n        \"modify_annotations\": false\n      }\n    }\n  },\n  \"invoices\": [\n    {\n      \"meta\": {\n        \"id\": \"S8363649\",\n        \"qr_code\": \"https://murray.writeinvoice.com/api/S8363649\",\n        \"headline\": \"S8363649 | Rose Tico\",\n        \"group\": \"1998-W08\"\n      },\n      \"date\": {\n        \"period\": {\n          \"from\": 885423600,\n          \"to\": 885423600\n        },\n        \"invoice\": 886719600,\n        \"billing\": 888015600\n      },\n      \"from\": {\n        \"address\": {\n          \"name\": \"Balin\",\n          \"phrase\": \"Fully-configurable systematic function\",\n          \"street\": \"209 Markus Walks\",\n          \"city\": \"94799-9873 New Alex\",\n          \"country\": \"United States of America\"\n        },\n        \"bank\": {\n          \"name\": \"Hodkiewicz Group\",\n          \"iban\": \"GB75KODQ94217971207196\",\n          \"bic\": \"BKCHGB2UXXX\"\n        },\n        \"contact\": {\n          \"phone\": \"1-399-288-0072 x89236\",\n          \"mobile\": \"1-808-316-7962 x084\",\n          \"email\": \"oma.toy@writeinvoice.com\",\n          \"website\": \"murray.writeinvoice.com\"\n        },\n        \"tax_id\": \"109-79-0901\"\n      },\n      \"to\": {\n        \"address\": {\n          \"name\": \"Rose Tico\",\n          \"street\": \"11974 Veum Island\",\n          \"city\": \"55098 Port Joeshire\",\n          \"country\": \"Mustafar\"\n        },\n        \"tax_id\": \"631-27-8818\"\n      },\n      \"items\": {\n        \"articles\": [\n          {\n            \"id\": \"276-03-9155\",\n            \"name\": \"Aerodynamic Cotton Coat\",\n            \"pieces\": 3,\n            \"single\": 80.99,\n            \"total\": 242.97\n          },\n          {\n            \"id\": \"453-63-3074\",\n            \"name\": \"Aerodynamic Leather Shoes\",\n            \"pieces\": 4,\n            \"single\": 74.6,\n            \"total\": 298.4\n          }\n        ],\n        \"sub_total\": 541.37,\n        \"shipping_fee\": 3.39,\n        \"total_net\": 544.76,\n        \"vat\": 103.5,\n        \"total_gross\": 648.26\n      }\n    }\n  ]\n}\n</span><span class=\"no\">EOS</span>\n\n<span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"no\">JSON</span><span class=\"p\">.</span><span class=\"nf\">parse</span><span class=\"p\">(</span> <span class=\"n\">data</span> <span class=\"p\">)</span>\n<span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Document</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">output: </span><span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span> <span class=\"ss\">payload: </span><span class=\"n\">payload</span><span class=\"p\">,</span> <span class=\"ss\">options: </span><span class=\"p\">{}</span> <span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<h2 id=\"structure\">Structure</h2>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"n\">payload</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"ss\">document: </span><span class=\"p\">{</span>\n            <span class=\"ss\">metadata: </span><span class=\"p\">{</span>\n                <span class=\"ss\">title: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                <span class=\"ss\">author: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                <span class=\"ss\">subject: </span><span class=\"s1\">''</span>\n            <span class=\"p\">},</span>\n            <span class=\"ss\">encrypt: </span><span class=\"p\">{</span>\n                <span class=\"ss\">user_password: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                <span class=\"ss\">owner_password: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                <span class=\"ss\">permissions: </span><span class=\"p\">{</span>\n                    <span class=\"ss\">print_document: </span><span class=\"n\">boolean</span><span class=\"p\">,</span>\n                    <span class=\"ss\">modify_contents: </span><span class=\"n\">boolean</span><span class=\"p\">,</span>\n                    <span class=\"ss\">copy_contents: </span><span class=\"n\">boolean</span><span class=\"p\">,</span>\n                    <span class=\"ss\">modify_annotations: </span><span class=\"n\">boolean</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n        <span class=\"ss\">invoices: </span><span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"ss\">meta: </span><span class=\"p\">{</span>\n                    <span class=\"ss\">id: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                    <span class=\"ss\">qr_code: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                    <span class=\"ss\">headline: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                    <span class=\"ss\">group: </span><span class=\"s1\">''</span>\n                <span class=\"p\">},</span>\n                <span class=\"ss\">date: </span><span class=\"p\">{</span>\n                    <span class=\"ss\">period: </span><span class=\"p\">{</span>\n                        <span class=\"ss\">from: </span><span class=\"mi\">0</span><span class=\"p\">,</span> \n                        <span class=\"ss\">to: </span><span class=\"mi\">0</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"ss\">invoice: </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                    <span class=\"ss\">billing: </span><span class=\"mi\">0</span>\n                <span class=\"p\">},</span>\n                <span class=\"ss\">from: </span><span class=\"p\">{</span>\n                    <span class=\"ss\">address: </span><span class=\"p\">{</span>\n                        <span class=\"ss\">name: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">phrase: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">street: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">city: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">country: </span><span class=\"s1\">''</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"ss\">bank: </span><span class=\"p\">{</span>\n                        <span class=\"ss\">name: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">iban: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">bic: </span><span class=\"s1\">''</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"ss\">contact: </span><span class=\"p\">{</span>\n                        <span class=\"ss\">phone: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">mobile: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">email: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">website: </span><span class=\"s1\">''</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"ss\">tax_id: </span><span class=\"s1\">''</span>\n                <span class=\"p\">},</span>\n                <span class=\"ss\">to: </span><span class=\"p\">{</span>\n                    <span class=\"ss\">address: </span><span class=\"p\">{</span>\n                        <span class=\"ss\">name: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">street: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">city: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                        <span class=\"ss\">country: </span><span class=\"s1\">''</span>\n                    <span class=\"p\">},</span>\n                    <span class=\"ss\">tax_id: </span><span class=\"s1\">''</span>\n                <span class=\"p\">},</span>\n                <span class=\"ss\">items: </span><span class=\"p\">{</span>\n                    <span class=\"ss\">articles: </span><span class=\"p\">[</span>\n                        <span class=\"p\">{</span>\n                            <span class=\"ss\">id: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                            <span class=\"ss\">name: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n                            <span class=\"ss\">pieces: </span><span class=\"mi\">0</span><span class=\"p\">,</span>\n                            <span class=\"ss\">single: </span><span class=\"mf\">0.00</span><span class=\"p\">,</span>\n                            <span class=\"ss\">total: </span><span class=\"mf\">0.00</span>\n                        <span class=\"p\">},</span>                    \n                    <span class=\"p\">],</span>\n                    <span class=\"ss\">sub_total: </span><span class=\"mf\">0.00</span><span class=\"p\">,</span>\n                    <span class=\"ss\">shipping_fee: </span><span class=\"mf\">0.00</span><span class=\"p\">,</span>\n                    <span class=\"ss\">total_net: </span><span class=\"mf\">0.00</span><span class=\"p\">,</span>\n                    <span class=\"ss\">vat: </span><span class=\"mf\">0.00</span><span class=\"p\">,</span>\n                    <span class=\"ss\">total_gross: </span><span class=\"mf\">0.00</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n</code></pre>  </div></div>\n","dir":"/payload/","name":"README.md","path":"payload/README.md","url":"/payload/"},{"sort":4,"title":"Encrypt your document","layout":"page","content":"# Encrypt your document\n\n## Overview\n\nTo enable encryption you need to set 2 parameters:\n- Set Passwort in Payload: `payload[:document][:encrypt]`. We use `::Example.generate()` for fast exploring.\n\n```ruby\npayload = {\n document: {\n metadata: { ... }\n encrypt: {\n user_password: '',\n owner_password: '',\n permissions: {\n print_document: boolean,\n modify_contents: boolean,\n copy_contents: boolean,\n modify_annotations: boolean\n }\n }\n }\n invoices: [ ... ]\n}\n```\n\n- Enable Encryption in Options: `{ show__unencrypted: false }`\n\n\n\n## Steps\n\n### 1: Install gem\nInstall module from rubygems.\n\n```bash\ngem install write_invoice\n```\n\n\n### 2: Generate Example Payload\nGenerate a payload with `::example` Class.\n\n```ruby\nrequire 'write_invoice'\n\npyld = WriteInvoice::Example.generate()\n```\n\n\n### 3: Options: Enable Encryption\nSet options as a variable a insert `show__unencrypted: false`\n\n```ruby\nrequire 'write_invoice'\n\npyld = WriteInvoice::Example.generate()\nopts = { show__unencrypted: false }\n\n```\n\n\n### 4: Generate Document\nGenerate `.pdf` Document with encryption.\n\n```ruby\nrequire 'write_invoice'\n\npyld = WriteInvoice::Example.generate( invoices_total: 10..12, articles_total: 5..10 )\nopts = { show__unencrypted: false }\n\nWriteInvoice::Document.generate( output: 'test.pdf', payload: pyld, options: opts )\n```","dir":"/tutorials/","name":"encrypt-document.md","path":"tutorials/encrypt-document.md","url":"/tutorials/encrypt-document.html"},{"sort":4,"title":"Options","permalink":"/options/","layout":"page","content":"<h1 id=\"options\">Options</h1>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Document</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">output: </span><span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span> <span class=\"ss\">payload: </span><span class=\"n\">pyld</span><span class=\"p\">,</span> <span class=\"ss\">options: </span><span class=\"p\">{},</span> <span class=\"ss\">debug: </span><span class=\"kp\">true</span><span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\">Name</th>\n <th style=\"text-align: left\">Type</th>\n <th style=\"text-align: left\">Default</th>\n <th style=\"text-align: left\">Required</th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">output:</code></td>\n <td style=\"text-align: left\">String</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">nil</code></td>\n <td style=\"text-align: left\">no</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">payload:</code></td>\n <td style=\"text-align: left\">Hash</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{}</code></td>\n <td style=\"text-align: left\">yes</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">options:</code></td>\n <td style=\"text-align: left\">Hash</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{}</code></td>\n <td style=\"text-align: left\">no</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">debug:</code></td>\n <td style=\"text-align: left\">Boolean</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\">yes</td>\n </tr>\n </tbody>\n</table>\n\n<h2 id=\"preview\">Preview</h2>\n\n<div>\n <canvas id=\"canvas\" search=\"\" palette=\"option_overview\"></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script>\n\n<h2 id=\"categories\">Categories</h2>\n<h3 id=\"show\">Show</h3>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"><strong>Nr</strong></th>\n <th style=\"text-align: left\"><strong>Name</strong></th>\n <th style=\"text-align: left\"><strong>Key</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong></th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><a href=\"./show__qr_code\">A.1.</a></td>\n <td style=\"text-align: left\"><a href=\"./show__qr_code\">Qr Code</a></td>\n <td style=\"text-align: left\">:show__qr_code</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\"><a href=\"show__qr_code#example-a\">A</a>, <a href=\"show__qr_code#example-b\">B</a></td>\n <td style=\"text-align: left\">Show or Hide <code class=\"language-plaintext highlighter-rouge\">QR Code</code> Image</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./show__sub_total\">A.2.</a></td>\n <td style=\"text-align: left\"><a href=\"./show__sub_total\">Sub Total</a></td>\n <td style=\"text-align: left\">:show__sub_total</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\"><a href=\"show__sub_total#example-a\">A</a>, <a href=\"show__sub_total#example-b\">B</a></td>\n <td style=\"text-align: left\">Show or Hide <code class=\"language-plaintext highlighter-rouge\">Sub Total</code></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./show__shipping\">A.3.</a></td>\n <td style=\"text-align: left\"><a href=\"./show__shipping\">Shipping</a></td>\n <td style=\"text-align: left\">:show__shipping</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\"><a href=\"show__shipping#example-a\">A</a>, <a href=\"show__shipping#example-b\">B</a></td>\n <td style=\"text-align: left\">Show or Hide <code class=\"language-plaintext highlighter-rouge\">Shipping Row</code></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./show__total_net\">A.4.</a></td>\n <td style=\"text-align: left\"><a href=\"./show__total_net\">Total Net</a></td>\n <td style=\"text-align: left\">:show__total_net</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\"><a href=\"show__total_net#example-a\">A</a>, <a href=\"show__total_net#example-b\">B</a></td>\n <td style=\"text-align: left\">Show or Hide <code class=\"language-plaintext highlighter-rouge\">Total Net</code> Row</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./show__vat\">A.5.</a></td>\n <td style=\"text-align: left\"><a href=\"./show__vat\">Vat</a></td>\n <td style=\"text-align: left\">:show__vat</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\"><a href=\"show__vat#example-a\">A</a>, <a href=\"show__vat#example-b\">B</a></td>\n <td style=\"text-align: left\">Show or Hide <code class=\"language-plaintext highlighter-rouge\">VAT</code> Row</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./show__total_gross\">A.6.</a></td>\n <td style=\"text-align: left\"><a href=\"./show__total_gross\">Total Gross</a></td>\n <td style=\"text-align: left\">:show__total_gross</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\"><a href=\"show__total_gross#example-a\">A</a>, <a href=\"show__total_gross#example-b\">B</a></td>\n <td style=\"text-align: left\">Show or Hide <code class=\"language-plaintext highlighter-rouge\">Total Gross</code> Row</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./show__logo\">A.7.</a></td>\n <td style=\"text-align: left\"><a href=\"./show__logo\">Logo</a></td>\n <td style=\"text-align: left\">:show__logo</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">false</code></td>\n <td style=\"text-align: left\"><a href=\"show__logo#example-a\">A</a></td>\n <td style=\"text-align: left\">Show or Hide Logo. To set your Image path or base64 string visit <a href=\"../options/headline__image__src.html\">headline__image__src</a></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./show__watermark\">A.8.</a></td>\n <td style=\"text-align: left\"><a href=\"./show__watermark\">Watermark</a></td>\n <td style=\"text-align: left\">:show__watermark</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\"><a href=\"show__watermark#example-a\">A</a>, <a href=\"show__watermark#example-b\">B</a></td>\n <td style=\"text-align: left\">Show or Hide Watermark. To set watermark text visit <a href=\"../options/text__watermark\">text__watermark</a></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./show__unencrypted\">A.9.</a></td>\n <td style=\"text-align: left\"><a href=\"./show__unencrypted\">Unencrypted</a></td>\n <td style=\"text-align: left\">:show__unencrypted</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">true</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Encrypt or unencrypt .pdf document. To set a password visit <a href=\"../payload/#example\">Payload</a> #example &gt; document &gt; encrypted</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"order\">Order</h3>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"><strong>Nr</strong></th>\n <th style=\"text-align: left\"><strong>Name</strong></th>\n <th style=\"text-align: left\"><strong>Key</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong></th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><a href=\"./order\">B.1.</a></td>\n <td style=\"text-align: left\"><a href=\"./order\"></a></td>\n <td style=\"text-align: left\">:order</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[{:name=&gt;:header, :move_down=&gt;[0]}, {:name=&gt;:two, :move_down=&gt;[:style__sections__pad]}, {:name=&gt;:three, :move_down=&gt;[:style__sections__pad]}, {:name=&gt;:four, :move_down=&gt;[:style__sections__pad, :style__sections__pad]}, {:name=&gt;:five, :move_down=&gt;[:style__sections__pad, :style__sections__pad]}, {:name=&gt;:six, :move_down=&gt;[0]}, {:name=&gt;:seven, :move_down=&gt;[:style__sections__pad, :style__sections__pad]}, {:name=&gt;:eight, :move_down=&gt;[:style__sections__pad]}]</code></td>\n <td style=\"text-align: left\"><a href=\"order#example-a\">A</a>, <a href=\"order#example-b\">B</a></td>\n <td style=\"text-align: left\">Arrange Sections here. For more Informations see <a href=\"../sections/\">Sections</a></td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"text\">Text</h3>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"><strong>Nr</strong></th>\n <th style=\"text-align: left\"><strong>Name</strong></th>\n <th style=\"text-align: left\"><strong>Key</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong></th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__phone\">C.1.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__phone\">Phone</a></td>\n <td style=\"text-align: left\">:text__phone</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Phone:\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__phone#example-a\">A</a>, <a href=\"text__phone#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default text <code class=\"language-plaintext highlighter-rouge\">Phone</code>. Note: Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__mobile\">C.2.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__mobile\">Mobile</a></td>\n <td style=\"text-align: left\">:text__mobile</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Mobil:\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__mobile#example-a\">A</a>, <a href=\"text__mobile#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default text <code class=\"language-plaintext highlighter-rouge\">Mobile</code>. Note: Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__email\">C.3.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__email\">Email</a></td>\n <td style=\"text-align: left\">:text__email</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Email:\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__email#example-a\">A</a>, <a href=\"text__email#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default text <code class=\"language-plaintext highlighter-rouge\">Email</code>. Note: Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__website\">C.4.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__website\">Website</a></td>\n <td style=\"text-align: left\">:text__website</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Website:\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__website#example-a\">A</a>, <a href=\"text__website#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default text <code class=\"language-plaintext highlighter-rouge\">Website</code>. Note: Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__tax_id\">C.5.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__tax_id\">Tax Id</a></td>\n <td style=\"text-align: left\">:text__tax_id</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Tax ID:\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__tax_id#example-a\">A</a>, <a href=\"text__tax_id#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default text <code class=\"language-plaintext highlighter-rouge\">Tax ID</code>. Note: Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__invoice\">C.6.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__invoice\">Invoice</a></td>\n <td style=\"text-align: left\">:text__invoice</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Invoice\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__invoice#example-a\">A</a>, <a href=\"text__invoice#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default text <code class=\"language-plaintext highlighter-rouge\">Invoice</code>. Note: Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__page_count\">C.7.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__page_count\">Page Count</a></td>\n <td style=\"text-align: left\">:text__page_count</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"&lt;page&gt; / &lt;total&gt;\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__page_count#example-a\">A</a>, <a href=\"text__page_count#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Page count output here. Use <code class=\"language-plaintext highlighter-rouge\">&lt;page&gt;</code> to show current page number and <code class=\"language-plaintext highlighter-rouge\">&lt;total&gt;</code> to show sum of all pages.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__articles__nr\">C.8.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__articles__nr\">Articles Nr</a></td>\n <td style=\"text-align: left\">:text__articles__nr</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"&lt;b&gt;NR&lt;/b&gt;\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__articles__nr#example-a\">A</a>, <a href=\"text__articles__nr#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Headline Column <code class=\"language-plaintext highlighter-rouge\">\"Nr\"</code> of Article Section in your preferred Language. Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__articles__id\">C.9.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__articles__id\">Articles Id</a></td>\n <td style=\"text-align: left\">:text__articles__id</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"&lt;b&gt;ID&lt;/b&gt;\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__articles__id#example-a\">A</a>, <a href=\"text__articles__id#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Headline Column <code class=\"language-plaintext highlighter-rouge\">\"ID\"</code> of Article Section in your preferred Language. Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__articles__article\">C.10.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__articles__article\">Articles Article</a></td>\n <td style=\"text-align: left\">:text__articles__article</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"&lt;b&gt;ARTICLE&lt;/b&gt;\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__articles__article#example-a\">A</a>, <a href=\"text__articles__article#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Headline Column <code class=\"language-plaintext highlighter-rouge\">\"Article\"</code> of Article Section in your preferred Language. Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__articles__piece\">C.11.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__articles__piece\">Articles Piece</a></td>\n <td style=\"text-align: left\">:text__articles__piece</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"&lt;b&gt;PIECE&lt;/b&gt;\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__articles__piece#example-a\">A</a>, <a href=\"text__articles__piece#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Headline Column <code class=\"language-plaintext highlighter-rouge\">\"Piece\"</code> of Article Section in your preferred Language. Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__articles__single\">C.12.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__articles__single\">Articles Single</a></td>\n <td style=\"text-align: left\">:text__articles__single</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"&lt;b&gt;SINGLE&lt;/b&gt;\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__articles__single#example-a\">A</a>, <a href=\"text__articles__single#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Headline Column <code class=\"language-plaintext highlighter-rouge\">\"Single\"</code> of Article Section in your preferred Language. Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__articles__total\">C.13.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__articles__total\">Articles Total</a></td>\n <td style=\"text-align: left\">:text__articles__total</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"&lt;b&gt;TOTAL&lt;/b&gt;\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__articles__total#example-a\">A</a>, <a href=\"text__articles__total#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Headline Column <code class=\"language-plaintext highlighter-rouge\">\"Total\"</code> of Article Section in your preferred Language. Optional you can use Inline Formating.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__total__sub_total\">C.14.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__total__sub_total\">Total Sub Total</a></td>\n <td style=\"text-align: left\">:text__total__sub_total</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Subtotal:\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__total__sub_total#example-a\">A</a>, <a href=\"text__total__sub_total#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Row <code class=\"language-plaintext highlighter-rouge\">\"Sub Total\"</code> in the “Article” Section. For hiding the row see <a href=\"../options/show__sub_total\">show__sub_total</a></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__total__shipping\">C.15.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__total__shipping\">Total Shipping</a></td>\n <td style=\"text-align: left\">:text__total__shipping</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"+ Shipping\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__total__shipping#example-a\">A</a>, <a href=\"text__total__shipping#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Row <code class=\"language-plaintext highlighter-rouge\">\"Total Shipping\"</code> in the “Article” Section. For hiding the row see <a href=\"../options/show__shipping\">show__shipping</a></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__total__total_net\">C.16.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__total__total_net\">Total Total Net</a></td>\n <td style=\"text-align: left\">:text__total__total_net</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"&lt;b&gt;Total (net):&lt;/b&gt;\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__total__total_net#example-a\">A</a>, <a href=\"text__total__total_net#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Row <code class=\"language-plaintext highlighter-rouge\">\"Total Net\"</code> in the “Article” Section. For hiding the row see <a href=\"../options/show__total_net\">show__total_net</a></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__total__vat\">C.17.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__total__vat\">Total Vat</a></td>\n <td style=\"text-align: left\">:text__total__vat</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"+ VAT 19 %\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__total__vat#example-a\">A</a>, <a href=\"text__total__vat#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Row <code class=\"language-plaintext highlighter-rouge\">\"Total Vat\"</code> in the “Article” Section. For hiding the row see <a href=\"../options/show__total_vat\">show__total_vat</a></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__total__total_gross\">C.18.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__total__total_gross\">Total Total Gross</a></td>\n <td style=\"text-align: left\">:text__total__total_gross</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"&lt;b&gt;Total (gross):&lt;/b&gt;\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__total__total_gross#example-a\">A</a>, <a href=\"text__total__total_gross#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Row <code class=\"language-plaintext highlighter-rouge\">\"Total Gross\"</code> in the “Article” Section. For hiding the row see <a href=\"../options/show__total_gross\">show__total_gross</a></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__footer__left\">C.19.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__footer__left\">Footer Left</a></td>\n <td style=\"text-align: left\">:text__footer__left</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Postal\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__footer__left#example-a\">A</a>, <a href=\"text__footer__left#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">Headline</code> of Footer on the <code class=\"language-plaintext highlighter-rouge\">Left</code> column</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__footer__center\">C.20.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__footer__center\">Footer Center</a></td>\n <td style=\"text-align: left\">:text__footer__center</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Bank\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__footer__center#example-a\">A</a>, <a href=\"text__footer__center#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">Headline</code> of Footer on the <code class=\"language-plaintext highlighter-rouge\">Center</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__footer__right\">C.21.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__footer__right\">Footer Right</a></td>\n <td style=\"text-align: left\">:text__footer__right</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Contact\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__footer__right#example-a\">A</a>, <a href=\"text__footer__right#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">Headline</code> of Footer on the <code class=\"language-plaintext highlighter-rouge\">Right</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./text__watermark\">C.22.</a></td>\n <td style=\"text-align: left\"><a href=\"./text__watermark\">Watermark</a></td>\n <td style=\"text-align: left\">:text__watermark</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Example\"</code></td>\n <td style=\"text-align: left\"><a href=\"text__watermark#example-a\">A</a>, <a href=\"text__watermark#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">watermark text</code></td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"style\">Style</h3>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"><strong>Nr</strong></th>\n <th style=\"text-align: left\"><strong>Name</strong></th>\n <th style=\"text-align: left\"><strong>Key</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong></th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__document__format\">D.1.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__document__format\">Document Format</a></td>\n <td style=\"text-align: left\">:style__document__format</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"A4\"</code></td>\n <td style=\"text-align: left\"><a href=\"style__document__format#example-a\">A</a>, <a href=\"style__document__format#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Format of the Document here. For more Information visit: <a href=\"https://prawnpdf.org/docs/0.11.1/Prawn/Document/PageGeometry.html\">prawnpdf.org/docs/0.11.1/Prawn/Document/PageGeometry.html</a></td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__page_count__align\">D.2.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__page_count__align\">Page Count Align</a></td>\n <td style=\"text-align: left\">:style__page_count__align</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:right</code></td>\n <td style=\"text-align: left\"><a href=\"style__page_count__align#example-a\">A</a>, <a href=\"style__page_count__align#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Page Count alignment</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__page_count__start_count_at\">D.3.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__page_count__start_count_at\">Page Count Start Count At</a></td>\n <td style=\"text-align: left\">:style__page_count__start_count_at</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">1</code></td>\n <td style=\"text-align: left\"><a href=\"style__page_count__start_count_at#example-a\">A</a>, <a href=\"style__page_count__start_count_at#example-b\">B</a></td>\n <td style=\"text-align: left\">Start to count from.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__page_count__offset_y\">D.4.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__page_count__offset_y\">Page Count Offset Y</a></td>\n <td style=\"text-align: left\">:style__page_count__offset_y</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">0</code></td>\n <td style=\"text-align: left\"><a href=\"style__page_count__offset_y#example-a\">A</a>, <a href=\"style__page_count__offset_y#example-b\">B</a></td>\n <td style=\"text-align: left\">Set an <code class=\"language-plaintext highlighter-rouge\">y offset</code> for page count string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__font__name\">D.5.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__font__name\">Font Name</a></td>\n <td style=\"text-align: left\">:style__font__name</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Helvetica\"</code></td>\n <td style=\"text-align: left\"><a href=\"style__font__name#example-a\">A</a></td>\n <td style=\"text-align: left\">Set standard <code class=\"language-plaintext highlighter-rouge\">font name</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__font__family\">D.6.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__font__family\">Font Family</a></td>\n <td style=\"text-align: left\">:style__font__family</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{}</code></td>\n <td style=\"text-align: left\"><a href=\"style__font__family#example-a\">A</a></td>\n <td style=\"text-align: left\">Set standard <code class=\"language-plaintext highlighter-rouge\">font name</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__font__default\">D.7.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__font__default\">Font Default</a></td>\n <td style=\"text-align: left\">:style__font__default</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">10</code></td>\n <td style=\"text-align: left\"><a href=\"style__font__default#example-a\">A</a>, <a href=\"style__font__default#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default <code class=\"language-plaintext highlighter-rouge\">font size</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__font__small\">D.8.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__font__small\">Font Small</a></td>\n <td style=\"text-align: left\">:style__font__small</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">8</code></td>\n <td style=\"text-align: left\"><a href=\"style__font__small#example-a\">A</a>, <a href=\"style__font__small#example-b\">B</a></td>\n <td style=\"text-align: left\">Set small <code class=\"language-plaintext highlighter-rouge\">font size</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__colors__background\">D.9.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__colors__background\">Colors Background</a></td>\n <td style=\"text-align: left\">:style__colors__background</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"FFFFFF\"</code></td>\n <td style=\"text-align: left\"><a href=\"style__colors__background#example-a\">A</a>, <a href=\"style__colors__background#example-b\">B</a></td>\n <td style=\"text-align: left\">Set document background color (not full supported).</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__colors__header__default\">D.10.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__colors__header__default\">Colors Header Default</a></td>\n <td style=\"text-align: left\">:style__colors__header__default</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"000000\"</code></td>\n <td style=\"text-align: left\"><a href=\"style__colors__header__default#example-a\">A</a>, <a href=\"style__colors__header__default#example-b\">B</a></td>\n <td style=\"text-align: left\">Set background color for header section</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__colors__rows__even\">D.11.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__colors__rows__even\">Colors Rows Even</a></td>\n <td style=\"text-align: left\">:style__colors__rows__even</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"F0F0F0\"</code></td>\n <td style=\"text-align: left\"><a href=\"style__colors__rows__even#example-a\">A</a>, <a href=\"style__colors__rows__even#example-b\">B</a></td>\n <td style=\"text-align: left\">Set color for <code class=\"language-plaintext highlighter-rouge\">even rows</code> in the article section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__colors__rows__odd\">D.12.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__colors__rows__odd\">Colors Rows Odd</a></td>\n <td style=\"text-align: left\">:style__colors__rows__odd</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"FFFFFF\"</code></td>\n <td style=\"text-align: left\"><a href=\"style__colors__rows__odd#example-a\">A</a>, <a href=\"style__colors__rows__odd#example-b\">B</a></td>\n <td style=\"text-align: left\">Set color for <code class=\"language-plaintext highlighter-rouge\">even rows</code> in the article section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__header__height\">D.13.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__header__height\">Header Height</a></td>\n <td style=\"text-align: left\">:style__header__height</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">90</code></td>\n <td style=\"text-align: left\"><a href=\"style__header__height#example-a\">A</a>, <a href=\"style__header__height#example-b\">B</a></td>\n <td style=\"text-align: left\">Set total height of header section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__address_label__offset_x\">D.14.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__address_label__offset_x\">Address Label Offset X</a></td>\n <td style=\"text-align: left\">:style__address_label__offset_x</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">20</code></td>\n <td style=\"text-align: left\"><a href=\"style__address_label__offset_x#example-a\">A</a>, <a href=\"style__address_label__offset_x#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">x offset</code> for address label to adjust position for envelopes with window.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__address_label__move_down_one\">D.15.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__address_label__move_down_one\">Address Label Move Down One</a></td>\n <td style=\"text-align: left\">:style__address_label__move_down_one</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">15</code></td>\n <td style=\"text-align: left\"><a href=\"style__address_label__move_down_one#example-a\">A</a>, <a href=\"style__address_label__move_down_one#example-b\">B</a></td>\n <td style=\"text-align: left\">Set distance between sender and receiver.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__address_label__move_down_two\">D.16.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__address_label__move_down_two\">Address Label Move Down Two</a></td>\n <td style=\"text-align: left\">:style__address_label__move_down_two</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">100</code></td>\n <td style=\"text-align: left\"><a href=\"style__address_label__move_down_two#example-a\">A</a>, <a href=\"style__address_label__move_down_two#example-b\">B</a></td>\n <td style=\"text-align: left\">Set distance between address label and next section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__footer__height\">D.17.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__footer__height\">Footer Height</a></td>\n <td style=\"text-align: left\">:style__footer__height</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">60</code></td>\n <td style=\"text-align: left\"><a href=\"style__footer__height#example-a\">A</a>, <a href=\"style__footer__height#example-b\">B</a></td>\n <td style=\"text-align: left\">Set total height of footer section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__footer__border_width\">D.18.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__footer__border_width\">Footer Border Width</a></td>\n <td style=\"text-align: left\">:style__footer__border_width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">1</code></td>\n <td style=\"text-align: left\"><a href=\"style__footer__border_width#example-a\">A</a>, <a href=\"style__footer__border_width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border width which differs footer and section before.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__footer__borders\">D.19.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__footer__borders\">Footer Borders</a></td>\n <td style=\"text-align: left\">:style__footer__borders</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[:top]</code></td>\n <td style=\"text-align: left\"><a href=\"style__footer__borders#example-a\">A</a>, <a href=\"style__footer__borders#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border type which differs footer and section before.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__sections__pad\">D.20.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__sections__pad\">Sections Pad</a></td>\n <td style=\"text-align: left\">:style__sections__pad</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">10</code></td>\n <td style=\"text-align: left\"><a href=\"style__sections__pad#example-a\">A</a>, <a href=\"style__sections__pad#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default padding between sections.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__nr__align\">D.21.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__nr__align\">Articles Nr Align</a></td>\n <td style=\"text-align: left\">:style__articles__nr__align</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:left</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__nr__align#example-a\">A</a>, <a href=\"style__articles__nr__align#example-b\">B</a></td>\n <td style=\"text-align: left\">Set align of Article <code class=\"language-plaintext highlighter-rouge\">\"Nr\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__nr__width\">D.22.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__nr__width\">Articles Nr Width</a></td>\n <td style=\"text-align: left\">:style__articles__nr__width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">40</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__nr__width#example-a\">A</a>, <a href=\"style__articles__nr__width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set width of Article <code class=\"language-plaintext highlighter-rouge\">\"Nr\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__id__align\">D.23.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__id__align\">Articles Id Align</a></td>\n <td style=\"text-align: left\">:style__articles__id__align</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:left</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__id__align#example-a\">A</a>, <a href=\"style__articles__id__align#example-b\">B</a></td>\n <td style=\"text-align: left\">Set alignment of Article <code class=\"language-plaintext highlighter-rouge\">\"ID\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__id__width\">D.24.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__id__width\">Articles Id Width</a></td>\n <td style=\"text-align: left\">:style__articles__id__width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">60</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__id__width#example-a\">A</a>, <a href=\"style__articles__id__width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set width of Article <code class=\"language-plaintext highlighter-rouge\">\"ID\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__article__align\">D.25.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__article__align\">Articles Article Align</a></td>\n <td style=\"text-align: left\">:style__articles__article__align</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:left</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__article__align#example-a\">A</a>, <a href=\"style__articles__article__align#example-b\">B</a></td>\n <td style=\"text-align: left\">Set alignment of Article <code class=\"language-plaintext highlighter-rouge\">\"Article\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__article__width\">D.26.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__article__width\">Articles Article Width</a></td>\n <td style=\"text-align: left\">:style__articles__article__width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">220</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__article__width#example-a\">A</a>, <a href=\"style__articles__article__width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set width of Article <code class=\"language-plaintext highlighter-rouge\">\"Article\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__piece__align\">D.27.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__piece__align\">Articles Piece Align</a></td>\n <td style=\"text-align: left\">:style__articles__piece__align</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:right</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__piece__align#example-a\">A</a>, <a href=\"style__articles__piece__align#example-b\">B</a></td>\n <td style=\"text-align: left\">Set alignment of Article <code class=\"language-plaintext highlighter-rouge\">\"Piece\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__piece__width\">D.28.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__piece__width\">Articles Piece Width</a></td>\n <td style=\"text-align: left\">:style__articles__piece__width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">80</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__piece__width#example-a\">A</a>, <a href=\"style__articles__piece__width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set width of Article <code class=\"language-plaintext highlighter-rouge\">\"Piece\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__single__align\">D.29.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__single__align\">Articles Single Align</a></td>\n <td style=\"text-align: left\">:style__articles__single__align</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:right</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__single__align#example-a\">A</a>, <a href=\"style__articles__single__align#example-b\">B</a></td>\n <td style=\"text-align: left\">Set alignment of Article <code class=\"language-plaintext highlighter-rouge\">\"Single\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__single__width\">D.30.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__single__width\">Articles Single Width</a></td>\n <td style=\"text-align: left\">:style__articles__single__width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">60</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__single__width#example-a\">A</a>, <a href=\"style__articles__single__width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set width of Article <code class=\"language-plaintext highlighter-rouge\">\"Single\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__single__format\">D.31.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__single__format\">Articles Single Format</a></td>\n <td style=\"text-align: left\">:style__articles__single__format</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:format_types__currency__short</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__single__format#example-a\">A</a></td>\n <td style=\"text-align: left\">Set Format Type of Article <code class=\"language-plaintext highlighter-rouge\">\"Single\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__total__align\">D.32.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__total__align\">Articles Total Align</a></td>\n <td style=\"text-align: left\">:style__articles__total__align</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:right</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__total__align#example-a\">A</a>, <a href=\"style__articles__total__align#example-b\">B</a></td>\n <td style=\"text-align: left\">Set alignement of Article <code class=\"language-plaintext highlighter-rouge\">\"Total\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__total__width\">D.33.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__total__width\">Articles Total Width</a></td>\n <td style=\"text-align: left\">:style__articles__total__width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">60</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__total__width#example-a\">A</a>, <a href=\"style__articles__total__width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set width of Article <code class=\"language-plaintext highlighter-rouge\">\"Total\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__articles__total__format\">D.34.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__articles__total__format\">Articles Total Format</a></td>\n <td style=\"text-align: left\">:style__articles__total__format</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:format_types__currency__short</code></td>\n <td style=\"text-align: left\"><a href=\"style__articles__total__format#example-a\">A</a></td>\n <td style=\"text-align: left\">Set Format Type of Article <code class=\"language-plaintext highlighter-rouge\">\"Total\"</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__sub_total__borders\">D.35.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__sub_total__borders\">Total Sub Total Borders</a></td>\n <td style=\"text-align: left\">:style__total__sub_total__borders</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[:top]</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__sub_total__borders#example-a\">A</a>, <a href=\"style__total__sub_total__borders#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border type of <code class=\"language-plaintext highlighter-rouge\">\"Sub Total\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__sub_total__border_width\">D.36.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__sub_total__border_width\">Total Sub Total Border Width</a></td>\n <td style=\"text-align: left\">:style__total__sub_total__border_width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">1</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__sub_total__border_width#example-a\">A</a>, <a href=\"style__total__sub_total__border_width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border width of <code class=\"language-plaintext highlighter-rouge\">\"Sub Total\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__shipping__borders\">D.37.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__shipping__borders\">Total Shipping Borders</a></td>\n <td style=\"text-align: left\">:style__total__shipping__borders</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[:top]</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__shipping__borders#example-a\">A</a>, <a href=\"style__total__shipping__borders#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border type of <code class=\"language-plaintext highlighter-rouge\">\"Shipping\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__shipping__border_width\">D.38.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__shipping__border_width\">Total Shipping Border Width</a></td>\n <td style=\"text-align: left\">:style__total__shipping__border_width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">0</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__shipping__border_width#example-a\">A</a>, <a href=\"style__total__shipping__border_width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border width of <code class=\"language-plaintext highlighter-rouge\">\"Shipping\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__total_net__borders\">D.39.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__total_net__borders\">Total Total Net Borders</a></td>\n <td style=\"text-align: left\">:style__total__total_net__borders</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[:top]</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__total_net__borders#example-a\">A</a>, <a href=\"style__total__total_net__borders#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border type of <code class=\"language-plaintext highlighter-rouge\">\"Total Net\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__total_net__border_width\">D.40.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__total_net__border_width\">Total Total Net Border Width</a></td>\n <td style=\"text-align: left\">:style__total__total_net__border_width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">1</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__total_net__border_width#example-a\">A</a>, <a href=\"style__total__total_net__border_width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border type of <code class=\"language-plaintext highlighter-rouge\">\"Total Net\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__vat__borders\">D.41.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__vat__borders\">Total Vat Borders</a></td>\n <td style=\"text-align: left\">:style__total__vat__borders</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[:top]</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__vat__borders#example-a\">A</a>, <a href=\"style__total__vat__borders#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border type of <code class=\"language-plaintext highlighter-rouge\">\"VAT\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__vat__border_width\">D.42.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__vat__border_width\">Total Vat Border Width</a></td>\n <td style=\"text-align: left\">:style__total__vat__border_width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">0</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__vat__border_width#example-a\">A</a>, <a href=\"style__total__vat__border_width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border width of <code class=\"language-plaintext highlighter-rouge\">\"VAT\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__total_gross__borders\">D.43.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__total_gross__borders\">Total Total Gross Borders</a></td>\n <td style=\"text-align: left\">:style__total__total_gross__borders</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[:top]</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__total_gross__borders#example-a\">A</a>, <a href=\"style__total__total_gross__borders#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border type of <code class=\"language-plaintext highlighter-rouge\">\"Total Gross\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__total__total_gross__border_width\">D.44.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__total__total_gross__border_width\">Total Total Gross Border Width</a></td>\n <td style=\"text-align: left\">:style__total__total_gross__border_width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">0</code></td>\n <td style=\"text-align: left\"><a href=\"style__total__total_gross__border_width#example-a\">A</a>, <a href=\"style__total__total_gross__border_width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set border width of <code class=\"language-plaintext highlighter-rouge\">\"Total Gross\"</code> Area in “Article” Section.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__qr_code__width\">D.45.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__qr_code__width\">Qr Code Width</a></td>\n <td style=\"text-align: left\">:style__qr_code__width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">40</code></td>\n <td style=\"text-align: left\"><a href=\"style__qr_code__width#example-a\">A</a>, <a href=\"style__qr_code__width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">QR Code</code> width (and height).</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__watermark__rotate\">D.46.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__watermark__rotate\">Watermark Rotate</a></td>\n <td style=\"text-align: left\">:style__watermark__rotate</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">45</code></td>\n <td style=\"text-align: left\"><a href=\"style__watermark__rotate#example-a\">A</a>, <a href=\"style__watermark__rotate#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">rotation of watermark</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__watermark__fill_color\">D.47.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__watermark__fill_color\">Watermark Fill Color</a></td>\n <td style=\"text-align: left\">:style__watermark__fill_color</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"383838\"</code></td>\n <td style=\"text-align: left\"><a href=\"style__watermark__fill_color#example-a\">A</a>, <a href=\"style__watermark__fill_color#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">rotation of watermark</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__watermark__font_size\">D.48.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__watermark__font_size\">Watermark Font Size</a></td>\n <td style=\"text-align: left\">:style__watermark__font_size</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">180</code></td>\n <td style=\"text-align: left\"><a href=\"style__watermark__font_size#example-a\">A</a>, <a href=\"style__watermark__font_size#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">font size</code> of watermark.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__watermark__font_family\">D.49.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__watermark__font_family\">Watermark Font Family</a></td>\n <td style=\"text-align: left\">:style__watermark__font_family</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"Times-Roman\"</code></td>\n <td style=\"text-align: left\"><a href=\"style__watermark__font_family#example-a\">A</a>, <a href=\"style__watermark__font_family#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">font family</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./style__watermark__transparency\">D.50.</a></td>\n <td style=\"text-align: left\"><a href=\"./style__watermark__transparency\">Watermark Transparency</a></td>\n <td style=\"text-align: left\">:style__watermark__transparency</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">0.1</code></td>\n <td style=\"text-align: left\"><a href=\"style__watermark__transparency#example-a\">A</a>, <a href=\"style__watermark__transparency#example-b\">B</a></td>\n <td style=\"text-align: left\">Set watermark <code class=\"language-plaintext highlighter-rouge\">transparency</code>.</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"format_types\">Format_types</h3>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"><strong>Nr</strong></th>\n <th style=\"text-align: left\"><strong>Name</strong></th>\n <th style=\"text-align: left\"><strong>Key</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong></th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><a href=\"./format_types__currency__short\">E.1.</a></td>\n <td style=\"text-align: left\"><a href=\"./format_types__currency__short\">Currency Short</a></td>\n <td style=\"text-align: left\">:format_types__currency__short</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:delimiter=&gt;\".\", :separator=&gt;\",\", :precision=&gt;2, :unit=&gt;\"\", :format=&gt;\"%n €\"}</code></td>\n <td style=\"text-align: left\"><a href=\"format_types__currency__short#example-a\">A</a>, <a href=\"format_types__currency__short#example-b\">B</a></td>\n <td style=\"text-align: left\">Define Format Type for viewing currency values in a <code class=\"language-plaintext highlighter-rouge\">short form</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./format_types__currency__long\">E.2.</a></td>\n <td style=\"text-align: left\"><a href=\"./format_types__currency__long\">Currency Long</a></td>\n <td style=\"text-align: left\">:format_types__currency__long</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:delimiter=&gt;\".\", :separator=&gt;\",\", :precision=&gt;2, :unit=&gt;\"\", :format=&gt;\"%n EUR\"}</code></td>\n <td style=\"text-align: left\"><a href=\"format_types__currency__long#example-a\">A</a>, <a href=\"format_types__currency__long#example-b\">B</a></td>\n <td style=\"text-align: left\">Define Format Type for viewing currency values in a <code class=\"language-plaintext highlighter-rouge\">long form</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./format_types__date__eu\">E.3.</a></td>\n <td style=\"text-align: left\"><a href=\"./format_types__date__eu\">Date Eu</a></td>\n <td style=\"text-align: left\">:format_types__date__eu</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:strf=&gt;\"%d.%m.%Y\"}</code></td>\n <td style=\"text-align: left\"><a href=\"format_types__date__eu#example-a\">A</a>, <a href=\"format_types__date__eu#example-b\">B</a></td>\n <td style=\"text-align: left\">Define Format Type for viewing date values for the <code class=\"language-plaintext highlighter-rouge\">EU region</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./format_types__date__short\">E.4.</a></td>\n <td style=\"text-align: left\"><a href=\"./format_types__date__short\">Date Short</a></td>\n <td style=\"text-align: left\">:format_types__date__short</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:strf=&gt;\"%B %d\"}</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Define Format Type for viewing date values in a <code class=\"language-plaintext highlighter-rouge\">short form</code>. (As default not in use)</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./format_types__date__default\">E.5.</a></td>\n <td style=\"text-align: left\"><a href=\"./format_types__date__default\">Date Default</a></td>\n <td style=\"text-align: left\">:format_types__date__default</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:strf=&gt;\"%B %d, %Y\"}</code></td>\n <td style=\"text-align: left\"><a href=\"format_types__date__default#example-a\">A</a>, <a href=\"format_types__date__default#example-b\">B</a></td>\n <td style=\"text-align: left\">Define Format Type for viewing date values by <code class=\"language-plaintext highlighter-rouge\">default</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./format_types__date__long\">E.6.</a></td>\n <td style=\"text-align: left\"><a href=\"./format_types__date__long\">Date Long</a></td>\n <td style=\"text-align: left\">:format_types__date__long</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:strf=&gt;\"%A %B %d %Y %I:%M%P UTC\"}</code></td>\n <td style=\"text-align: left\"><a href=\"format_types__date__long#example-a\">A</a>, <a href=\"format_types__date__long#example-b\">B</a></td>\n <td style=\"text-align: left\">Define Format Type for viewing date values in a <code class=\"language-plaintext highlighter-rouge\">long form</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./format_types__date__year\">E.7.</a></td>\n <td style=\"text-align: left\"><a href=\"./format_types__date__year\">Date Year</a></td>\n <td style=\"text-align: left\">:format_types__date__year</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:strf=&gt;\"%Y\"}</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Define Format Type for showing <code class=\"language-plaintext highlighter-rouge\">only the year</code>. (As default not in use)</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"sections\">Sections</h3>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"><strong>Nr</strong></th>\n <th style=\"text-align: left\"><strong>Name</strong></th>\n <th style=\"text-align: left\"><strong>Key</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong></th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_headline\">F.1.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_headline\">Nine Left Headline</a></td>\n <td style=\"text-align: left\">:sections__nine__left_headline</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;b&gt;&lt;&lt;--a--&gt;&gt;&lt;/b&gt;\", :assigns=&gt;[{:value=&gt;:obj__text__footer__left, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__left_headline#example-a\">A</a>, <a href=\"sections__nine__left_headline#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Headline of the <code class=\"language-plaintext highlighter-rouge\">left footer</code> column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_one\">F.2.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_one\">Nine Left One</a></td>\n <td style=\"text-align: left\">:sections__nine__left_one</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__from__address__name, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__left_one#example-a\">A</a>, <a href=\"sections__nine__left_one#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">first row</code> of the left footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_two\">F.3.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_two\">Nine Left Two</a></td>\n <td style=\"text-align: left\">:sections__nine__left_two</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__from__address__street, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__left_two#example-a\">A</a>, <a href=\"sections__nine__left_two#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">second row</code> of the left footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_three\">F.4.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_three\">Nine Left Three</a></td>\n <td style=\"text-align: left\">:sections__nine__left_three</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__from__address__city, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__left_three#example-a\">A</a>, <a href=\"sections__nine__left_three#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">third row</code> of the left footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_four\">F.5.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__left_four\">Nine Left Four</a></td>\n <td style=\"text-align: left\">:sections__nine__left_four</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__from__address__country, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__left_four#example-a\">A</a>, <a href=\"sections__nine__left_four#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">fourth row</code> of the left footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_headline\">F.6.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_headline\">Nine Center Headline</a></td>\n <td style=\"text-align: left\">:sections__nine__center_headline</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;b&gt;&lt;&lt;--a--&gt;&gt;&lt;/b&gt;\", :assigns=&gt;[{:value=&gt;:obj__text__footer__center, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__center_headline#example-a\">A</a>, <a href=\"sections__nine__center_headline#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Headline of the <code class=\"language-plaintext highlighter-rouge\">center footer column</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_one\">F.7.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_one\">Nine Center One</a></td>\n <td style=\"text-align: left\">:sections__nine__center_one</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__from__bank__name, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__center_one#example-a\">A</a>, <a href=\"sections__nine__center_one#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">first row</code> of the center footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_two\">F.8.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_two\">Nine Center Two</a></td>\n <td style=\"text-align: left\">:sections__nine__center_two</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__from__bank__iban, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__center_two#example-a\">A</a>, <a href=\"sections__nine__center_two#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">second row</code> of the center footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_three\">F.9.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_three\">Nine Center Three</a></td>\n <td style=\"text-align: left\">:sections__nine__center_three</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__from__bank__bic, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__center_three#example-a\">A</a>, <a href=\"sections__nine__center_three#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">third row</code> of the center footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_four\">F.10.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__center_four\">Nine Center Four</a></td>\n <td style=\"text-align: left\">:sections__nine__center_four</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;b&gt;&lt;&lt;--a--&gt;&gt; &lt;&lt;--b--&gt;&gt;&lt;/b&gt;\", :assigns=&gt;[{:value=&gt;:obj__text__tax_id, :format=&gt;nil}, {:value=&gt;:payload__from__tax_id, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__center_four#example-a\">A</a>, <a href=\"sections__nine__center_four#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">fourth row</code> of the center footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_headline\">F.11.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_headline\">Nine Right Headline</a></td>\n <td style=\"text-align: left\">:sections__nine__right_headline</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;b&gt;&lt;&lt;--a--&gt;&gt;&lt;/b&gt;\", :assigns=&gt;[{:value=&gt;:obj__text__footer__right, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__right_headline#example-a\">A</a>, <a href=\"sections__nine__right_headline#example-b\">B</a></td>\n <td style=\"text-align: left\">Set Headline of the right footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_one\">F.12.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_one\">Nine Right One</a></td>\n <td style=\"text-align: left\">:sections__nine__right_one</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt; &lt;&lt;--b--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:obj__text__phone, :format=&gt;nil}, {:value=&gt;:payload__from__contact__phone, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__right_one#example-a\">A</a>, <a href=\"sections__nine__right_one#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">first row</code> of the right footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_two\">F.13.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_two\">Nine Right Two</a></td>\n <td style=\"text-align: left\">:sections__nine__right_two</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt; &lt;&lt;--b--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:obj__text__mobile, :format=&gt;nil}, {:value=&gt;:payload__from__contact__mobile, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__right_two#example-a\">A</a>, <a href=\"sections__nine__right_two#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the second row of the right footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_three\">F.14.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_three\">Nine Right Three</a></td>\n <td style=\"text-align: left\">:sections__nine__right_three</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt; &lt;&lt;--b--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:obj__text__email, :format=&gt;nil}, {:value=&gt;:payload__from__contact__email, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__right_three#example-a\">A</a>, <a href=\"sections__nine__right_three#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">third row</code> of the right footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_four\">F.15.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__nine__right_four\">Nine Right Four</a></td>\n <td style=\"text-align: left\">:sections__nine__right_four</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt; &lt;&lt;--b--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:obj__text__website, :format=&gt;nil}, {:value=&gt;:payload__from__contact__website, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__nine__right_four#example-a\">A</a>, <a href=\"sections__nine__right_four#example-b\">B</a></td>\n <td style=\"text-align: left\">Set the <code class=\"language-plaintext highlighter-rouge\">fourth row</code> of the right footer column.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__eight__snippet\">F.16.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__eight__snippet\">Eight Snippet</a></td>\n <td style=\"text-align: left\">:sections__eight__snippet</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"Thank you for using &lt;&lt;--a--&gt;&gt; Services.\\n\\n\\nSincerely,\\n\\n&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__from__address__name, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__eight__snippet#example-a\">A</a>, <a href=\"sections__eight__snippet#example-b\">B</a></td>\n <td style=\"text-align: left\">Define text for section eight.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__seven__snippet\">F.17.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__seven__snippet\">Seven Snippet</a></td>\n <td style=\"text-align: left\">:sections__seven__snippet</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\" We will debit your bank account for &lt;b&gt;&lt;&lt;--a--&gt;&gt;&lt;/b&gt; on &lt;&lt;--b--&gt;&gt;. Please ensure you have sufficient funds in your bank account to avoid service disruptions.\", :assigns=&gt;[{:value=&gt;:payload__items__total_gross, :format=&gt;:obj__format_types__currency__long}, {:value=&gt;:payload__date__billing, :format=&gt;:obj__format_types__date__long}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__seven__snippet#example-a\">A</a>, <a href=\"sections__seven__snippet#example-b\">B</a></td>\n <td style=\"text-align: left\">Define text for section <code class=\"language-plaintext highlighter-rouge\">seven</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__six__sub_total\">F.18.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__six__sub_total\">Six Sub Total</a></td>\n <td style=\"text-align: left\">:sections__six__sub_total</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__items__sub_total, :format=&gt;:obj__format_types__currency__short}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__six__sub_total#example-a\">A</a>, <a href=\"sections__six__sub_total#example-b\">B</a></td>\n <td style=\"text-align: left\">Define text for area <code class=\"language-plaintext highlighter-rouge\">\"Sub Total\"</code> in section “six”.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__six__shipping\">F.19.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__six__shipping\">Six Shipping</a></td>\n <td style=\"text-align: left\">:sections__six__shipping</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__items__shipping_fee, :format=&gt;:obj__format_types__currency__short}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__six__shipping#example-a\">A</a>, <a href=\"sections__six__shipping#example-b\">B</a></td>\n <td style=\"text-align: left\">Define text for area <code class=\"language-plaintext highlighter-rouge\">\"Shipping\"</code> in section “six”.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__six__total_net\">F.20.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__six__total_net\">Six Total Net</a></td>\n <td style=\"text-align: left\">:sections__six__total_net</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;b&gt;&lt;&lt;--a--&gt;&gt;&lt;b&gt; \", :assigns=&gt;[{:value=&gt;:payload__items__total_net, :format=&gt;:obj__format_types__currency__short}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__six__total_net#example-a\">A</a>, <a href=\"sections__six__total_net#example-b\">B</a></td>\n <td style=\"text-align: left\">Define text for area <code class=\"language-plaintext highlighter-rouge\">\"Total Net\"</code> in section “six”.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__six__vat\">F.21.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__six__vat\">Six Vat</a></td>\n <td style=\"text-align: left\">:sections__six__vat</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__items__vat, :format=&gt;:obj__format_types__currency__short}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__six__vat#example-a\">A</a>, <a href=\"sections__six__vat#example-b\">B</a></td>\n <td style=\"text-align: left\">Define text for area <code class=\"language-plaintext highlighter-rouge\">\"Vat\"</code> in section “six”.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__six__total_gross\">F.22.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__six__total_gross\">Six Total Gross</a></td>\n <td style=\"text-align: left\">:sections__six__total_gross</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;b&gt;&lt;&lt;--a--&gt;&gt;&lt;/b&gt;\", :assigns=&gt;[{:value=&gt;:payload__items__total_gross, :format=&gt;:obj__format_types__currency__short}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__six__total_gross#example-a\">A</a>, <a href=\"sections__six__total_gross#example-b\">B</a></td>\n <td style=\"text-align: left\">Define text for area <code class=\"language-plaintext highlighter-rouge\">\"Total Gross\"</code> in section “six”.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__four__snippet\">F.23.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__four__snippet\">Four Snippet</a></td>\n <td style=\"text-align: left\">:sections__four__snippet</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"Greetings from &lt;&lt;--a--&gt;&gt;,\\n\\nThis is a &lt;u&gt;demo invoice&lt;/u&gt; for usage of &lt;&lt;--a--&gt;&gt; services for billing period &lt;b&gt;&lt;&lt;--b--&gt;&gt; - &lt;&lt;--c--&gt;&gt;&lt;/b&gt;.\", :assigns=&gt;[{:value=&gt;:payload__from__address__name, :format=&gt;nil}, {:value=&gt;:payload__date__period__from, :format=&gt;:obj__format_types__date__short}, {:value=&gt;:payload__date__period__to, :format=&gt;:obj__format_types__date__default}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__four__snippet#example-a\">A</a>, <a href=\"sections__four__snippet#example-b\">B</a></td>\n <td style=\"text-align: left\">Define text for section “four”.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__three__qr_code\">F.24.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__three__qr_code\">Three Qr Code</a></td>\n <td style=\"text-align: left\">:sections__three__qr_code</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__meta__qr_code, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__three__qr_code#example-a\">A</a>, <a href=\"sections__three__qr_code#example-b\">B</a></td>\n <td style=\"text-align: left\">Define text for <code class=\"language-plaintext highlighter-rouge\">\"QR Code\"</code> in section “three”.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__three__date\">F.25.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__three__date\">Three Date</a></td>\n <td style=\"text-align: left\">:sections__three__date</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;&lt;--a--&gt;&gt;\", :assigns=&gt;[{:value=&gt;:payload__date__invoice, :format=&gt;:obj__format_types__date__eu}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__three__date#example-a\">A</a>, <a href=\"sections__three__date#example-b\">B</a></td>\n <td style=\"text-align: left\">Define <code class=\"language-plaintext highlighter-rouge\">date</code> in section “three”</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__three__headline\">F.26.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__three__headline\">Three Headline</a></td>\n <td style=\"text-align: left\">:sections__three__headline</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;b&gt;&lt;&lt;--a--&gt;&gt; | &lt;&lt;--b--&gt;&gt;&lt;/b&gt;\", :assigns=&gt;[{:value=&gt;:obj__text__invoice, :format=&gt;nil}, {:value=&gt;:payload__meta__id, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__three__headline#example-a\">A</a>, <a href=\"sections__three__headline#example-b\">B</a></td>\n <td style=\"text-align: left\">Define `headlinev in section “three”.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./sections__two__small\">F.27.</a></td>\n <td style=\"text-align: left\"><a href=\"./sections__two__small\">Two Small</a></td>\n <td style=\"text-align: left\">:sections__two__small</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">{:content=&gt;nil, :struct=&gt;\"&lt;u&gt;&lt;&lt;--a--&gt;&gt; - &lt;&lt;--b--&gt;&gt; - &lt;&lt;--c--&gt;&gt;&lt;/u&gt;\", :assigns=&gt;[{:value=&gt;:payload__from__address__name, :format=&gt;nil}, {:value=&gt;:payload__from__address__street, :format=&gt;nil}, {:value=&gt;:payload__from__address__city, :format=&gt;nil}]}</code></td>\n <td style=\"text-align: left\"><a href=\"sections__two__small#example-a\">A</a>, <a href=\"sections__two__small#example-b\">B</a></td>\n <td style=\"text-align: left\">Define address label (from) in section “two”</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"headline\">Headline</h3>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"><strong>Nr</strong></th>\n <th style=\"text-align: left\"><strong>Name</strong></th>\n <th style=\"text-align: left\"><strong>Key</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong></th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__grid__x\">G.1.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__grid__x\">Grid X</a></td>\n <td style=\"text-align: left\">:headline__grid__x</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">3</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Set grid size on the <code class=\"language-plaintext highlighter-rouge\">x axis</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__grid__y\">G.2.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__grid__y\">Grid Y</a></td>\n <td style=\"text-align: left\">:headline__grid__y</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">1</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Set grid size on the <code class=\"language-plaintext highlighter-rouge\">y axis</code>.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__default__content\">G.3.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__default__content\">Default Content</a></td>\n <td style=\"text-align: left\">:headline__default__content</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"\"</code></td>\n <td style=\"text-align: left\"><a href=\"headline__default__content#example-a\">A</a>, <a href=\"headline__default__content#example-b\">B</a></td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">Autofill</code> every cell with content if you wish.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__default__style\">G.4.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__default__style\">Default Style</a></td>\n <td style=\"text-align: left\">:headline__default__style</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:style__document__font_size__small</code></td>\n <td style=\"text-align: left\"><a href=\"headline__default__style#example-a\">A</a>, <a href=\"headline__default__style#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">font style</code> as a reference.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__default__align\">G.5.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__default__align\">Default Align</a></td>\n <td style=\"text-align: left\">:headline__default__align</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:right</code></td>\n <td style=\"text-align: left\"><a href=\"headline__default__align#example-a\">A</a>, <a href=\"headline__default__align#example-b\">B</a></td>\n <td style=\"text-align: left\">Set default aligment behaviour of text.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__default__text_color\">G.6.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__default__text_color\">Default Text Color</a></td>\n <td style=\"text-align: left\">:headline__default__text_color</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:style__colors__header__default</code></td>\n <td style=\"text-align: left\"><a href=\"headline__default__text_color#example-a\">A</a>, <a href=\"headline__default__text_color#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">default text</code> color in section “one” (headline).</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__default__borders\">G.7.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__default__borders\">Default Borders</a></td>\n <td style=\"text-align: left\">:headline__default__borders</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[:left]</code></td>\n <td style=\"text-align: left\"><a href=\"headline__default__borders#example-a\">A</a>, <a href=\"headline__default__borders#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">border type</code> in section “one” (headline).</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__default__border_width\">G.8.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__default__border_width\">Default Border Width</a></td>\n <td style=\"text-align: left\">:headline__default__border_width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">2</code></td>\n <td style=\"text-align: left\"><a href=\"headline__default__border_width#example-a\">A</a>, <a href=\"headline__default__border_width#example-b\">B</a></td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">border width</code> in section “one” (headline).</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__image__src\">G.9.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__image__src\">Image Src</a></td>\n <td style=\"text-align: left\">:headline__image__src</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">\"\"</code></td>\n <td style=\"text-align: left\"><a href=\"headline__image__src#example-a\">A</a></td>\n <td style=\"text-align: left\">Set local <code class=\"language-plaintext highlighter-rouge\">image path</code> for company logo, use .png or .jpg</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__image__colspan\">G.10.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__image__colspan\">Image Colspan</a></td>\n <td style=\"text-align: left\">:headline__image__colspan</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">2</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Set how many cells in the <code class=\"language-plaintext highlighter-rouge\">columns (x)</code> direction should be merge to show the image.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__image__rowspan\">G.11.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__image__rowspan\">Image Rowspan</a></td>\n <td style=\"text-align: left\">:headline__image__rowspan</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">2</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Set how many cells in the <code class=\"language-plaintext highlighter-rouge\">rows (y)</code> direction should be merge to show the image.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__image__grid\">G.12.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__image__grid\">Image Grid</a></td>\n <td style=\"text-align: left\">:headline__image__grid</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[0, 0]</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Set start position <code class=\"language-plaintext highlighter-rouge\">[ columns x, rows y ]</code> of image.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__image__borders\">G.13.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__image__borders\">Image Borders</a></td>\n <td style=\"text-align: left\">:headline__image__borders</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[]</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">border type</code> of image cell.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__image__fit\">G.14.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__image__fit\">Image Fit</a></td>\n <td style=\"text-align: left\">:headline__image__fit</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[160, 100]</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Use <code class=\"language-plaintext highlighter-rouge\">fit size</code> to adjust the image.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__image__border_width\">G.15.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__image__border_width\">Image Border Width</a></td>\n <td style=\"text-align: left\">:headline__image__border_width</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">0</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Set <code class=\"language-plaintext highlighter-rouge\">border width</code> of image cell.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./headline__texts\">G.16.</a></td>\n <td style=\"text-align: left\"><a href=\"./headline__texts\">Texts</a></td>\n <td style=\"text-align: left\">:headline__texts</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">[{:content=&gt;:sections__one__name__content, :grid=&gt;[2, 0], :style=&gt;:style__document__font_size__h1, :align=&gt;:right, :text_color=&gt;:style__colors__header__default, :borders=&gt;[], :border_width=&gt;0}]</code></td>\n <td style=\"text-align: left\"> </td>\n <td style=\"text-align: left\">Set a reference to <code class=\"language-plaintext highlighter-rouge\">string data</code>.</td>\n </tr>\n </tbody>\n</table>\n\n<h3 id=\"footer\">Footer</h3>\n\n<table>\n <thead>\n <tr>\n <th style=\"text-align: left\"><strong>Nr</strong></th>\n <th style=\"text-align: left\"><strong>Name</strong></th>\n <th style=\"text-align: left\"><strong>Key</strong></th>\n <th style=\"text-align: left\"><strong>Default</strong></th>\n <th style=\"text-align: left\"><strong>Examples</strong></th>\n <th style=\"text-align: left\"><strong>Description</strong></th>\n </tr>\n </thead>\n <tbody>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__left__one\">H.1.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__left__one\">Left One</a></td>\n <td style=\"text-align: left\">:footer__left__one</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__left_one__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__left__one#example-a\">A</a>, <a href=\"footer__left__one#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"left\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__left__two\">H.2.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__left__two\">Left Two</a></td>\n <td style=\"text-align: left\">:footer__left__two</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__left_two__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__left__two#example-a\">A</a>, <a href=\"footer__left__two#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"left\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__left__three\">H.3.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__left__three\">Left Three</a></td>\n <td style=\"text-align: left\">:footer__left__three</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__left_three__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__left__three#example-a\">A</a>, <a href=\"footer__left__three#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"left\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__left__four\">H.4.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__left__four\">Left Four</a></td>\n <td style=\"text-align: left\">:footer__left__four</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__left_four__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__left__four#example-a\">A</a>, <a href=\"footer__left__four#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"left\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__center__one\">H.5.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__center__one\">Center One</a></td>\n <td style=\"text-align: left\">:footer__center__one</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__center_one__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__center__one#example-a\">A</a>, <a href=\"footer__center__one#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"center\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__center__two\">H.6.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__center__two\">Center Two</a></td>\n <td style=\"text-align: left\">:footer__center__two</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__center_two__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__center__two#example-a\">A</a>, <a href=\"footer__center__two#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"center\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__center__three\">H.7.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__center__three\">Center Three</a></td>\n <td style=\"text-align: left\">:footer__center__three</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__center_three__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__center__three#example-a\">A</a>, <a href=\"footer__center__three#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"center\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__center__four\">H.8.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__center__four\">Center Four</a></td>\n <td style=\"text-align: left\">:footer__center__four</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__center_four__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__center__four#example-a\">A</a>, <a href=\"footer__center__four#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"center\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__right__one\">H.9.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__right__one\">Right One</a></td>\n <td style=\"text-align: left\">:footer__right__one</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__right_one__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__right__one#example-a\">A</a>, <a href=\"footer__right__one#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"right\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__right__two\">H.10.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__right__two\">Right Two</a></td>\n <td style=\"text-align: left\">:footer__right__two</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__right_two__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__right__two#example-a\">A</a>, <a href=\"footer__right__two#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"right\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__right__three\">H.11.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__right__three\">Right Three</a></td>\n <td style=\"text-align: left\">:footer__right__three</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__right_three__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__right__three#example-a\">A</a>, <a href=\"footer__right__three#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"right\"</code> “footer” section to a formatted string.</td>\n </tr>\n <tr>\n <td style=\"text-align: left\"><a href=\"./footer__right__four\">H.12.</a></td>\n <td style=\"text-align: left\"><a href=\"./footer__right__four\">Right Four</a></td>\n <td style=\"text-align: left\">:footer__right__four</td>\n <td style=\"text-align: left\"><code class=\"language-plaintext highlighter-rouge\">:sections__nine__right_four__content</code></td>\n <td style=\"text-align: left\"><a href=\"footer__right__four#example-a\">A</a>, <a href=\"footer__right__four#example-b\">B</a></td>\n <td style=\"text-align: left\">Set a reference for <code class=\"language-plaintext highlighter-rouge\">\"right\"</code> “footer” section to a formatted string.</td>\n </tr>\n </tbody>\n</table>\n","dir":"/options/","name":"README.md","path":"options/README.md","url":"/options/"},{"sort":4,"title":"A.4 show__total_net","layout":"page","content":"# show__total_net\n\nShow or Hide `Total Net` Row\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':show__total_net' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :show__total_net => true\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:show__total_net``` | [Show](./#show) | [Six](/sections/six) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```true``` | ```^(?:true|false)``` | Boolean |\n\n## Example A.\n\nHide Total Net\n\n### Output\n\n<img src=\"../assets/images/options/show__total_net--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__total_net => false}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__total_net => false\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nShow Total Net\n\n### Output\n\n<img src=\"../assets/images/options/show__total_net--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__total_net => true}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__total_net => true\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"show__total_net.md","path":"options/show__total_net.md","url":"/options/show__total_net.html"},{"sort":4,"title":"D. Four","layout":"page","content":"# Section: Four\n\nThe origin position of this section is based above of the product list and contains a multiline text field. \n\n\n## Preview\n\n<div >\n <canvas id='canvas' search='four' palette='section_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n \n\n## Options\n\n| **Nr** | **Name** | **Key** | **Default** | **Description** |\n| :--- | :--- | :--- | :--- | :--- |\n| [F.23](/options/#sections) | [Sections Four Snippet](/options/sections__four__snippet) | :sections__four__snippet | `{:content=>nil, :struct=>\"Greetings from <<--a-->>,\\n\\nThis is a <u>demo invoice</u> for usage of <<--a-->> services for billing period <b><<--b-->> - <<--c-->></b>.\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}, {:value=>:payload__date__period__from, :format=>:obj__format_types__date__short}, {:value=>:payload__date__period__to, :format=>:obj__format_types__date__default}]}` | Define text for section \"four\". |\n\n\n","dir":"/sections/","name":"four.md","path":"sections/four.md","url":"/sections/four.html"},{"sort":5,"title":"Change your document QR Code text","layout":"page","content":"<h1 id=\"change-your-document-qr-code-text\">Change your document QR Code text</h1>\n\n<h2 id=\"overview\">Overview</h2>\n<p>Quickest way to change your QR Code URL on your doocument is:</p>\n<ul>\n <li>Install gem with <code class=\"language-plaintext highlighter-rouge\">gem install write_invoice</code></li>\n <li>Generate Payload with <code class=\"language-plaintext highlighter-rouge\">WriteInvoice::Example.generate()</code></li>\n <li>Modify your payload <code class=\"language-plaintext highlighter-rouge\">[:invoices][ 0 ][:meta][:qr_code]</code>.</li>\n <li>Generate Document with <code class=\"language-plaintext highlighter-rouge\">WriteInvoice::Document.generate()</code></li>\n</ul>\n\n<p><em>To Hide your QR Code set <code class=\"language-plaintext highlighter-rouge\">show__qr_code: false</code> visit: <a href=\"../options/show__qr_code.html\">show__qr_code</a></em></p>\n\n<h2 id=\"steps\">Steps</h2>\n\n<h3 id=\"1-install-gem\">1: Install gem</h3>\n<p>Install module from rubygems.</p>\n\n<div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>gem <span class=\"nb\">install </span>write_invoice\n</code></pre>  </div></div>\n\n<h3 id=\"2-generate-payload\">2: Generate Payload</h3>\n<p>Generate a payload with <code class=\"language-plaintext highlighter-rouge\">::example</code> Class.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n</code></pre>  </div></div>\n\n<h3 id=\"3-payload-modify-qr-code-text\">3: Payload: Modify QR Code Text</h3>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">pyld</span><span class=\"p\">[</span><span class=\"ss\">:invoices</span><span class=\"p\">][</span> <span class=\"mi\">0</span> <span class=\"p\">][</span><span class=\"ss\">:meta</span><span class=\"p\">][</span><span class=\"ss\">:qr_code</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'https://docs.writeinvoice.com/options/show__qr_code'</span>\n\n</code></pre>  </div></div>\n\n<h3 id=\"4-generate-document\">4: Generate Document</h3>\n\n<p><em>To Storage</em></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">pyld</span><span class=\"p\">[</span><span class=\"ss\">:invoices</span><span class=\"p\">][</span> <span class=\"mi\">0</span> <span class=\"p\">][</span><span class=\"ss\">:meta</span><span class=\"p\">][</span><span class=\"ss\">:qr_code</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'https://docs.writeinvoice.com/options/show__qr_code'</span>\n\n<span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Document</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">output: </span><span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span> <span class=\"ss\">payload: </span><span class=\"n\">pyld</span> <span class=\"p\">)</span>\n</code></pre>  </div></div>\n\n<p><em>To Memory</em></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">require</span> <span class=\"s1\">'write_invoice'</span>\n\n<span class=\"n\">pyld</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoie</span><span class=\"o\">::</span><span class=\"no\">Example</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">()</span>\n<span class=\"n\">pyld</span><span class=\"p\">[</span><span class=\"ss\">:invoices</span><span class=\"p\">][</span> <span class=\"mi\">0</span> <span class=\"p\">][</span><span class=\"ss\">:meta</span><span class=\"p\">][</span><span class=\"ss\">:qr_code</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'https://docs.writeinvoice.com/options/show__qr_code'</span>\n\n<span class=\"n\">doc</span> <span class=\"o\">=</span> <span class=\"no\">WriteInvoice</span><span class=\"o\">::</span><span class=\"no\">Document</span><span class=\"p\">.</span><span class=\"nf\">generate</span><span class=\"p\">(</span> <span class=\"ss\">payload: </span><span class=\"n\">pyld</span> <span class=\"p\">)</span>\n<span class=\"no\">File</span><span class=\"p\">.</span><span class=\"nf\">open</span><span class=\"p\">(</span> <span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span> <span class=\"s2\">\"w\"</span> <span class=\"p\">)</span> <span class=\"p\">{</span> <span class=\"o\">|</span> <span class=\"n\">f</span> <span class=\"o\">|</span> <span class=\"n\">f</span><span class=\"p\">.</span><span class=\"nf\">write</span><span class=\"p\">(</span> <span class=\"n\">doc</span> <span class=\"p\">)</span> <span class=\"p\">}</span>\n</code></pre>  </div></div>\n","dir":"/tutorials/","name":"change-qr-code.md","path":"tutorials/change-qr-code.md","url":"/tutorials/change-qr-code.html"},{"sort":5,"title":"E. Five","layout":"page","content":"# Section: Five\n\nThe origin position of this section is based above the product summary and include a table with services and prices.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search='five' palette='section_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n \n\n## Options\n\n| **Nr** | **Name** | **Key** | **Default** | **Description** |\n| :--- | :--- | :--- | :--- | :--- |\n| [C.8](/options/#text) | [Text Articles Nr](/options/text__articles__nr) | :text__articles__nr | `<b>NR</b>` | Set Headline Column `\"Nr\"` of Article Section in your preferred Language. Optional you can use Inline Formating. |\n| [C.9](/options/#text) | [Text Articles Id](/options/text__articles__id) | :text__articles__id | `<b>ID</b>` | Set Headline Column `\"ID\"` of Article Section in your preferred Language. Optional you can use Inline Formating. |\n| [C.10](/options/#text) | [Text Articles Article](/options/text__articles__article) | :text__articles__article | `<b>ARTICLE</b>` | Set Headline Column `\"Article\"` of Article Section in your preferred Language. Optional you can use Inline Formating. |\n| [C.11](/options/#text) | [Text Articles Piece](/options/text__articles__piece) | :text__articles__piece | `<b>PIECE</b>` | Set Headline Column `\"Piece\"` of Article Section in your preferred Language. Optional you can use Inline Formating. |\n| [C.12](/options/#text) | [Text Articles Single](/options/text__articles__single) | :text__articles__single | `<b>SINGLE</b>` | Set Headline Column `\"Single\"` of Article Section in your preferred Language. Optional you can use Inline Formating. |\n| [C.13](/options/#text) | [Text Articles Total](/options/text__articles__total) | :text__articles__total | `<b>TOTAL</b>` | Set Headline Column `\"Total\"` of Article Section in your preferred Language. Optional you can use Inline Formating. |\n| [D.11](/options/#style) | [Style Colors Rows Even](/options/style__colors__rows__even) | :style__colors__rows__even | `F0F0F0` | Set color for `even rows` in the article section. |\n| [D.12](/options/#style) | [Style Colors Rows Odd](/options/style__colors__rows__odd) | :style__colors__rows__odd | `FFFFFF` | Set color for `even rows` in the article section. |\n| [D.21](/options/#style) | [Style Articles Nr Align](/options/style__articles__nr__align) | :style__articles__nr__align | `left` | Set align of Article `\"Nr\"` column. |\n| [D.22](/options/#style) | [Style Articles Nr Width](/options/style__articles__nr__width) | :style__articles__nr__width | `40` | Set width of Article `\"Nr\"` column. |\n| [D.23](/options/#style) | [Style Articles Id Align](/options/style__articles__id__align) | :style__articles__id__align | `left` | Set alignment of Article `\"ID\"` column. |\n| [D.24](/options/#style) | [Style Articles Id Width](/options/style__articles__id__width) | :style__articles__id__width | `60` | Set width of Article `\"ID\"` column. |\n| [D.25](/options/#style) | [Style Articles Article Align](/options/style__articles__article__align) | :style__articles__article__align | `left` | Set alignment of Article `\"Article\"` column. |\n| [D.26](/options/#style) | [Style Articles Article Width](/options/style__articles__article__width) | :style__articles__article__width | `220` | Set width of Article `\"Article\"` column. |\n| [D.27](/options/#style) | [Style Articles Piece Align](/options/style__articles__piece__align) | :style__articles__piece__align | `right` | Set alignment of Article `\"Piece\"` column. |\n| [D.28](/options/#style) | [Style Articles Piece Width](/options/style__articles__piece__width) | :style__articles__piece__width | `80` | Set width of Article `\"Piece\"` column. |\n| [D.29](/options/#style) | [Style Articles Single Align](/options/style__articles__single__align) | :style__articles__single__align | `right` | Set alignment of Article `\"Single\"` column. |\n| [D.30](/options/#style) | [Style Articles Single Width](/options/style__articles__single__width) | :style__articles__single__width | `60` | Set width of Article `\"Single\"` column. |\n| [D.31](/options/#style) | [Style Articles Single Format](/options/style__articles__single__format) | :style__articles__single__format | `format_types__currency__short` | Set Format Type of Article `\"Single\"` column. |\n| [D.32](/options/#style) | [Style Articles Total Align](/options/style__articles__total__align) | :style__articles__total__align | `right` | Set alignement of Article `\"Total\"` column. |\n| [D.33](/options/#style) | [Style Articles Total Width](/options/style__articles__total__width) | :style__articles__total__width | `60` | Set width of Article `\"Total\"` column. |\n| [D.34](/options/#style) | [Style Articles Total Format](/options/style__articles__total__format) | :style__articles__total__format | `format_types__currency__short` | Set Format Type of Article `\"Total\"` column. |\n\n\n","dir":"/sections/","name":"five.md","path":"sections/five.md","url":"/sections/five.html"},{"sort":5,"title":"A.5 show__vat","layout":"page","content":"# show__vat\n\nShow or Hide `VAT` Row\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':show__vat' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :show__vat => true\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:show__vat``` | [Show](./#show) | [Six](/sections/six) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```true``` | ```^(?:true|false)``` | Boolean |\n\n## Example A.\n\nHide VAT Row\n\n### Output\n\n<img src=\"../assets/images/options/show__vat--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__vat => false}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__vat => false\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nShow VAT Row\n\n### Output\n\n<img src=\"../assets/images/options/show__vat--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__vat => true}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__vat => true\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"show__vat.md","path":"options/show__vat.md","url":"/options/show__vat.html"},{"sort":5,"title":"Format Types","permalink":"/format_types/","layout":"page","content":"<h1 id=\"format-types\">Format Types</h1>\n\n<p><strong>Currency</strong></p>\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"n\">insert</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"ss\">delimiter: </span><span class=\"s2\">\".\"</span><span class=\"p\">,</span>\n        <span class=\"ss\">separator: </span><span class=\"s2\">\",\"</span><span class=\"p\">,</span>\n        <span class=\"ss\">precision: </span><span class=\"mi\">2</span><span class=\"p\">,</span>\n        <span class=\"ss\">unit: </span><span class=\"s1\">''</span><span class=\"p\">,</span>\n        <span class=\"ss\">format: </span><span class=\"s2\">\"%n €\"</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">formatters__currency__custom: </span><span class=\"n\">insert</span> <span class=\"p\">}</span>\n\n</code></pre>  </div></div>\n<p>All Formatters under <code class=\"language-plaintext highlighter-rouge\">:currency</code> will be formatted in usage of <code class=\"language-plaintext highlighter-rouge\">ActiveSupport::NumberHelper.number_to_currency</code>. You can find more Informations here: https://api.rubyonrails.org/classes/ActiveSupport/NumberHelper.html\n<br />\n<br />\n<strong>Date</strong></p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"n\">insert</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">strf: </span><span class=\"s1\">'%d.%m.%Y'</span> <span class=\"p\">}</span>\n    <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span> <span class=\"ss\">formatters__date__custom: </span><span class=\"n\">insert</span> <span class=\"p\">}</span>\n</code></pre>  </div></div>\n\n<p>All Formatters under :date will be formatted in usage of <code class=\"language-plaintext highlighter-rouge\">DateTime.strftime()</code>. You can find more Informations here: https://apidock.com/ruby/DateTime/strftime</p>\n\n<p><br /></p>\n\n<p><a href=\"#table-of-contents\">\n<img src=\"https://raw.githubusercontent.com/a6b8/a6b8/main/docs/write-invoice-for-ruby/readme/headlines/string-modification.svg\" height=\"38px\" name=\"string-modification\" alt=\"String Modification\" />\n</a>\n<br />\nTo place and format variables in a string you can use modifiers.\n<br />\n<br />\nHere an Example how you can transform strings:</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"n\">euro</span> <span class=\"o\">=</span> <span class=\"mf\">100.00</span>\n    <span class=\"n\">date</span> <span class=\"o\">=</span> <span class=\"mi\">1625933028</span>\n\n    <span class=\"n\">struct</span> <span class=\"o\">=</span> <span class=\"s2\">\" is not much money in !\"</span>\n\n    <span class=\"c1\"># =&gt; \"100 € is not much in 2021\"``</span>\n</code></pre>  </div></div>\n\n<h3 id=\"set-new-modifier\">Set new modifier</h3>\n\n<p>To create a modifier you need a <code class=\"language-plaintext highlighter-rouge\">struct</code> string and <code class=\"language-plaintext highlighter-rouge\">assigns</code> which articulate the variable input and format. If you dont need a format set the value of <code class=\"language-plaintext highlighter-rouge\">format: nil</code>. As placeholder use chars in alphabetic order.</p>\n\n<div class=\"language-ruby highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"n\">insert</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"ss\">content: </span><span class=\"kp\">nil</span><span class=\"p\">,</span>\n        <span class=\"ss\">struct: </span><span class=\"s2\">\" is not much &lt;u&gt;money&lt;/u&gt; in !\"</span><span class=\"p\">,</span>\n        <span class=\"ss\">assigns: </span><span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"ss\">value: :payload__items__subtotal</span><span class=\"p\">,</span>\n                <span class=\"ss\">format: :obj__formatters__currency__short</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"ss\">value: :payload__meta__date</span><span class=\"p\">,</span>\n                <span class=\"ss\">format: :obj__formatters__date__year</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">options</span> <span class=\"o\">=</span> <span class=\"p\">{</span> \n        <span class=\"ss\">sections__four__snippet: </span><span class=\"n\">insert</span> \n    <span class=\"p\">}</span>\n</code></pre>  </div></div>\n<p><br /></p>\n","dir":"/format_types/","name":"README.md","path":"format_types/README.md","url":"/format_types/"},{"sort":6,"title":"A.6 show__total_gross","layout":"page","content":"# show__total_gross\n\nShow or Hide `Total Gross` Row\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':show__total_gross' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :show__total_gross => true\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:show__total_gross``` | [Show](./#show) | [Six](/sections/six) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```true``` | ```^(?:true|false)``` | Boolean |\n\n## Example A.\n\nHide Total Gross Row\n\n### Output\n\n<img src=\"../assets/images/options/show__total_gross--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__total_gross => false}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__total_gross => false\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nShow Total Gross Row\n\n### Output\n\n<img src=\"../assets/images/options/show__total_gross--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__total_gross => true}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__total_gross => true\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"show__total_gross.md","path":"options/show__total_gross.md","url":"/options/show__total_gross.html"},{"sort":6,"title":"F. Six","layout":"page","content":"# Section: Six\n\nThe origin position of this section is based below the product detail section and include subtotal, shipping, total... \n\n\n## Preview\n\n<div >\n <canvas id='canvas' search='six' palette='section_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n \n\n## Options\n\n| **Nr** | **Name** | **Key** | **Default** | **Description** |\n| :--- | :--- | :--- | :--- | :--- |\n| [A.2](/options/#show) | [Show Sub Total](/options/show__sub_total) | :show__sub_total | `true` | Show or Hide `Sub Total` |\n| [A.3](/options/#show) | [Show Shipping](/options/show__shipping) | :show__shipping | `true` | Show or Hide `Shipping Row` |\n| [A.4](/options/#show) | [Show Total Net](/options/show__total_net) | :show__total_net | `true` | Show or Hide `Total Net` Row |\n| [A.5](/options/#show) | [Show Vat](/options/show__vat) | :show__vat | `true` | Show or Hide `VAT` Row |\n| [A.6](/options/#show) | [Show Total Gross](/options/show__total_gross) | :show__total_gross | `true` | Show or Hide `Total Gross` Row |\n| [C.14](/options/#text) | [Text Total Sub Total](/options/text__total__sub_total) | :text__total__sub_total | `Subtotal:` | Set Row `\"Sub Total\"` in the \"Article\" Section. For hiding the row see [show__sub_total](../options/show__sub_total) |\n| [C.15](/options/#text) | [Text Total Shipping](/options/text__total__shipping) | :text__total__shipping | `+ Shipping` | Set Row `\"Total Shipping\"` in the \"Article\" Section. For hiding the row see [show__shipping](../options/show__shipping) |\n| [C.16](/options/#text) | [Text Total Total Net](/options/text__total__total_net) | :text__total__total_net | `<b>Total (net):</b>` | Set Row `\"Total Net\"` in the \"Article\" Section. For hiding the row see [show__total_net](../options/show__total_net) |\n| [C.17](/options/#text) | [Text Total Vat](/options/text__total__vat) | :text__total__vat | `+ VAT 19 %` | Set Row `\"Total Vat\"` in the \"Article\" Section. For hiding the row see [show__total_vat](../options/show__total_vat) |\n| [C.18](/options/#text) | [Text Total Total Gross](/options/text__total__total_gross) | :text__total__total_gross | `<b>Total (gross):</b>` | Set Row `\"Total Gross\"` in the \"Article\" Section. For hiding the row see [show__total_gross](../options/show__total_gross) |\n| [D.35](/options/#style) | [Style Total Sub Total Borders](/options/style__total__sub_total__borders) | :style__total__sub_total__borders | `[:top]` | Set border type of `\"Sub Total\"` Area in \"Article\" Section. |\n| [D.36](/options/#style) | [Style Total Sub Total Border Width](/options/style__total__sub_total__border_width) | :style__total__sub_total__border_width | `1` | Set border width of `\"Sub Total\"` Area in \"Article\" Section. |\n| [D.37](/options/#style) | [Style Total Shipping Borders](/options/style__total__shipping__borders) | :style__total__shipping__borders | `[:top]` | Set border type of `\"Shipping\"` Area in \"Article\" Section. |\n| [D.38](/options/#style) | [Style Total Shipping Border Width](/options/style__total__shipping__border_width) | :style__total__shipping__border_width | `0` | Set border width of `\"Shipping\"` Area in \"Article\" Section. |\n| [D.39](/options/#style) | [Style Total Total Net Borders](/options/style__total__total_net__borders) | :style__total__total_net__borders | `[:top]` | Set border type of `\"Total Net\"` Area in \"Article\" Section. |\n| [D.40](/options/#style) | [Style Total Total Net Border Width](/options/style__total__total_net__border_width) | :style__total__total_net__border_width | `1` | Set border type of `\"Total Net\"` Area in \"Article\" Section. |\n| [D.41](/options/#style) | [Style Total Vat Borders](/options/style__total__vat__borders) | :style__total__vat__borders | `[:top]` | Set border type of `\"VAT\"` Area in \"Article\" Section. |\n| [D.42](/options/#style) | [Style Total Vat Border Width](/options/style__total__vat__border_width) | :style__total__vat__border_width | `0` | Set border width of `\"VAT\"` Area in \"Article\" Section. |\n| [D.43](/options/#style) | [Style Total Total Gross Borders](/options/style__total__total_gross__borders) | :style__total__total_gross__borders | `[:top]` | Set border type of `\"Total Gross\"` Area in \"Article\" Section. |\n| [D.44](/options/#style) | [Style Total Total Gross Border Width](/options/style__total__total_gross__border_width) | :style__total__total_gross__border_width | `0` | Set border width of `\"Total Gross\"` Area in \"Article\" Section. |\n| [F.18](/options/#sections) | [Sections Six Sub Total](/options/sections__six__sub_total) | :sections__six__sub_total | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__items__sub_total, :format=>:obj__format_types__currency__short}]}` | Define text for area `\"Sub Total\"` in section \"six\". |\n| [F.19](/options/#sections) | [Sections Six Shipping](/options/sections__six__shipping) | :sections__six__shipping | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__items__shipping_fee, :format=>:obj__format_types__currency__short}]}` | Define text for area `\"Shipping\"` in section \"six\". |\n| [F.20](/options/#sections) | [Sections Six Total Net](/options/sections__six__total_net) | :sections__six__total_net | `{:content=>nil, :struct=>\"<b><<--a-->><b> \", :assigns=>[{:value=>:payload__items__total_net, :format=>:obj__format_types__currency__short}]}` | Define text for area `\"Total Net\"` in section \"six\". |\n| [F.21](/options/#sections) | [Sections Six Vat](/options/sections__six__vat) | :sections__six__vat | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__items__vat, :format=>:obj__format_types__currency__short}]}` | Define text for area `\"Vat\"` in section \"six\". |\n| [F.22](/options/#sections) | [Sections Six Total Gross](/options/sections__six__total_gross) | :sections__six__total_gross | `{:content=>nil, :struct=>\"<b><<--a-->></b>\", :assigns=>[{:value=>:payload__items__total_gross, :format=>:obj__format_types__currency__short}]}` | Define text for area `\"Total Gross\"` in section \"six\". |\n\n\n","dir":"/sections/","name":"six.md","path":"sections/six.md","url":"/sections/six.html"},{"sort":7,"title":"A.7 show__logo","layout":"page","content":"# show__logo\n\nShow or Hide Logo. To set your Image path or base64 string visit [headline__image__src](../options/headline__image__src.html)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':show__logo' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :show__logo => false\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:show__logo``` | [Show](./#show) | [Header](/sections/header) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```false``` | ```^(?:true|false)``` | Boolean |\n\n## Example A.\n\nShow Logo\n\n### Output\n\n<img src=\"../assets/images/options/show__logo--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__logo => true, :headline__image__src => \"<<--ROOT-->__generate/files/templates/logo.png\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__logo => true,\n :headline__image__src => \"<<--ROOT-->__generate/files/templates/logo.png\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"show__logo.md","path":"options/show__logo.md","url":"/options/show__logo.html"},{"sort":7,"title":"G. Seven","layout":"page","content":"# Section: Seven\n\nThe origin position of this section is based below the two product section and include a text field. \n\n\n## Preview\n\n<div >\n <canvas id='canvas' search='seven' palette='section_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n \n\n## Options\n\n| **Nr** | **Name** | **Key** | **Default** | **Description** |\n| :--- | :--- | :--- | :--- | :--- |\n| [E.2](/options/#format_types) | [Format Types Currency Long](/options/format_types__currency__long) | :format_types__currency__long | `{:delimiter=>\".\", :separator=>\",\", :precision=>2, :unit=>\"\", :format=>\"%n EUR\"}` | Define Format Type for viewing currency values in a `long form`. |\n| [F.17](/options/#sections) | [Sections Seven Snippet](/options/sections__seven__snippet) | :sections__seven__snippet | `{:content=>nil, :struct=>\" We will debit your bank account for <b><<--a-->></b> on <<--b-->>. Please ensure you have sufficient funds in your bank account to avoid service disruptions.\", :assigns=>[{:value=>:payload__items__total_gross, :format=>:obj__format_types__currency__long}, {:value=>:payload__date__billing, :format=>:obj__format_types__date__long}]}` | Define text for section `seven`. |\n\n\n","dir":"/sections/","name":"seven.md","path":"sections/seven.md","url":"/sections/seven.html"},{"sort":8,"title":"A.8 show__watermark","layout":"page","content":"# show__watermark\n\nShow or Hide Watermark. To set watermark text visit [text__watermark](../options/text__watermark) \n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':show__watermark' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :show__watermark => true\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:show__watermark``` | [Show](./#show) | [All](../sections/) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```true``` | ```^(?:true|false)``` | Boolean |\n\n## Example A.\n\nHide Watermark\n\n### Output\n\n<img src=\"../assets/images/options/show__watermark--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__watermark => false}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__watermark => false\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nShow Watermark\n\n### Output\n\n<img src=\"../assets/images/options/show__watermark--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__watermark => true}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__watermark => true\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"show__watermark.md","path":"options/show__watermark.md","url":"/options/show__watermark.html"},{"sort":8,"title":"H. Eight","layout":"page","content":"# Section: Eight\n\nThe origin position of this section is based above the footer include a text field.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search='eight' palette='section_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n \n\n## Options\n\n| **Nr** | **Name** | **Key** | **Default** | **Description** |\n| :--- | :--- | :--- | :--- | :--- |\n| [F.16](/options/#sections) | [Sections Eight Snippet](/options/sections__eight__snippet) | :sections__eight__snippet | `{:content=>nil, :struct=>\"Thank you for using <<--a-->> Services.\\n\\n\\nSincerely,\\n\\n<<--a-->>\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}]}` | Define text for section eight. |\n\n\n","dir":"/sections/","name":"eight.md","path":"sections/eight.md","url":"/sections/eight.html"},{"sort":9,"title":"I. Footer","layout":"page","content":"# Section: Footer\n\nThe origin position of this section is based on the bottom as \"footer\". You have a table with 3 columns and 4 rows to include your data.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search='footer' palette='section_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n \n\n## Options\n\n| **Nr** | **Name** | **Key** | **Default** | **Description** |\n| :--- | :--- | :--- | :--- | :--- |\n| [C.1](/options/#text) | [Text Phone](/options/text__phone) | :text__phone | `Phone:` | Set default text `Phone`. Note: Optional you can use Inline Formating. |\n| [C.2](/options/#text) | [Text Mobile](/options/text__mobile) | :text__mobile | `Mobil:` | Set default text `Mobile`. Note: Optional you can use Inline Formating. |\n| [C.3](/options/#text) | [Text Email](/options/text__email) | :text__email | `Email:` | Set default text `Email`. Note: Optional you can use Inline Formating. |\n| [C.4](/options/#text) | [Text Website](/options/text__website) | :text__website | `Website:` | Set default text `Website`. Note: Optional you can use Inline Formating. |\n| [C.5](/options/#text) | [Text Tax](/options/text__tax_id) | :text__tax_id | `Tax ID:` | Set default text `Tax ID`. Note: Optional you can use Inline Formating. |\n| [C.19](/options/#text) | [Text Footer Left](/options/text__footer__left) | :text__footer__left | `Postal` | Set the `Headline` of Footer on the `Left` column |\n| [C.20](/options/#text) | [Text Footer Center](/options/text__footer__center) | :text__footer__center | `Bank` | Set the `Headline` of Footer on the `Center` column. |\n| [C.21](/options/#text) | [Text Footer Right](/options/text__footer__right) | :text__footer__right | `Contact` | Set the `Headline` of Footer on the `Right` column. |\n| [D.18](/options/#style) | [Style Footer Border Width](/options/style__footer__border_width) | :style__footer__border_width | `1` | Set border width which differs footer and section before. |\n| [D.19](/options/#style) | [Style Footer Borders](/options/style__footer__borders) | :style__footer__borders | `[:top]` | Set border type which differs footer and section before. |\n| [F.1](/options/#sections) | [Sections Nine Left Headline](/options/sections__nine__left_headline) | :sections__nine__left_headline | `{:content=>nil, :struct=>\"<b><<--a-->></b>\", :assigns=>[{:value=>:obj__text__footer__left, :format=>nil}]}` | Set Headline of the `left footer` column. |\n| [F.2](/options/#sections) | [Sections Nine Left One](/options/sections__nine__left_one) | :sections__nine__left_one | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}]}` | Set the `first row` of the left footer column. |\n| [F.3](/options/#sections) | [Sections Nine Left Two](/options/sections__nine__left_two) | :sections__nine__left_two | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__address__street, :format=>nil}]}` | Set the `second row` of the left footer column. |\n| [F.4](/options/#sections) | [Sections Nine Left Three](/options/sections__nine__left_three) | :sections__nine__left_three | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__address__city, :format=>nil}]}` | Set the `third row` of the left footer column. |\n| [F.5](/options/#sections) | [Sections Nine Left Four](/options/sections__nine__left_four) | :sections__nine__left_four | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__address__country, :format=>nil}]}` | Set the `fourth row` of the left footer column. |\n| [F.6](/options/#sections) | [Sections Nine Center Headline](/options/sections__nine__center_headline) | :sections__nine__center_headline | `{:content=>nil, :struct=>\"<b><<--a-->></b>\", :assigns=>[{:value=>:obj__text__footer__center, :format=>nil}]}` | Set Headline of the `center footer column`. |\n| [F.7](/options/#sections) | [Sections Nine Center One](/options/sections__nine__center_one) | :sections__nine__center_one | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__bank__name, :format=>nil}]}` | Set the `first row` of the center footer column. |\n| [F.8](/options/#sections) | [Sections Nine Center Two](/options/sections__nine__center_two) | :sections__nine__center_two | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__bank__iban, :format=>nil}]}` | Set the `second row` of the center footer column. |\n| [F.9](/options/#sections) | [Sections Nine Center Three](/options/sections__nine__center_three) | :sections__nine__center_three | `{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__bank__bic, :format=>nil}]}` | Set the `third row` of the center footer column. |\n| [F.10](/options/#sections) | [Sections Nine Center Four](/options/sections__nine__center_four) | :sections__nine__center_four | `{:content=>nil, :struct=>\"<b><<--a-->> <<--b-->></b>\", :assigns=>[{:value=>:obj__text__tax_id, :format=>nil}, {:value=>:payload__from__tax_id, :format=>nil}]}` | Set the `fourth row` of the center footer column. |\n| [F.11](/options/#sections) | [Sections Nine Right Headline](/options/sections__nine__right_headline) | :sections__nine__right_headline | `{:content=>nil, :struct=>\"<b><<--a-->></b>\", :assigns=>[{:value=>:obj__text__footer__right, :format=>nil}]}` | Set Headline of the right footer column. |\n| [F.12](/options/#sections) | [Sections Nine Right One](/options/sections__nine__right_one) | :sections__nine__right_one | `{:content=>nil, :struct=>\"<<--a-->> <<--b-->>\", :assigns=>[{:value=>:obj__text__phone, :format=>nil}, {:value=>:payload__from__contact__phone, :format=>nil}]}` | Set the `first row` of the right footer column. |\n| [F.13](/options/#sections) | [Sections Nine Right Two](/options/sections__nine__right_two) | :sections__nine__right_two | `{:content=>nil, :struct=>\"<<--a-->> <<--b-->>\", :assigns=>[{:value=>:obj__text__mobile, :format=>nil}, {:value=>:payload__from__contact__mobile, :format=>nil}]}` | Set the second row of the right footer column. |\n| [F.14](/options/#sections) | [Sections Nine Right Three](/options/sections__nine__right_three) | :sections__nine__right_three | `{:content=>nil, :struct=>\"<<--a-->> <<--b-->>\", :assigns=>[{:value=>:obj__text__email, :format=>nil}, {:value=>:payload__from__contact__email, :format=>nil}]}` | Set the `third row` of the right footer column. |\n| [F.15](/options/#sections) | [Sections Nine Right Four](/options/sections__nine__right_four) | :sections__nine__right_four | `{:content=>nil, :struct=>\"<<--a-->> <<--b-->>\", :assigns=>[{:value=>:obj__text__website, :format=>nil}, {:value=>:payload__from__contact__website, :format=>nil}]}` | Set the `fourth row` of the right footer column. |\n| [H.1](/options/#footer) | [Footer Left One](/options/footer__left__one) | :footer__left__one | `sections__nine__left_one__content` | Set a reference for `\"left\"` \"footer\" section to a formatted string. |\n| [H.2](/options/#footer) | [Footer Left Two](/options/footer__left__two) | :footer__left__two | `sections__nine__left_two__content` | Set a reference for `\"left\"` \"footer\" section to a formatted string. |\n| [H.3](/options/#footer) | [Footer Left Three](/options/footer__left__three) | :footer__left__three | `sections__nine__left_three__content` | Set a reference for `\"left\"` \"footer\" section to a formatted string. |\n| [H.4](/options/#footer) | [Footer Left Four](/options/footer__left__four) | :footer__left__four | `sections__nine__left_four__content` | Set a reference for `\"left\"` \"footer\" section to a formatted string. |\n| [H.5](/options/#footer) | [Footer Center One](/options/footer__center__one) | :footer__center__one | `sections__nine__center_one__content` | Set a reference for `\"center\"` \"footer\" section to a formatted string. |\n| [H.6](/options/#footer) | [Footer Center Two](/options/footer__center__two) | :footer__center__two | `sections__nine__center_two__content` | Set a reference for `\"center\"` \"footer\" section to a formatted string. |\n| [H.7](/options/#footer) | [Footer Center Three](/options/footer__center__three) | :footer__center__three | `sections__nine__center_three__content` | Set a reference for `\"center\"` \"footer\" section to a formatted string. |\n| [H.8](/options/#footer) | [Footer Center Four](/options/footer__center__four) | :footer__center__four | `sections__nine__center_four__content` | Set a reference for `\"center\"` \"footer\" section to a formatted string. |\n| [H.9](/options/#footer) | [Footer Right One](/options/footer__right__one) | :footer__right__one | `sections__nine__right_one__content` | Set a reference for `\"right\"` \"footer\" section to a formatted string. |\n| [H.10](/options/#footer) | [Footer Right Two](/options/footer__right__two) | :footer__right__two | `sections__nine__right_two__content` | Set a reference for `\"right\"` \"footer\" section to a formatted string. |\n| [H.11](/options/#footer) | [Footer Right Three](/options/footer__right__three) | :footer__right__three | `sections__nine__right_three__content` | Set a reference for `\"right\"` \"footer\" section to a formatted string. |\n| [H.12](/options/#footer) | [Footer Right Four](/options/footer__right__four) | :footer__right__four | `sections__nine__right_four__content` | Set a reference for `\"right\"` \"footer\" section to a formatted string. |\n\n\n","dir":"/sections/","name":"footer.md","path":"sections/footer.md","url":"/sections/footer.html"},{"sort":9,"title":"A.9 show__unencrypted","layout":"page","content":"# show__unencrypted\n\nEncrypt or unencrypt .pdf document. To set a password visit [Payload](../payload/#example) #example > document > encrypted\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':show__unencrypted' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :show__unencrypted => true\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:show__unencrypted``` | [Show](./#show) | [Header](/sections/header) |\n\n### Value\n\nAllow true or false as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```true``` | ```^(?:true|false)``` | Boolean |\n\n","dir":"/options/","name":"show__unencrypted.md","path":"options/show__unencrypted.md","url":"/options/show__unencrypted.html"},{"sort":10,"title":"B.1 order","layout":"page","content":"# order\n\nArrange Sections here. For more Informations see [Sections](../sections/)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':order' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :order => \n [{:name => :header, :move_down => [0]},\n {:name => :two, :move_down => [:style__sections__pad]},\n {:name => :three, :move_down => [:style__sections__pad]},\n {:name => :four, :move_down => [:style__sections__pad, :style__sections__pad]},\n {:name => :five, :move_down => [:style__sections__pad, :style__sections__pad]},\n {:name => :six, :move_down => [0]},\n {:name => :seven, :move_down => [:style__sections__pad, :style__sections__pad]},\n {:name => :eight, :move_down => [:style__sections__pad]}]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:order``` | [Order](./#order) | [All](../sections/) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[{:name=>:header, :move_down=>[0]}, {:name=>:two, :move_down=>[:style__sections__pad]}, {:name=>:three, :move_down=>[:style__sections__pad]}, {:name=>:four, :move_down=>[:style__sections__pad, :style__sections__pad]}, {:name=>:five, :move_down=>[:style__sections__pad, :style__sections__pad]}, {:name=>:six, :move_down=>[0]}, {:name=>:seven, :move_down=>[:style__sections__pad, :style__sections__pad]}, {:name=>:eight, :move_down=>[:style__sections__pad]}]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n## Example A.\n\nRemove following sections: `header`, `four`, `seven` and `eight`.\n\n### Output\n\n<img src=\"../assets/images/options/order--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:order => [{:name => :two, :move_down => [:style__sections__pad]}, {:name => :three, :move_down => [:style__sections__pad]}, {:name => :five, :move_down => [:style__sections__pad, :style__sections__pad]}, {:name => :six, :move_down => [0]}, {:name => :nine, :move_down => [:style__sections__pad]}]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :order => \n [{:name => :two, :move_down => [:style__sections__pad]},\n {:name => :three, :move_down => [:style__sections__pad]},\n {:name => :five, :move_down => [:style__sections__pad, :style__sections__pad]},\n {:name => :six, :move_down => [0]},\n {:name => :nine, :move_down => [:style__sections__pad]}]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSwap section `three` with `four`.\n\n### Output\n\n<img src=\"../assets/images/options/order--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:order => [{:name => :header, :move_down => [0]}, {:name => :two, :move_down => [:style__sections__pad]}, {:name => :four, :move_down => [:style__sections__pad, :style__sections__pad]}, {:name => :three, :move_down => [:style__sections__pad]}, {:name => :five, :move_down => [:style__sections__pad, :style__sections__pad]}, {:name => :six, :move_down => [0]}, {:name => :seven, :move_down => [:style__sections__pad, :style__sections__pad]}, {:name => :eight, :move_down => [:style__sections__pad]}, {:name => :nine, :move_down => [:style__sections__pad]}]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :order => \n [{:name => :header, :move_down => [0]},\n {:name => :two, :move_down => [:style__sections__pad]},\n {:name => :four, :move_down => [:style__sections__pad, :style__sections__pad]},\n {:name => :three, :move_down => [:style__sections__pad]},\n {:name => :five, :move_down => [:style__sections__pad, :style__sections__pad]},\n {:name => :six, :move_down => [0]},\n {:name => :seven, :move_down => [:style__sections__pad, :style__sections__pad]},\n {:name => :eight, :move_down => [:style__sections__pad]},\n {:name => :nine, :move_down => [:style__sections__pad]}]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"order.md","path":"options/order.md","url":"/options/order.html"},{"sort":11,"title":"C.1 text__phone","layout":"page","content":"# text__phone\n\nSet default text `Phone`. Note: Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__phone' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__phone => \"Phone:\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__phone``` | [Text](./#text) | [Footer](/sections/footer) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Phone:\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nUse Inline Formatting `bold <b>` and `underline <u>`.\n\n### Output\n\n<img src=\"../assets/images/options/text__phone--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__phone => \"<b>Bold</b> and <u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__phone => \"<b>Bold</b> and <u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nHide Text\n\n### Output\n\n<img src=\"../assets/images/options/text__phone--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__phone => \"\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__phone => \"\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__phone.md","path":"options/text__phone.md","url":"/options/text__phone.html"},{"sort":12,"title":"C.2 text__mobile","layout":"page","content":"# text__mobile\n\nSet default text `Mobile`. Note: Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__mobile' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__mobile => \"Mobil:\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__mobile``` | [Text](./#text) | [Footer](/sections/footer) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Mobil:\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nUse Inline Formatting `bold <b>` and `underline <u>`.\n\n### Output\n\n<img src=\"../assets/images/options/text__mobile--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__mobile => \"<b>Bold</b> and <u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__mobile => \"<b>Bold</b> and <u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nHide Text\n\n### Output\n\n<img src=\"../assets/images/options/text__mobile--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__mobile => \"\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__mobile => \"\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__mobile.md","path":"options/text__mobile.md","url":"/options/text__mobile.html"},{"sort":13,"title":"C.3 text__email","layout":"page","content":"# text__email\n\nSet default text `Email`. Note: Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__email' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__email => \"Email:\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__email``` | [Text](./#text) | [Footer](/sections/footer) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Email:\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nUse Inline Formatting `bold <b>` and `underline <u>`.\n\n### Output\n\n<img src=\"../assets/images/options/text__email--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__email => \"<b>Bold</b> and <u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__email => \"<b>Bold</b> and <u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nHide Text\n\n### Output\n\n<img src=\"../assets/images/options/text__email--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__email => \"\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__email => \"\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__email.md","path":"options/text__email.md","url":"/options/text__email.html"},{"sort":14,"title":"C.4 text__website","layout":"page","content":"# text__website\n\nSet default text `Website`. Note: Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__website' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__website => \"Website:\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__website``` | [Text](./#text) | [Footer](/sections/footer) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Website:\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nUse Inline Formatting `bold <b>` and `underline <u>`.\n\n### Output\n\n<img src=\"../assets/images/options/text__website--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__website => \"<b>Bold</b> and <u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__website => \"<b>Bold</b> and <u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nHide Text\n\n### Output\n\n<img src=\"../assets/images/options/text__website--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__website => \"\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__website => \"\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__website.md","path":"options/text__website.md","url":"/options/text__website.html"},{"sort":15,"title":"C.5 text__tax_id","layout":"page","content":"# text__tax_id\n\nSet default text `Tax ID`. Note: Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__tax_id' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__tax_id => \"Tax ID:\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__tax_id``` | [Text](./#text) | [Footer](/sections/footer) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Tax ID:\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nUse Inline Formatting `bold <b>` and `underline <u>`.\n\n### Output\n\n<img src=\"../assets/images/options/text__tax_id--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__tax_id => \"<b>Bold</b> and <u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__tax_id => \"<b>Bold</b> and <u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nHide Text\n\n### Output\n\n<img src=\"../assets/images/options/text__tax_id--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__tax_id => \"\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__tax_id => \"\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__tax_id.md","path":"options/text__tax_id.md","url":"/options/text__tax_id.html"},{"sort":16,"title":"C.6 text__invoice","layout":"page","content":"# text__invoice\n\nSet default text `Invoice`. Note: Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__invoice' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__invoice => \"Invoice\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__invoice``` | [Text](./#text) | [Three](/sections/three) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Invoice\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nUse Inline Formatting `bold <b>` and `underline <u>`.\n\n### Output\n\n<img src=\"../assets/images/options/text__invoice--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__invoice => \"<b>Bold</b> and <u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__invoice => \"<b>Bold</b> and <u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nHide Text\n\n### Output\n\n<img src=\"../assets/images/options/text__invoice--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__invoice => \"\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__invoice => \"\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__invoice.md","path":"options/text__invoice.md","url":"/options/text__invoice.html"},{"sort":17,"title":"C.7 text__page_count","layout":"page","content":"# text__page_count\n\nSet Page count output here. Use `<page>` to show current page number and `<total>` to show sum of all pages.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__page_count' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__page_count => \"<page> / <total>\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__page_count``` | [Text](./#text) | [Header](/sections/header) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"<page> / <total>\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nChange Text to `of`.\n\n### Output\n\n<img src=\"../assets/images/options/text__page_count--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__page_count => \"<page> of <total> \"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__page_count => \"<page> of <total> \"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nShow only `<page>`.\n\n### Output\n\n<img src=\"../assets/images/options/text__page_count--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__page_count => \"Page: <page>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__page_count => \"Page: <page>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__page_count.md","path":"options/text__page_count.md","url":"/options/text__page_count.html"},{"sort":18,"title":"C.8 text__articles__nr","layout":"page","content":"# text__articles__nr\n\nSet Headline Column `\"Nr\"` of Article Section in your preferred Language. Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__articles__nr' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__articles__nr => \"<b>NR</b>\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__articles__nr``` | [Text](./#text) | [Five](/sections/five) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"<b>NR</b>\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__nr--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__nr => \"<b>Nr</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__nr => \"<b>Nr</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__nr--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__nr => \"<u>Nr</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__nr => \"<u>Nr</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__articles__nr.md","path":"options/text__articles__nr.md","url":"/options/text__articles__nr.html"},{"sort":19,"title":"C.9 text__articles__id","layout":"page","content":"# text__articles__id\n\nSet Headline Column `\"ID\"` of Article Section in your preferred Language. Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__articles__id' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__articles__id => \"<b>ID</b>\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__articles__id``` | [Text](./#text) | [Five](/sections/five) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"<b>ID</b>\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__id--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__id => \"<b>ID</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__id => \"<b>ID</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__id--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__id => \"<u>ID</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__id => \"<u>ID</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__articles__id.md","path":"options/text__articles__id.md","url":"/options/text__articles__id.html"},{"sort":20,"title":"C.10 text__articles__article","layout":"page","content":"# text__articles__article\n\nSet Headline Column `\"Article\"` of Article Section in your preferred Language. Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__articles__article' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__articles__article => \"<b>ARTICLE</b>\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__articles__article``` | [Text](./#text) | [Five](/sections/five) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"<b>ARTICLE</b>\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__article--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__article => \"<b>Article</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__article => \"<b>Article</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__article--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__article => \"<u>Article</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__article => \"<u>Article</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__articles__article.md","path":"options/text__articles__article.md","url":"/options/text__articles__article.html"},{"sort":21,"title":"C.11 text__articles__piece","layout":"page","content":"# text__articles__piece\n\nSet Headline Column `\"Piece\"` of Article Section in your preferred Language. Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__articles__piece' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__articles__piece => \"<b>PIECE</b>\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__articles__piece``` | [Text](./#text) | [Five](/sections/five) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"<b>PIECE</b>\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__piece--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__piece => \"<b>Piece</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__piece => \"<b>Piece</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__piece--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__piece => \"<u>Piece</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__piece => \"<u>Piece</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__articles__piece.md","path":"options/text__articles__piece.md","url":"/options/text__articles__piece.html"},{"sort":22,"title":"C.12 text__articles__single","layout":"page","content":"# text__articles__single\n\nSet Headline Column `\"Single\"` of Article Section in your preferred Language. Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__articles__single' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__articles__single => \"<b>SINGLE</b>\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__articles__single``` | [Text](./#text) | [Five](/sections/five) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"<b>SINGLE</b>\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__single--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__single => \"<b>Single</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__single => \"<b>Single</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__single--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__single => \"<u>Single</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__single => \"<u>Single</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__articles__single.md","path":"options/text__articles__single.md","url":"/options/text__articles__single.html"},{"sort":23,"title":"C.13 text__articles__total","layout":"page","content":"# text__articles__total\n\nSet Headline Column `\"Total\"` of Article Section in your preferred Language. Optional you can use Inline Formating.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__articles__total' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__articles__total => \"<b>TOTAL</b>\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__articles__total``` | [Text](./#text) | [Five](/sections/five) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"<b>TOTAL</b>\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__total--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__total => \"<b>Total</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__total => \"<b>Total</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__articles__total--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__articles__total => \"<u>Total</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__articles__total => \"<u>Total</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__articles__total.md","path":"options/text__articles__total.md","url":"/options/text__articles__total.html"},{"sort":24,"title":"C.14 text__total__sub_total","layout":"page","content":"# text__total__sub_total\n\nSet Row `\"Sub Total\"` in the \"Article\" Section. For hiding the row see [show__sub_total](../options/show__sub_total)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__total__sub_total' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__total__sub_total => \"Subtotal:\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__total__sub_total``` | [Text](./#text) | [Six](/sections/six) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Subtotal:\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__sub_total--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__sub_total => \"<b>Sub Total</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__sub_total => \"<b>Sub Total</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__sub_total--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__sub_total => \"<u>Sub Total</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__sub_total => \"<u>Sub Total</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__total__sub_total.md","path":"options/text__total__sub_total.md","url":"/options/text__total__sub_total.html"},{"sort":25,"title":"C.15 text__total__shipping","layout":"page","content":"# text__total__shipping\n\nSet Row `\"Total Shipping\"` in the \"Article\" Section. For hiding the row see [show__shipping](../options/show__shipping)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__total__shipping' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__total__shipping => \"+ Shipping\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__total__shipping``` | [Text](./#text) | [Six](/sections/six) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"+ Shipping\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__shipping--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__shipping => \"<b>Total Shipping</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__shipping => \"<b>Total Shipping</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__shipping--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__shipping => \"<u>Total Shipping</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__shipping => \"<u>Total Shipping</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__total__shipping.md","path":"options/text__total__shipping.md","url":"/options/text__total__shipping.html"},{"sort":26,"title":"C.16 text__total__total_net","layout":"page","content":"# text__total__total_net\n\nSet Row `\"Total Net\"` in the \"Article\" Section. For hiding the row see [show__total_net](../options/show__total_net)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__total__total_net' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__total__total_net => \"<b>Total (net):</b>\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__total__total_net``` | [Text](./#text) | [Six](/sections/six) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"<b>Total (net):</b>\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__total_net--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__total_net => \"<b>Bold</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__total_net => \"<b>Bold</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__total_net--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__total_net => \"<u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__total_net => \"<u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__total__total_net.md","path":"options/text__total__total_net.md","url":"/options/text__total__total_net.html"},{"sort":27,"title":"C.17 text__total__vat","layout":"page","content":"# text__total__vat\n\nSet Row `\"Total Vat\"` in the \"Article\" Section. For hiding the row see [show__total_vat](../options/show__total_vat)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__total__vat' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__total__vat => \"+ VAT 19 %\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__total__vat``` | [Text](./#text) | [Six](/sections/six) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"+ VAT 19 %\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__vat--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__vat => \"<b>Bold</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__vat => \"<b>Bold</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__vat--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__vat => \"<u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__vat => \"<u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__total__vat.md","path":"options/text__total__vat.md","url":"/options/text__total__vat.html"},{"sort":28,"title":"C.18 text__total__total_gross","layout":"page","content":"# text__total__total_gross\n\nSet Row `\"Total Gross\"` in the \"Article\" Section. For hiding the row see [show__total_gross](../options/show__total_gross)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__total__total_gross' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__total__total_gross => \"<b>Total (gross):</b>\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__total__total_gross``` | [Text](./#text) | [Six](/sections/six) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"<b>Total (gross):</b>\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__total_gross--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__total_gross => \"<b>Bold</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__total_gross => \"<b>Bold</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__total__total_gross--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__total__total_gross => \"<u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__total__total_gross => \"<u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__total__total_gross.md","path":"options/text__total__total_gross.md","url":"/options/text__total__total_gross.html"},{"sort":29,"title":"C.19 text__footer__left","layout":"page","content":"# text__footer__left\n\nSet the `Headline` of Footer on the `Left` column\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__footer__left' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__footer__left => \"Postal\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__footer__left``` | [Text](./#text) | [Footer](/sections/footer) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Postal\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__footer__left--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__footer__left => \"<b>Bold</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__footer__left => \"<b>Bold</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__footer__left--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__footer__left => \"<u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__footer__left => \"<u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__footer__left.md","path":"options/text__footer__left.md","url":"/options/text__footer__left.html"},{"sort":30,"title":"C.20 text__footer__center","layout":"page","content":"# text__footer__center\n\nSet the `Headline` of Footer on the `Center` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__footer__center' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__footer__center => \"Bank\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__footer__center``` | [Text](./#text) | [Footer](/sections/footer) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Bank\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__footer__center--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__footer__center => \"<b>Bold</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__footer__center => \"<b>Bold</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__footer__center--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__footer__center => \"<u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__footer__center => \"<u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__footer__center.md","path":"options/text__footer__center.md","url":"/options/text__footer__center.html"},{"sort":31,"title":"C.21 text__footer__right","layout":"page","content":"# text__footer__right\n\nSet the `Headline` of Footer on the `Right` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__footer__right' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__footer__right => \"Contact\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__footer__right``` | [Text](./#text) | [Footer](/sections/footer) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Contact\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nBold `<b>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__footer__right--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__footer__right => \"<b>Bold</b>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__footer__right => \"<b>Bold</b>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` inline formatting.\n\n### Output\n\n<img src=\"../assets/images/options/text__footer__right--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__footer__right => \"<u>Underline</u>\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__footer__right => \"<u>Underline</u>\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__footer__right.md","path":"options/text__footer__right.md","url":"/options/text__footer__right.html"},{"sort":32,"title":"C.22 text__watermark","layout":"page","content":"# text__watermark\n\nSet `watermark text`\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':text__watermark' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :text__watermark => \"Example\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:text__watermark``` | [Text](./#text) | [All](../sections/) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Example\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nChange Text to `Demo`\n\n### Output\n\n<img src=\"../assets/images/options/text__watermark--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__watermark => \"Demo\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__watermark => \"Demo\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to `Confidential` and set font size to 120\n\n### Output\n\n<img src=\"../assets/images/options/text__watermark--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:text__watermark => \"Confidential\", :style__watermark__font_size => 120}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :text__watermark => \"Confidential\", :style__watermark__font_size => 120\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"text__watermark.md","path":"options/text__watermark.md","url":"/options/text__watermark.html"},{"sort":33,"title":"D.1 style__document__format","layout":"page","content":"# style__document__format\n\nSet Format of the Document here. For more Information visit: [prawnpdf.org/docs/0.11.1/Prawn/Document/PageGeometry.html](https://prawnpdf.org/docs/0.11.1/Prawn/Document/PageGeometry.html)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__document__format' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__document__format => \"A4\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__document__format``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"A4\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nSet to `\"LETTER\"`.\n\n### Output\n\n<img src=\"../assets/images/options/style__document__format--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__document__format => \"LETTER\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__document__format => \"LETTER\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet to `\"LEGAL\"`.\n\n### Output\n\n<img src=\"../assets/images/options/style__document__format--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__document__format => \"LEGAL\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__document__format => \"LEGAL\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__document__format.md","path":"options/style__document__format.md","url":"/options/style__document__format.html"},{"sort":34,"title":"D.2 style__page_count__align","layout":"page","content":"# style__page_count__align\n\nSet Page Count alignment\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__page_count__align' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__page_count__align => :right\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__page_count__align``` | [Style](./#style) | [Header](/sections/header) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:right``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nSet Alignment to `:center`.\n\n### Output\n\n<img src=\"../assets/images/options/style__page_count__align--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__page_count__align => :center}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__page_count__align => :center\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet Alignment to `:left`.\n\n### Output\n\n<img src=\"../assets/images/options/style__page_count__align--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__page_count__align => :left}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__page_count__align => :left\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__page_count__align.md","path":"options/style__page_count__align.md","url":"/options/style__page_count__align.html"},{"sort":35,"title":"D.3 style__page_count__start_count_at","layout":"page","content":"# style__page_count__start_count_at\n\nStart to count from.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__page_count__start_count_at' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__page_count__start_count_at => 1\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__page_count__start_count_at``` | [Style](./#style) | [Header](/sections/header) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```1``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nStart with `0`.\n\n### Output\n\n<img src=\"../assets/images/options/style__page_count__start_count_at--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__page_count__start_count_at => 0}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__page_count__start_count_at => 0\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nStart with `5`.\n\n### Output\n\n<img src=\"../assets/images/options/style__page_count__start_count_at--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__page_count__start_count_at => 5}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__page_count__start_count_at => 5\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__page_count__start_count_at.md","path":"options/style__page_count__start_count_at.md","url":"/options/style__page_count__start_count_at.html"},{"sort":36,"title":"D.4 style__page_count__offset_y","layout":"page","content":"# style__page_count__offset_y\n\nSet an `y offset` for page count string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__page_count__offset_y' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__page_count__offset_y => 0\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__page_count__offset_y``` | [Style](./#style) | [Header](/sections/header) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```0``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet to `0`.\n\n### Output\n\n<img src=\"../assets/images/options/style__page_count__offset_y--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__page_count__offset_y => 0}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__page_count__offset_y => 0\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet to `50`.\n\n### Output\n\n<img src=\"../assets/images/options/style__page_count__offset_y--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__page_count__offset_y => 50}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__page_count__offset_y => 50\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__page_count__offset_y.md","path":"options/style__page_count__offset_y.md","url":"/options/style__page_count__offset_y.html"},{"sort":37,"title":"D.5 style__font__name","layout":"page","content":"# style__font__name\n\nSet standard `font name`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__font__name' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__font__name => \"Helvetica\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__font__name``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Helvetica\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nSet font name to `RanaCom`.\n\n### Output\n\n<img src=\"../assets/images/options/style__font__name--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__font__name => \"RanaCom\", :style__font__family => {\"RanaCom\" => {:normal => \"~/Library/Fonts/RanaCom-Regular.ttf\", :italic => \"~/Library/Fonts/RanaCom-Italic.ttf\", :bold => \"~/Library/Fonts/RanaCom-Bold.ttf\", :bold_italic => \"~/Library/Fonts/RanaCom-BlackItalic.ttf\"}}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__font__name => \"RanaCom\",\n :style__font__family => \n {\"RanaCom\" => \n {:normal => \"~/Library/Fonts/RanaCom-Regular.ttf\",\n :italic => \"~/Library/Fonts/RanaCom-Italic.ttf\",\n :bold => \"~/Library/Fonts/RanaCom-Bold.ttf\",\n :bold_italic => \"~/Library/Fonts/RanaCom-BlackItalic.ttf\"}}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__font__name.md","path":"options/style__font__name.md","url":"/options/style__font__name.html"},{"sort":38,"title":"D.6 style__font__family","layout":"page","content":"# style__font__family\n\nSet standard `font name`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__font__family' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__font__family => {}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__font__family``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nSet font name to `RanaCom`.\n\n### Output\n\n<img src=\"../assets/images/options/style__font__family--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__font__name => \"RanaCom\", :style__font__family => {\"RanaCom\" => {:normal => \"~/Library/Fonts/RanaCom-Regular.ttf\", :italic => \"~/Library/Fonts/RanaCom-Italic.ttf\", :bold => \"~/Library/Fonts/RanaCom-Bold.ttf\", :bold_italic => \"~/Library/Fonts/RanaCom-BlackItalic.ttf\"}}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__font__name => \"RanaCom\",\n :style__font__family => \n {\"RanaCom\" => \n {:normal => \"~/Library/Fonts/RanaCom-Regular.ttf\",\n :italic => \"~/Library/Fonts/RanaCom-Italic.ttf\",\n :bold => \"~/Library/Fonts/RanaCom-Bold.ttf\",\n :bold_italic => \"~/Library/Fonts/RanaCom-BlackItalic.ttf\"}}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__font__family.md","path":"options/style__font__family.md","url":"/options/style__font__family.html"},{"sort":39,"title":"D.7 style__font__default","layout":"page","content":"# style__font__default\n\nSet default `font size`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__font__default' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__font__default => 10\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__font__default``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```10``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet default font size to `20`.\n\n### Output\n\n<img src=\"../assets/images/options/style__font__default--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__font__default => 9}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__font__default => 9\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet default font size to `8`.\n\n### Output\n\n<img src=\"../assets/images/options/style__font__default--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__font__default => 8}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__font__default => 8\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__font__default.md","path":"options/style__font__default.md","url":"/options/style__font__default.html"},{"sort":40,"title":"D.8 style__font__small","layout":"page","content":"# style__font__small\n\nSet small `font size`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__font__small' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__font__small => 8\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__font__small``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```8``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet default font size to `10`.\n\n### Output\n\n<img src=\"../assets/images/options/style__font__small--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__font__small => 4}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__font__small => 4\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet default font size to `12`.\n\n### Output\n\n<img src=\"../assets/images/options/style__font__small--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__font__small => 6}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__font__small => 6\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__font__small.md","path":"options/style__font__small.md","url":"/options/style__font__small.html"},{"sort":41,"title":"D.9 style__colors__background","layout":"page","content":"# style__colors__background\n\nSet document background color (not full supported).\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__colors__background' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__colors__background => \"FFFFFF\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__colors__background``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"FFFFFF\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nSet background color to `#E89B54`.\n\n### Output\n\n<img src=\"../assets/images/options/style__colors__background--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__colors__background => \"E89B54\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__colors__background => \"E89B54\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet background color to `#372372`.\n\n### Output\n\n<img src=\"../assets/images/options/style__colors__background--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__colors__background => \"372372\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__colors__background => \"372372\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__colors__background.md","path":"options/style__colors__background.md","url":"/options/style__colors__background.html"},{"sort":42,"title":"D.10 style__colors__header__default","layout":"page","content":"# style__colors__header__default\n\nSet background color for header section\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__colors__header__default' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__colors__header__default => \"000000\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__colors__header__default``` | [Style](./#style) | [Header](/sections/header) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"000000\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nSet header default color to `#E89B54`.\n\n### Output\n\n<img src=\"../assets/images/options/style__colors__header__default--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__colors__header__default => \"E89B54\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__colors__header__default => \"E89B54\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet header default color to `#372372`.\n\n### Output\n\n<img src=\"../assets/images/options/style__colors__header__default--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__colors__header__default => \"372372\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__colors__header__default => \"372372\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__colors__header__default.md","path":"options/style__colors__header__default.md","url":"/options/style__colors__header__default.html"},{"sort":43,"title":"D.11 style__colors__rows__even","layout":"page","content":"# style__colors__rows__even\n\nSet color for `even rows` in the article section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__colors__rows__even' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__colors__rows__even => \"F0F0F0\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__colors__rows__even``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"F0F0F0\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nSet background color to `#DCDCDC`.\n\n### Output\n\n<img src=\"../assets/images/options/style__colors__rows__even--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__colors__rows__even => \"DCDCDC\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__colors__rows__even => \"DCDCDC\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet default font size to `#9181AD`.\n\n### Output\n\n<img src=\"../assets/images/options/style__colors__rows__even--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__colors__rows__even => \"9181AD\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__colors__rows__even => \"9181AD\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__colors__rows__even.md","path":"options/style__colors__rows__even.md","url":"/options/style__colors__rows__even.html"},{"sort":44,"title":"D.12 style__colors__rows__odd","layout":"page","content":"# style__colors__rows__odd\n\nSet color for `even rows` in the article section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__colors__rows__odd' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__colors__rows__odd => \"FFFFFF\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__colors__rows__odd``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"FFFFFF\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nSet background color to `#DCDCDC`.\n\n### Output\n\n<img src=\"../assets/images/options/style__colors__rows__odd--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__colors__rows__odd => \"DCDCDC\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__colors__rows__odd => \"DCDCDC\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet default font size to `#9181AD`.\n\n### Output\n\n<img src=\"../assets/images/options/style__colors__rows__odd--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__colors__rows__odd => \"9181AD\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__colors__rows__odd => \"9181AD\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__colors__rows__odd.md","path":"options/style__colors__rows__odd.md","url":"/options/style__colors__rows__odd.html"},{"sort":45,"title":"D.13 style__header__height","layout":"page","content":"# style__header__height\n\nSet total height of header section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__header__height' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__header__height => 90\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__header__height``` | [Style](./#style) | [Header](/sections/header) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```90``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet background color to `#DCDCDC`.\n\n### Output\n\n<img src=\"../assets/images/options/style__header__height--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__header__height => 120}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__header__height => 120\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet default font size to `#9181AD`.\n\n### Output\n\n<img src=\"../assets/images/options/style__header__height--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__header__height => 50}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__header__height => 50\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__header__height.md","path":"options/style__header__height.md","url":"/options/style__header__height.html"},{"sort":46,"title":"D.14 style__address_label__offset_x","layout":"page","content":"# style__address_label__offset_x\n\nSet `x offset` for address label to adjust position for envelopes with window.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__address_label__offset_x' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__address_label__offset_x => 20\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__address_label__offset_x``` | [Style](./#style) | [Two](/sections/two) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```20``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet offset to `100`.\n\n### Output\n\n<img src=\"../assets/images/options/style__address_label__offset_x--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__address_label__offset_x => 100}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__address_label__offset_x => 100\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet offset to `0`.\n\n### Output\n\n<img src=\"../assets/images/options/style__address_label__offset_x--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__address_label__offset_x => 0}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__address_label__offset_x => 0\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__address_label__offset_x.md","path":"options/style__address_label__offset_x.md","url":"/options/style__address_label__offset_x.html"},{"sort":47,"title":"D.15 style__address_label__move_down_one","layout":"page","content":"# style__address_label__move_down_one\n\nSet distance between sender and receiver.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__address_label__move_down_one' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__address_label__move_down_one => 15\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__address_label__move_down_one``` | [Style](./#style) | [Two](/sections/two) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```15``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nMove down by `30`.\n\n### Output\n\n<img src=\"../assets/images/options/style__address_label__move_down_one--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__address_label__move_down_one => 30}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__address_label__move_down_one => 30\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nMove down `0`.\n\n### Output\n\n<img src=\"../assets/images/options/style__address_label__move_down_one--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__address_label__move_down_one => 0}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__address_label__move_down_one => 0\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__address_label__move_down_one.md","path":"options/style__address_label__move_down_one.md","url":"/options/style__address_label__move_down_one.html"},{"sort":48,"title":"D.16 style__address_label__move_down_two","layout":"page","content":"# style__address_label__move_down_two\n\nSet distance between address label and next section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__address_label__move_down_two' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__address_label__move_down_two => 100\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__address_label__move_down_two``` | [Style](./#style) | [Two](/sections/two) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```100``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nMove down by `30`.\n\n### Output\n\n<img src=\"../assets/images/options/style__address_label__move_down_two--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__address_label__move_down_two => 30}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__address_label__move_down_two => 30\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nMove down `0`.\n\n### Output\n\n<img src=\"../assets/images/options/style__address_label__move_down_two--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__address_label__move_down_two => 0}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__address_label__move_down_two => 0\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__address_label__move_down_two.md","path":"options/style__address_label__move_down_two.md","url":"/options/style__address_label__move_down_two.html"},{"sort":49,"title":"D.17 style__footer__height","layout":"page","content":"# style__footer__height\n\nSet total height of footer section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__footer__height' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__footer__height => 60\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__footer__height``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```60``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet height to `100`.\n\n### Output\n\n<img src=\"../assets/images/options/style__footer__height--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__footer__height => 100}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__footer__height => 100\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet height to `30`.\n\n### Output\n\n<img src=\"../assets/images/options/style__footer__height--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__footer__height => 150}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__footer__height => 150\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__footer__height.md","path":"options/style__footer__height.md","url":"/options/style__footer__height.html"},{"sort":50,"title":"D.18 style__footer__border_width","layout":"page","content":"# style__footer__border_width\n\nSet border width which differs footer and section before.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__footer__border_width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__footer__border_width => 1\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__footer__border_width``` | [Style](./#style) | [Footer](/sections/footer) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```1``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet border width to `0`.\n\n### Output\n\n<img src=\"../assets/images/options/style__footer__border_width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__footer__border_width => 0}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__footer__border_width => 0\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border width to `6`.\n\n### Output\n\n<img src=\"../assets/images/options/style__footer__border_width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__footer__border_width => 6}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__footer__border_width => 6\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__footer__border_width.md","path":"options/style__footer__border_width.md","url":"/options/style__footer__border_width.html"},{"sort":51,"title":"D.19 style__footer__borders","layout":"page","content":"# style__footer__borders\n\nSet border type which differs footer and section before.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__footer__borders' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__footer__borders => [:top]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__footer__borders``` | [Style](./#style) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[:top]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n## Example A.\n\nChange border style to `:left`.\n\n### Output\n\n<img src=\"../assets/images/options/style__footer__borders--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__footer__borders => [:left]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__footer__borders => [:left]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange border style to `:right` and `:top`.\n\n### Output\n\n<img src=\"../assets/images/options/style__footer__borders--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__footer__borders => [:right, :top]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__footer__borders => [:right, :top]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__footer__borders.md","path":"options/style__footer__borders.md","url":"/options/style__footer__borders.html"},{"sort":52,"title":"D.20 style__sections__pad","layout":"page","content":"# style__sections__pad\n\nSet default padding between sections.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__sections__pad' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__sections__pad => 10\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__sections__pad``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```10``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet default pad to `0`.\n\n### Output\n\n<img src=\"../assets/images/options/style__sections__pad--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__sections__pad => 0}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__sections__pad => 0\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet default pad to `60`.\n\n### Output\n\n<img src=\"../assets/images/options/style__sections__pad--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__sections__pad => 60}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__sections__pad => 60\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__sections__pad.md","path":"options/style__sections__pad.md","url":"/options/style__sections__pad.html"},{"sort":53,"title":"D.21 style__articles__nr__align","layout":"page","content":"# style__articles__nr__align\n\nSet align of Article `\"Nr\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__nr__align' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__nr__align => :left\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__nr__align``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:left``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nSet alignment of \"Nr\" to `:right`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__nr__align--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__nr__align => :right}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__nr__align => :right\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet alignment of \"Nr\" to `:center`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__nr__align--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__nr__align => :center}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__nr__align => :center\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__nr__align.md","path":"options/style__articles__nr__align.md","url":"/options/style__articles__nr__align.html"},{"sort":54,"title":"D.22 style__articles__nr__width","layout":"page","content":"# style__articles__nr__width\n\nSet width of Article `\"Nr\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__nr__width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__nr__width => 40\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__nr__width``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```40``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet width of \"Nr\" to `20`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__nr__width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__nr__width => 20}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__nr__width => 20\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet width of \"Nr\" to `60`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__nr__width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__nr__width => 40}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__nr__width => 40\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__nr__width.md","path":"options/style__articles__nr__width.md","url":"/options/style__articles__nr__width.html"},{"sort":55,"title":"D.23 style__articles__id__align","layout":"page","content":"# style__articles__id__align\n\nSet alignment of Article `\"ID\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__id__align' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__id__align => :left\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__id__align``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:left``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nSet alignment of \"ID\" to `:right`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__id__align--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__id__align => :right}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__id__align => :right\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet alignment of \"ID\" to `:center`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__id__align--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__id__align => :center}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__id__align => :center\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__id__align.md","path":"options/style__articles__id__align.md","url":"/options/style__articles__id__align.html"},{"sort":56,"title":"D.24 style__articles__id__width","layout":"page","content":"# style__articles__id__width\n\nSet width of Article `\"ID\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__id__width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__id__width => 60\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__id__width``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```60``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet width of \"ID\" to `20`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__id__width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__id__width => 20}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__id__width => 20\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet width of \"ID\" to `60`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__id__width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__id__width => 60}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__id__width => 60\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__id__width.md","path":"options/style__articles__id__width.md","url":"/options/style__articles__id__width.html"},{"sort":57,"title":"D.25 style__articles__article__align","layout":"page","content":"# style__articles__article__align\n\nSet alignment of Article `\"Article\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__article__align' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__article__align => :left\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__article__align``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:left``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nSet alignment of \"article\" to `:right`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__article__align--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__article__align => :right}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__article__align => :right\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet alignment of \"article\" to `:center`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__article__align--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__article__align => :center}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__article__align => :center\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__article__align.md","path":"options/style__articles__article__align.md","url":"/options/style__articles__article__align.html"},{"sort":58,"title":"D.26 style__articles__article__width","layout":"page","content":"# style__articles__article__width\n\nSet width of Article `\"Article\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__article__width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__article__width => 220\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__article__width``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```220``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet width of \"article\" to `20`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__article__width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__article__width => 200}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__article__width => 200\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet width of \"article\" to `60`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__article__width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__article__width => 150}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__article__width => 150\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__article__width.md","path":"options/style__articles__article__width.md","url":"/options/style__articles__article__width.html"},{"sort":59,"title":"D.27 style__articles__piece__align","layout":"page","content":"# style__articles__piece__align\n\nSet alignment of Article `\"Piece\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__piece__align' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__piece__align => :right\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__piece__align``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:right``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nSet alignment of \"piece\" to `:right`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__piece__align--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__piece__align => :right}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__piece__align => :right\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet alignment of \"piece\" to `:center`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__piece__align--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__piece__align => :center}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__piece__align => :center\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__piece__align.md","path":"options/style__articles__piece__align.md","url":"/options/style__articles__piece__align.html"},{"sort":60,"title":"D.28 style__articles__piece__width","layout":"page","content":"# style__articles__piece__width\n\nSet width of Article `\"Piece\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__piece__width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__piece__width => 80\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__piece__width``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```80``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet width of \"piece\" to `20`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__piece__width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__piece__width => 20}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__piece__width => 20\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet width of \"piece\" to `60`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__piece__width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__piece__width => 60}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__piece__width => 60\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__piece__width.md","path":"options/style__articles__piece__width.md","url":"/options/style__articles__piece__width.html"},{"sort":61,"title":"D.29 style__articles__single__align","layout":"page","content":"# style__articles__single__align\n\nSet alignment of Article `\"Single\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__single__align' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__single__align => :right\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__single__align``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:right``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nSet alignment of \"Single\" to `:right`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__single__align--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__single__align => :right}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__single__align => :right\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet alignment of \"Single\" to `:center`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__single__align--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__single__align => :center}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__single__align => :center\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__single__align.md","path":"options/style__articles__single__align.md","url":"/options/style__articles__single__align.html"},{"sort":62,"title":"D.30 style__articles__single__width","layout":"page","content":"# style__articles__single__width\n\nSet width of Article `\"Single\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__single__width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__single__width => 60\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__single__width``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```60``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet width of \"single\" to `20`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__single__width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__single__width => 20}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__single__width => 20\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet width of \"single\" to `60`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__single__width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__single__width => 60}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__single__width => 60\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__single__width.md","path":"options/style__articles__single__width.md","url":"/options/style__articles__single__width.html"},{"sort":63,"title":"D.31 style__articles__single__format","layout":"page","content":"# style__articles__single__format\n\nSet Format Type of Article `\"Single\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__single__format' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__single__format => :format_types__currency__short\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__single__format``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:format_types__currency__short``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nSet currency format to `long`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__single__format--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__single__format => :format_types__currency__long}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__single__format => :format_types__currency__long\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__single__format.md","path":"options/style__articles__single__format.md","url":"/options/style__articles__single__format.html"},{"sort":64,"title":"D.32 style__articles__total__align","layout":"page","content":"# style__articles__total__align\n\nSet alignement of Article `\"Total\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__total__align' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__total__align => :right\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__total__align``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:right``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nSet alignment of \"Total\" to `:right`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__total__align--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__total__align => :right}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__total__align => :right\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet alignment of \"Total\" to `:center`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__total__align--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__total__align => :center}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__total__align => :center\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__total__align.md","path":"options/style__articles__total__align.md","url":"/options/style__articles__total__align.html"},{"sort":65,"title":"D.33 style__articles__total__width","layout":"page","content":"# style__articles__total__width\n\nSet width of Article `\"Total\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__total__width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__total__width => 60\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__total__width``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```60``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet width of \"Total\" to `20`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__total__width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__total__width => 20}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__total__width => 20\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet width of \"Total\" to `60`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__total__width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__total__width => 60}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__total__width => 60\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__total__width.md","path":"options/style__articles__total__width.md","url":"/options/style__articles__total__width.html"},{"sort":66,"title":"D.34 style__articles__total__format","layout":"page","content":"# style__articles__total__format\n\nSet Format Type of Article `\"Total\"` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__articles__total__format' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__articles__total__format => :format_types__currency__short\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__articles__total__format``` | [Style](./#style) | [Five](/sections/five) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:format_types__currency__short``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nSet currency format to `long`.\n\n### Output\n\n<img src=\"../assets/images/options/style__articles__total__format--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__articles__total__format => :format_types__currency__long}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__articles__total__format => :format_types__currency__long\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__articles__total__format.md","path":"options/style__articles__total__format.md","url":"/options/style__articles__total__format.html"},{"sort":67,"title":"D.35 style__total__sub_total__borders","layout":"page","content":"# style__total__sub_total__borders\n\nSet border type of `\"Sub Total\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__sub_total__borders' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__sub_total__borders => [:top]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__sub_total__borders``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[:top]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n## Example A.\n\nSet border style to `:bottom`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__sub_total__borders--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__sub_total__borders => [:left, :right]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__sub_total__borders => [:left, :right]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border style to `:left`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__sub_total__borders--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__sub_total__borders => [:top, :left]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__sub_total__borders => [:top, :left]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__sub_total__borders.md","path":"options/style__total__sub_total__borders.md","url":"/options/style__total__sub_total__borders.html"},{"sort":68,"title":"D.36 style__total__sub_total__border_width","layout":"page","content":"# style__total__sub_total__border_width\n\nSet border width of `\"Sub Total\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__sub_total__border_width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__sub_total__border_width => 1\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__sub_total__border_width``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```1``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet border width to `4`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__sub_total__border_width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__sub_total__border_width => 4}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__sub_total__border_width => 4\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border width to `10`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__sub_total__border_width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__sub_total__border_width => 10}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__sub_total__border_width => 10\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__sub_total__border_width.md","path":"options/style__total__sub_total__border_width.md","url":"/options/style__total__sub_total__border_width.html"},{"sort":69,"title":"D.37 style__total__shipping__borders","layout":"page","content":"# style__total__shipping__borders\n\nSet border type of `\"Shipping\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__shipping__borders' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__shipping__borders => [:top]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__shipping__borders``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[:top]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n## Example A.\n\nSet border style to `:bottom`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__shipping__borders--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__shipping__borders => [:left, :right]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__shipping__borders => [:left, :right]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border style to `:left`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__shipping__borders--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__shipping__borders => [:top, :left]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__shipping__borders => [:top, :left]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__shipping__borders.md","path":"options/style__total__shipping__borders.md","url":"/options/style__total__shipping__borders.html"},{"sort":70,"title":"D.38 style__total__shipping__border_width","layout":"page","content":"# style__total__shipping__border_width\n\nSet border width of `\"Shipping\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__shipping__border_width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__shipping__border_width => 0\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__shipping__border_width``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```0``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet border width to `4`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__shipping__border_width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__shipping__border_width => 4}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__shipping__border_width => 4\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border width to `10`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__shipping__border_width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__shipping__border_width => 10}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__shipping__border_width => 10\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__shipping__border_width.md","path":"options/style__total__shipping__border_width.md","url":"/options/style__total__shipping__border_width.html"},{"sort":71,"title":"D.39 style__total__total_net__borders","layout":"page","content":"# style__total__total_net__borders\n\nSet border type of `\"Total Net\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__total_net__borders' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__total_net__borders => [:top]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__total_net__borders``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[:top]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n## Example A.\n\nSet border style to `:bottom`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__total_net__borders--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__total_net__borders => [:left, :right]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__total_net__borders => [:left, :right]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border style to `:left`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__total_net__borders--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__total_net__borders => [:top, :left]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__total_net__borders => [:top, :left]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__total_net__borders.md","path":"options/style__total__total_net__borders.md","url":"/options/style__total__total_net__borders.html"},{"sort":72,"title":"D.40 style__total__total_net__border_width","layout":"page","content":"# style__total__total_net__border_width\n\nSet border type of `\"Total Net\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__total_net__border_width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__total_net__border_width => 1\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__total_net__border_width``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```1``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet border width to `4`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__total_net__border_width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__total_net__border_width => 4}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__total_net__border_width => 4\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border width to `10`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__total_net__border_width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__total_net__border_width => 10}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__total_net__border_width => 10\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__total_net__border_width.md","path":"options/style__total__total_net__border_width.md","url":"/options/style__total__total_net__border_width.html"},{"sort":73,"title":"D.41 style__total__vat__borders","layout":"page","content":"# style__total__vat__borders\n\nSet border type of `\"VAT\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__vat__borders' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__vat__borders => [:top]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__vat__borders``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[:top]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n## Example A.\n\nSet border style to `:bottom`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__vat__borders--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__vat__borders => [:left, :right]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__vat__borders => [:left, :right]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border style to `:left`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__vat__borders--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__vat__borders => [:top, :left]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__vat__borders => [:top, :left]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__vat__borders.md","path":"options/style__total__vat__borders.md","url":"/options/style__total__vat__borders.html"},{"sort":74,"title":"D.42 style__total__vat__border_width","layout":"page","content":"# style__total__vat__border_width\n\nSet border width of `\"VAT\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__vat__border_width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__vat__border_width => 0\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__vat__border_width``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```0``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet border width to `4`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__vat__border_width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__vat__border_width => 4}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__vat__border_width => 4\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border width to `10`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__vat__border_width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__vat__border_width => 10}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__vat__border_width => 10\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__vat__border_width.md","path":"options/style__total__vat__border_width.md","url":"/options/style__total__vat__border_width.html"},{"sort":75,"title":"D.43 style__total__total_gross__borders","layout":"page","content":"# style__total__total_gross__borders\n\nSet border type of `\"Total Gross\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__total_gross__borders' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__total_gross__borders => [:top]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__total_gross__borders``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[:top]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n## Example A.\n\nSet border style to `:bottom`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__total_gross__borders--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__total_gross__borders => [:left, :right]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__total_gross__borders => [:left, :right]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border style to `:left`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__total_gross__borders--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__total_gross__borders => [:top, :left]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__total_gross__borders => [:top, :left]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__total_gross__borders.md","path":"options/style__total__total_gross__borders.md","url":"/options/style__total__total_gross__borders.html"},{"sort":76,"title":"D.44 style__total__total_gross__border_width","layout":"page","content":"# style__total__total_gross__border_width\n\nSet border width of `\"Total Gross\"` Area in \"Article\" Section.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__total__total_gross__border_width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__total__total_gross__border_width => 0\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__total__total_gross__border_width``` | [Style](./#style) | [Six](/sections/six) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```0``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet border width to `4`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__total_gross__border_width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__total_gross__border_width => 4}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__total_gross__border_width => 4\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet border width to `10`.\n\n### Output\n\n<img src=\"../assets/images/options/style__total__total_gross__border_width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__total__total_gross__border_width => 10}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__total__total_gross__border_width => 10\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__total__total_gross__border_width.md","path":"options/style__total__total_gross__border_width.md","url":"/options/style__total__total_gross__border_width.html"},{"sort":77,"title":"D.45 style__qr_code__width","layout":"page","content":"# style__qr_code__width\n\nSet `QR Code` width (and height).\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__qr_code__width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__qr_code__width => 40\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__qr_code__width``` | [Style](./#style) | [Three](/sections/three) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```40``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nSet qr code width to `20`.\n\n### Output\n\n<img src=\"../assets/images/options/style__qr_code__width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__qr_code__width => 20}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__qr_code__width => 20\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nSet qr code width to `100`.\n\n### Output\n\n<img src=\"../assets/images/options/style__qr_code__width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__qr_code__width => 100}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__qr_code__width => 100\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__qr_code__width.md","path":"options/style__qr_code__width.md","url":"/options/style__qr_code__width.html"},{"sort":78,"title":"D.46 style__watermark__rotate","layout":"page","content":"# style__watermark__rotate\n\nSet `rotation of watermark`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__watermark__rotate' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__watermark__rotate => 45\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__watermark__rotate``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```45``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nChange rotation to `10`\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__rotate--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__watermark => true, :style__watermark__rotate => 10}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__watermark => true, :style__watermark__rotate => 10\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange rotation to `180` and set text to `Confidential` and re-adjust font size.\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__rotate--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__watermark => true, :text__watermark => \"Confidential\", :style__watermark__font_size => 180, :style__watermark__rotate => 10}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__watermark => true,\n :text__watermark => \"Confidential\",\n :style__watermark__font_size => 180,\n :style__watermark__rotate => 10\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__watermark__rotate.md","path":"options/style__watermark__rotate.md","url":"/options/style__watermark__rotate.html"},{"sort":79,"title":"D.47 style__watermark__fill_color","layout":"page","content":"# style__watermark__fill_color\n\nSet `rotation of watermark`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__watermark__fill_color' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__watermark__fill_color => \"383838\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__watermark__fill_color``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"383838\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nChange fill color to `Red: #FF0000`\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__fill_color--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__watermark => true, :style__watermark__fill_color => \"FF0000\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__watermark => true, :style__watermark__fill_color => \"FF0000\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange fill color to `Lime: #00FF00` and change transparency to `0.2`\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__fill_color--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__watermark => true, :style__watermark__fill_color => \"FF0000\", :style__watermark__transparency => 0.2}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__watermark => true,\n :style__watermark__fill_color => \"FF0000\",\n :style__watermark__transparency => 0.2\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__watermark__fill_color.md","path":"options/style__watermark__fill_color.md","url":"/options/style__watermark__fill_color.html"},{"sort":80,"title":"D.48 style__watermark__font_size","layout":"page","content":"# style__watermark__font_size\n\nSet `font size` of watermark.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__watermark__font_size' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__watermark__font_size => 180\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__watermark__font_size``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```180``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nChange `font size` to `40`.\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__font_size--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__watermark => true, :style__watermark__font_size => 40}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__watermark => true, :style__watermark__font_size => 40\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange `font size` to `40`.\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__font_size--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__watermark => true, :text__watermark => \"Demo\", :style__watermark__font_size => 200}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__watermark => true,\n :text__watermark => \"Demo\",\n :style__watermark__font_size => 200\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__watermark__font_size.md","path":"options/style__watermark__font_size.md","url":"/options/style__watermark__font_size.html"},{"sort":81,"title":"D.49 style__watermark__font_family","layout":"page","content":"# style__watermark__font_family\n\nSet `font family`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__watermark__font_family' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__watermark__font_family => \"Times-Roman\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__watermark__font_family``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"Times-Roman\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nChange font family to `Courier`\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__font_family--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__watermark__font_family => \"Courier\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__watermark__font_family => \"Courier\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange font family to `Helvetica`\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__font_family--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__watermark__font_family => \"Helvetica\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__watermark__font_family => \"Helvetica\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__watermark__font_family.md","path":"options/style__watermark__font_family.md","url":"/options/style__watermark__font_family.html"},{"sort":82,"title":"D.50 style__watermark__transparency","layout":"page","content":"# style__watermark__transparency\n\nSet watermark `transparency`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':style__watermark__transparency' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :style__watermark__transparency => 0.1\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:style__watermark__transparency``` | [Style](./#style) | [All](../sections/) |\n\n### Value\n\nAllow float numbers from 0.0 to 9.99.. as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```0.1``` | ```^[1-9](.[0-9]+)?$``` | Float |\n\n## Example A.\n\nChange transparency to `0.5`\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__transparency--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__watermark__transparency => 0.25}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__watermark__transparency => 0.25\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange transparency to `0.2`\n\n### Output\n\n<img src=\"../assets/images/options/style__watermark__transparency--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:style__watermark__transparency => 0.15}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :style__watermark__transparency => 0.15\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"style__watermark__transparency.md","path":"options/style__watermark__transparency.md","url":"/options/style__watermark__transparency.html"},{"sort":83,"title":"E.1 format_types__currency__short","layout":"page","content":"# format_types__currency__short\n\nDefine Format Type for viewing currency values in a `short form`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':format_types__currency__short' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :format_types__currency__short => \n {:delimiter => \".\",\n :separator => \",\",\n :precision => 2,\n :unit => \"\",\n :format => \"%n €\"}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:format_types__currency__short``` | [Format Types](./#format_types) | [All](../sections/) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:delimiter=>\".\", :separator=>\",\", :precision=>2, :unit=>\"\", :format=>\"%n €\"}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nChange currency symbol to `\"¥\"`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__currency__short--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__currency__short => {:delimiter => \".\", :separator => \",\", :precision => 2, :unit => \"\", :format => \"%n ¥\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__currency__short => \n {:delimiter => \".\",\n :separator => \",\",\n :precision => 2,\n :unit => \"\",\n :format => \"%n ¥\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange currency symbol to `\"$\"`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__currency__short--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__currency__short => {:delimiter => \".\", :separator => \",\", :precision => 2, :unit => \"\", :format => \"%n $\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__currency__short => \n {:delimiter => \".\",\n :separator => \",\",\n :precision => 2,\n :unit => \"\",\n :format => \"%n $\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"format_types__currency__short.md","path":"options/format_types__currency__short.md","url":"/options/format_types__currency__short.html"},{"sort":84,"title":"E.2 format_types__currency__long","layout":"page","content":"# format_types__currency__long\n\nDefine Format Type for viewing currency values in a `long form`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':format_types__currency__long' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :format_types__currency__long => \n {:delimiter => \".\",\n :separator => \",\",\n :precision => 2,\n :unit => \"\",\n :format => \"%n EUR\"}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:format_types__currency__long``` | [Format Types](./#format_types) | [Seven](/sections/seven) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:delimiter=>\".\", :separator=>\",\", :precision=>2, :unit=>\"\", :format=>\"%n EUR\"}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nChange currency to `\"USD\"`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__currency__long--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__currency__long => {:delimiter => \".\", :separator => \",\", :precision => 2, :unit => \"\", :format => \"%n USD\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__currency__long => \n {:delimiter => \".\",\n :separator => \",\",\n :precision => 2,\n :unit => \"\",\n :format => \"%n USD\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange currency to `\"YEN\"`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__currency__long--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__currency__long => {:delimiter => \".\", :separator => \",\", :precision => 2, :unit => \"\", :format => \"%n YEN\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__currency__long => \n {:delimiter => \".\",\n :separator => \",\",\n :precision => 2,\n :unit => \"\",\n :format => \"%n YEN\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"format_types__currency__long.md","path":"options/format_types__currency__long.md","url":"/options/format_types__currency__long.html"},{"sort":85,"title":"E.3 format_types__date__eu","layout":"page","content":"# format_types__date__eu\n\nDefine Format Type for viewing date values for the `EU region`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':format_types__date__eu' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :format_types__date__eu => {:strf => \"%d.%m.%Y\"}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:format_types__date__eu``` | [Format Types](./#format_types) | [Three](/sections/three) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:strf=>\"%d.%m.%Y\"}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nDisplay date in `US Style`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__date__eu--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__date__eu => {:strf => \"%m/%d/%Y\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__date__eu => {:strf => \"%m/%d/%Y\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nDisplay date with `Weeknumber`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__date__eu--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__date__eu => {:strf => \"%d.%m.%Y - Week: %V\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__date__eu => {:strf => \"%d.%m.%Y - Week: %V\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"format_types__date__eu.md","path":"options/format_types__date__eu.md","url":"/options/format_types__date__eu.html"},{"sort":86,"title":"E.4 format_types__date__short","layout":"page","content":"# format_types__date__short\n\nDefine Format Type for viewing date values in a `short form`. (As default not in use)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':format_types__date__short' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :format_types__date__short => {:strf => \"%B %d\"}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:format_types__date__short``` | [Format Types](./#format_types) | [All](../sections/) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:strf=>\"%B %d\"}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n","dir":"/options/","name":"format_types__date__short.md","path":"options/format_types__date__short.md","url":"/options/format_types__date__short.html"},{"sort":87,"title":"E.5 format_types__date__default","layout":"page","content":"# format_types__date__default\n\nDefine Format Type for viewing date values by `default`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':format_types__date__default' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :format_types__date__default => {:strf => \"%B %d, %Y\"}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:format_types__date__default``` | [Format Types](./#format_types) | [All](../sections/) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:strf=>\"%B %d, %Y\"}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nDisplay date in `US Style`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__date__default--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__date__default => {:strf => \"%m/%d/%Y\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__date__default => {:strf => \"%m/%d/%Y\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nDisplay date in `EU Style`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__date__default--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__date__default => {:strf => \"%d.%m.%Y\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__date__default => {:strf => \"%d.%m.%Y\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"format_types__date__default.md","path":"options/format_types__date__default.md","url":"/options/format_types__date__default.html"},{"sort":88,"title":"E.6 format_types__date__long","layout":"page","content":"# format_types__date__long\n\nDefine Format Type for viewing date values in a `long form`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':format_types__date__long' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :format_types__date__long => {:strf => \"%A %B %d %Y %I:%M%P UTC\"}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:format_types__date__long``` | [Format Types](./#format_types) | [All](../sections/) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:strf=>\"%A %B %d %Y %I:%M%P UTC\"}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nDisplay date in `EU Style`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__date__long--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__date__long => {:strf => \"%A %d.%B.%Y %H:%M UTC\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__date__long => {:strf => \"%A %d.%B.%Y %H:%M UTC\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nDisplay date is `US Style`.\n\n### Output\n\n<img src=\"../assets/images/options/format_types__date__long--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__date__long => {:strf => \"%A %m/%d/%Y %I:%M%p UTC\"}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__date__long => {:strf => \"%A %m/%d/%Y %I:%M%p UTC\"}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"format_types__date__long.md","path":"options/format_types__date__long.md","url":"/options/format_types__date__long.html"},{"sort":89,"title":"E.7 format_types__date__year","layout":"page","content":"# format_types__date__year\n\nDefine Format Type for showing `only the year`. (As default not in use)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':format_types__date__year' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :format_types__date__year => {:strf => \"%Y\"}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:format_types__date__year``` | [Format Types](./#format_types) | [All](../sections/) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:strf=>\"%Y\"}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n","dir":"/options/","name":"format_types__date__year.md","path":"options/format_types__date__year.md","url":"/options/format_types__date__year.html"},{"sort":90,"title":"F.1 sections__nine__left_headline","layout":"page","content":"# sections__nine__left_headline\n\nSet Headline of the `left footer` column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__left_headline' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__left_headline => \n {:content => nil,\n :struct => \"<b><<--a-->></b>\",\n :assigns => [{:value => :obj__text__footer__left, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__left_headline``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<b><<--a-->></b>\", :assigns=>[{:value=>:obj__text__footer__left, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` headline.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_headline--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_headline => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :obj__text__footer__left, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_headline => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :obj__text__footer__left, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange pointer to `:obj__text__footer__center`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_headline--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_headline => {:content => nil, :struct => \"<b><<--a-->></b>\", :assigns => [{:value => :obj__text__footer__center, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_headline => \n {:content => nil,\n :struct => \"<b><<--a-->></b>\",\n :assigns => [{:value => :obj__text__footer__center, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__left_headline.md","path":"options/sections__nine__left_headline.md","url":"/options/sections__nine__left_headline.html"},{"sort":91,"title":"F.2 sections__nine__left_one","layout":"page","content":"# sections__nine__left_one\n\nSet the `first row` of the left footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__left_one' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__left_one => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => [{:value => :payload__from__address__name, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__left_one``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_one--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_one => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__address__name, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_one => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__address__name, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_one--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_one => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__address__name, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_one => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__address__name, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__left_one.md","path":"options/sections__nine__left_one.md","url":"/options/sections__nine__left_one.html"},{"sort":92,"title":"F.3 sections__nine__left_two","layout":"page","content":"# sections__nine__left_two\n\nSet the `second row` of the left footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__left_two' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__left_two => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => [{:value => :payload__from__address__street, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__left_two``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__address__street, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_two--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_two => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__address__street, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_two => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__address__street, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_two--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_two => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__address__street, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_two => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__address__street, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__left_two.md","path":"options/sections__nine__left_two.md","url":"/options/sections__nine__left_two.html"},{"sort":93,"title":"F.4 sections__nine__left_three","layout":"page","content":"# sections__nine__left_three\n\nSet the `third row` of the left footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__left_three' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__left_three => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => [{:value => :payload__from__address__city, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__left_three``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__address__city, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_three--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_three => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__address__city, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_three => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__address__city, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_three--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_three => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__address__city, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_three => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__address__city, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__left_three.md","path":"options/sections__nine__left_three.md","url":"/options/sections__nine__left_three.html"},{"sort":94,"title":"F.5 sections__nine__left_four","layout":"page","content":"# sections__nine__left_four\n\nSet the `fourth row` of the left footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__left_four' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__left_four => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => [{:value => :payload__from__address__country, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__left_four``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__address__country, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_four--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_four => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__address__country, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_four => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__address__country, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__left_four--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_four => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__address__country, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_four => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__address__country, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__left_four.md","path":"options/sections__nine__left_four.md","url":"/options/sections__nine__left_four.html"},{"sort":95,"title":"F.6 sections__nine__center_headline","layout":"page","content":"# sections__nine__center_headline\n\nSet Headline of the `center footer column`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__center_headline' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__center_headline => \n {:content => nil,\n :struct => \"<b><<--a-->></b>\",\n :assigns => [{:value => :obj__text__footer__center, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__center_headline``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<b><<--a-->></b>\", :assigns=>[{:value=>:obj__text__footer__center, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` headline.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_headline--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_headline => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :obj__text__footer__center, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_headline => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :obj__text__footer__center, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange pointer to `:obj__text__footer__left`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_headline--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_headline => {:content => nil, :struct => \"<b><<--a-->></b>\", :assigns => [{:value => :obj__text__footer__left, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_headline => \n {:content => nil,\n :struct => \"<b><<--a-->></b>\",\n :assigns => [{:value => :obj__text__footer__left, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__center_headline.md","path":"options/sections__nine__center_headline.md","url":"/options/sections__nine__center_headline.html"},{"sort":96,"title":"F.7 sections__nine__center_one","layout":"page","content":"# sections__nine__center_one\n\nSet the `first row` of the center footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__center_one' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__center_one => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => [{:value => :payload__from__bank__name, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__center_one``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__bank__name, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_one--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_one => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__bank__name, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_one => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__bank__name, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_one--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_one => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__bank__name, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_one => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__bank__name, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__center_one.md","path":"options/sections__nine__center_one.md","url":"/options/sections__nine__center_one.html"},{"sort":97,"title":"F.8 sections__nine__center_two","layout":"page","content":"# sections__nine__center_two\n\nSet the `second row` of the center footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__center_two' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__center_two => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => [{:value => :payload__from__bank__iban, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__center_two``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__bank__iban, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_two--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_two => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__bank__iban, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_two => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__bank__iban, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_two--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_two => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__bank__iban, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_two => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__bank__iban, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__center_two.md","path":"options/sections__nine__center_two.md","url":"/options/sections__nine__center_two.html"},{"sort":98,"title":"F.9 sections__nine__center_three","layout":"page","content":"# sections__nine__center_three\n\nSet the `third row` of the center footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__center_three' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__center_three => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => [{:value => :payload__from__bank__bic, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__center_three``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__from__bank__bic, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_three--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_three => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__bank__bic, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_three => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__bank__bic, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_three--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_three => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__bank__bic, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_three => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__bank__bic, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__center_three.md","path":"options/sections__nine__center_three.md","url":"/options/sections__nine__center_three.html"},{"sort":99,"title":"F.10 sections__nine__center_four","layout":"page","content":"# sections__nine__center_four\n\nSet the `fourth row` of the center footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__center_four' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__center_four => \n {:content => nil,\n :struct => \"<b><<--a-->> <<--b-->></b>\",\n :assigns => \n [{:value => :obj__text__tax_id, :format => nil},\n {:value => :payload__from__tax_id, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__center_four``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<b><<--a-->> <<--b-->></b>\", :assigns=>[{:value=>:obj__text__tax_id, :format=>nil}, {:value=>:payload__from__tax_id, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_four--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_four => {:content => nil, :struct => \"<u><<--a-->></u> <<--b-->>\", :assigns => [{:value => :obj__text__tax_id, :format => nil}, {:value => :payload__from__tax_id, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_four => \n {:content => nil,\n :struct => \"<u><<--a-->></u> <<--b-->>\",\n :assigns => \n [{:value => :obj__text__tax_id, :format => nil},\n {:value => :payload__from__tax_id, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `ID`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__center_four--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_four => {:content => nil, :struct => \"<u>ID:</u> <<--a-->>\", :assigns => [{:value => :payload__from__tax_id, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_four => \n {:content => nil,\n :struct => \"<u>ID:</u> <<--a-->>\",\n :assigns => [{:value => :payload__from__tax_id, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__center_four.md","path":"options/sections__nine__center_four.md","url":"/options/sections__nine__center_four.html"},{"sort":100,"title":"F.11 sections__nine__right_headline","layout":"page","content":"# sections__nine__right_headline\n\nSet Headline of the right footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__right_headline' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__right_headline => \n {:content => nil,\n :struct => \"<b><<--a-->></b>\",\n :assigns => [{:value => :obj__text__footer__right, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__right_headline``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<b><<--a-->></b>\", :assigns=>[{:value=>:obj__text__footer__right, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` headline.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_headline--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_headline => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :obj__text__footer__right, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_headline => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :obj__text__footer__right, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange pointer to: `:obj__text__footer__left`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_headline--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_headline => {:content => nil, :struct => \"<b><<--a-->></b>\", :assigns => [{:value => :obj__text__footer__left, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_headline => \n {:content => nil,\n :struct => \"<b><<--a-->></b>\",\n :assigns => [{:value => :obj__text__footer__left, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__right_headline.md","path":"options/sections__nine__right_headline.md","url":"/options/sections__nine__right_headline.html"},{"sort":101,"title":"F.12 sections__nine__right_one","layout":"page","content":"# sections__nine__right_one\n\nSet the `first row` of the right footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__right_one' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__right_one => \n {:content => nil,\n :struct => \"<<--a-->> <<--b-->>\",\n :assigns => \n [{:value => :obj__text__phone, :format => nil},\n {:value => :payload__from__contact__phone, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__right_one``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->> <<--b-->>\", :assigns=>[{:value=>:obj__text__phone, :format=>nil}, {:value=>:payload__from__contact__phone, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_one--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_one => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__contact__phone, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_one => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__contact__phone, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_one--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_one => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__contact__phone, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_one => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__contact__phone, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__right_one.md","path":"options/sections__nine__right_one.md","url":"/options/sections__nine__right_one.html"},{"sort":102,"title":"F.13 sections__nine__right_two","layout":"page","content":"# sections__nine__right_two\n\nSet the second row of the right footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__right_two' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__right_two => \n {:content => nil,\n :struct => \"<<--a-->> <<--b-->>\",\n :assigns => \n [{:value => :obj__text__mobile, :format => nil},\n {:value => :payload__from__contact__mobile, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__right_two``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->> <<--b-->>\", :assigns=>[{:value=>:obj__text__mobile, :format=>nil}, {:value=>:payload__from__contact__mobile, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_two--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_two => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__contact__mobile, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_two => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__contact__mobile, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_two--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_two => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__contact__mobile, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_two => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__contact__mobile, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__right_two.md","path":"options/sections__nine__right_two.md","url":"/options/sections__nine__right_two.html"},{"sort":103,"title":"F.14 sections__nine__right_three","layout":"page","content":"# sections__nine__right_three\n\nSet the `third row` of the right footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__right_three' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__right_three => \n {:content => nil,\n :struct => \"<<--a-->> <<--b-->>\",\n :assigns => \n [{:value => :obj__text__email, :format => nil},\n {:value => :payload__from__contact__email, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__right_three``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->> <<--b-->>\", :assigns=>[{:value=>:obj__text__email, :format=>nil}, {:value=>:payload__from__contact__email, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_three--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_three => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__contact__email, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_three => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__contact__email, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_three--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_three => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__contact__email, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_three => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__contact__email, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__right_three.md","path":"options/sections__nine__right_three.md","url":"/options/sections__nine__right_three.html"},{"sort":104,"title":"F.15 sections__nine__right_four","layout":"page","content":"# sections__nine__right_four\n\nSet the `fourth row` of the right footer column.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__nine__right_four' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__nine__right_four => \n {:content => nil,\n :struct => \"<<--a-->> <<--b-->>\",\n :assigns => \n [{:value => :obj__text__website, :format => nil},\n {:value => :payload__from__contact__website, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__nine__right_four``` | [Sections](./#sections) | [Footer](/sections/footer) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->> <<--b-->>\", :assigns=>[{:value=>:obj__text__website, :format=>nil}, {:value=>:payload__from__contact__website, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_four--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_four => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__from__contact__website, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_four => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => [{:value => :payload__from__contact__website, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__nine__right_four--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_four => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__from__contact__website, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_four => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => [{:value => :payload__from__contact__website, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__nine__right_four.md","path":"options/sections__nine__right_four.md","url":"/options/sections__nine__right_four.html"},{"sort":105,"title":"F.16 sections__eight__snippet","layout":"page","content":"# sections__eight__snippet\n\nDefine text for section eight.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__eight__snippet' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__eight__snippet => \n {:content => nil,\n :struct => \n \"Thank you for using <<--a-->> Services.\\n\" +\n \"\\n\" +\n \"\\n\" +\n \"Sincerely,\\n\" +\n \"\\n\" +\n \"<<--a-->>\",\n :assigns => [{:value => :payload__from__address__name, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__eight__snippet``` | [Sections](./#sections) | [Eight](/sections/eight) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"Thank you for using <<--a-->> Services.\\n\\n\\nSincerely,\\n\\n<<--a-->>\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nMake text `bold <b>`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__eight__snippet--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__eight__snippet => {:content => nil, :struct => \"Thank you for <b>not</b> using <<--a-->> Services.\\n\" + \"\\n\" + \"\\n\" + \"Sincerely,\\n\" + \"\\n\" + \"<<--a-->>\", :assigns => [{:value => :payload__from__address__name, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__eight__snippet => \n {:content => nil,\n :struct => \n \"Thank you for <b>not</b> using <<--a-->> Services.\\n\" +\n \"\\n\" +\n \"\\n\" +\n \"Sincerely,\\n\" +\n \"\\n\" +\n \"<<--a-->>\",\n :assigns => [{:value => :payload__from__address__name, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__eight__snippet--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__eight__snippet => {:content => nil, :struct => \"Thank you for using <u><<--a-->> Services</u>.\\n\" + \"\\n\" + \"\\n\" + \"Sincerely,\\n\" + \"\\n\" + \"<<--a-->>\", :assigns => [{:value => :payload__from__address__name, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__eight__snippet => \n {:content => nil,\n :struct => \n \"Thank you for using <u><<--a-->> Services</u>.\\n\" +\n \"\\n\" +\n \"\\n\" +\n \"Sincerely,\\n\" +\n \"\\n\" +\n \"<<--a-->>\",\n :assigns => [{:value => :payload__from__address__name, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__eight__snippet.md","path":"options/sections__eight__snippet.md","url":"/options/sections__eight__snippet.html"},{"sort":106,"title":"F.17 sections__seven__snippet","layout":"page","content":"# sections__seven__snippet\n\nDefine text for section `seven`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__seven__snippet' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__seven__snippet => \n {:content => nil,\n :struct => \n \" We will debit your bank account for <b><<--a-->></b> on <<--b-->>. Please ensure you have sufficient funds in your bank account to avoid service disruptions.\",\n :assigns => \n [{:value => :payload__items__total_gross,\n :format => :obj__format_types__currency__long},\n {:value => :payload__date__billing,\n :format => :obj__format_types__date__long}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__seven__snippet``` | [Sections](./#sections) | [Seven](/sections/seven) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\" We will debit your bank account for <b><<--a-->></b> on <<--b-->>. Please ensure you have sufficient funds in your bank account to avoid service disruptions.\", :assigns=>[{:value=>:payload__items__total_gross, :format=>:obj__format_types__currency__long}, {:value=>:payload__date__billing, :format=>:obj__format_types__date__long}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__seven__snippet--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__seven__snippet => {:content => nil, :struct => \" We will debit your bank account for <u><<--a-->></u> on <<--b-->>. Please ensure you have sufficient funds in your bank account to avoid service disruptions.\", :assigns => [{:value => :payload__items__total_gross, :format => :obj__format_types__currency__long}, {:value => :payload__date__billing, :format => :obj__format_types__date__long}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__seven__snippet => \n {:content => nil,\n :struct => \n \" We will debit your bank account for <u><<--a-->></u> on <<--b-->>. Please ensure you have sufficient funds in your bank account to avoid service disruptions.\",\n :assigns => \n [{:value => :payload__items__total_gross,\n :format => :obj__format_types__currency__long},\n {:value => :payload__date__billing,\n :format => :obj__format_types__date__long}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert `:payload__to__tax_id, format`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__seven__snippet--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__seven__snippet => {:content => nil, :struct => \" We will debit your bank account for <b><<--a-->></b> (ID: <<--c-->>) on <<--b-->>. Please ensure you have sufficient funds in your bank account to avoid service disruptions.\", :assigns => [{:value => :payload__items__total_gross, :format => :obj__format_types__currency__long}, {:value => :payload__date__billing, :format => :obj__format_types__date__long}, {:value => :payload__to__tax_id, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__seven__snippet => \n {:content => nil,\n :struct => \n \" We will debit your bank account for <b><<--a-->></b> (ID: <<--c-->>) on <<--b-->>. Please ensure you have sufficient funds in your bank account to avoid service disruptions.\",\n :assigns => \n [{:value => :payload__items__total_gross,\n :format => :obj__format_types__currency__long},\n {:value => :payload__date__billing,\n :format => :obj__format_types__date__long},\n {:value => :payload__to__tax_id, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__seven__snippet.md","path":"options/sections__seven__snippet.md","url":"/options/sections__seven__snippet.html"},{"sort":107,"title":"F.18 sections__six__sub_total","layout":"page","content":"# sections__six__sub_total\n\nDefine text for area `\"Sub Total\"` in section \"six\".\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__six__sub_total' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__six__sub_total => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => \n [{:value => :payload__items__sub_total,\n :format => :obj__format_types__currency__short}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__six__sub_total``` | [Sections](./#sections) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__items__sub_total, :format=>:obj__format_types__currency__short}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__sub_total--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__sub_total => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__items__sub_total, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__sub_total => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => \n [{:value => :payload__items__sub_total,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__sub_total--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__sub_total => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__items__sub_total, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__sub_total => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => \n [{:value => :payload__items__sub_total,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__six__sub_total.md","path":"options/sections__six__sub_total.md","url":"/options/sections__six__sub_total.html"},{"sort":108,"title":"F.19 sections__six__shipping","layout":"page","content":"# sections__six__shipping\n\nDefine text for area `\"Shipping\"` in section \"six\".\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__six__shipping' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__six__shipping => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => \n [{:value => :payload__items__shipping_fee,\n :format => :obj__format_types__currency__short}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__six__shipping``` | [Sections](./#sections) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__items__shipping_fee, :format=>:obj__format_types__currency__short}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__shipping--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__shipping => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__items__shipping_fee, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__shipping => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => \n [{:value => :payload__items__shipping_fee,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__shipping--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__shipping => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__items__shipping_fee, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__shipping => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => \n [{:value => :payload__items__shipping_fee,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__six__shipping.md","path":"options/sections__six__shipping.md","url":"/options/sections__six__shipping.html"},{"sort":109,"title":"F.20 sections__six__total_net","layout":"page","content":"# sections__six__total_net\n\nDefine text for area `\"Total Net\"` in section \"six\".\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__six__total_net' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__six__total_net => \n {:content => nil,\n :struct => \"<b><<--a-->><b> \",\n :assigns => \n [{:value => :payload__items__total_net,\n :format => :obj__format_types__currency__short}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__six__total_net``` | [Sections](./#sections) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<b><<--a-->><b> \", :assigns=>[{:value=>:payload__items__total_net, :format=>:obj__format_types__currency__short}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__total_net--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__total_net => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__items__total_net, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__total_net => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => \n [{:value => :payload__items__total_net,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__total_net--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__total_net => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__items__total_net, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__total_net => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => \n [{:value => :payload__items__total_net,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__six__total_net.md","path":"options/sections__six__total_net.md","url":"/options/sections__six__total_net.html"},{"sort":110,"title":"F.21 sections__six__vat","layout":"page","content":"# sections__six__vat\n\nDefine text for area `\"Vat\"` in section \"six\".\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__six__vat' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__six__vat => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => \n [{:value => :payload__items__vat,\n :format => :obj__format_types__currency__short}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__six__vat``` | [Sections](./#sections) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__items__vat, :format=>:obj__format_types__currency__short}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__vat--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__vat => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__items__vat, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__vat => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => \n [{:value => :payload__items__vat,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__vat--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__vat => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__items__vat, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__vat => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => \n [{:value => :payload__items__vat,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__six__vat.md","path":"options/sections__six__vat.md","url":"/options/sections__six__vat.html"},{"sort":111,"title":"F.22 sections__six__total_gross","layout":"page","content":"# sections__six__total_gross\n\nDefine text for area `\"Total Gross\"` in section \"six\".\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__six__total_gross' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__six__total_gross => \n {:content => nil,\n :struct => \"<b><<--a-->></b>\",\n :assigns => \n [{:value => :payload__items__total_gross,\n :format => :obj__format_types__currency__short}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__six__total_gross``` | [Sections](./#sections) | [Six](/sections/six) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<b><<--a-->></b>\", :assigns=>[{:value=>:payload__items__total_gross, :format=>:obj__format_types__currency__short}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__total_gross--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__total_gross => {:content => nil, :struct => \"<u><<--a-->></u>\", :assigns => [{:value => :payload__items__total_gross, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__total_gross => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\",\n :assigns => \n [{:value => :payload__items__total_gross,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert text: `Test:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__six__total_gross--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__six__total_gross => {:content => nil, :struct => \"<b>Test:</b> <<--a-->>\", :assigns => [{:value => :payload__items__total_gross, :format => :obj__format_types__currency__short}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__six__total_gross => \n {:content => nil,\n :struct => \"<b>Test:</b> <<--a-->>\",\n :assigns => \n [{:value => :payload__items__total_gross,\n :format => :obj__format_types__currency__short}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__six__total_gross.md","path":"options/sections__six__total_gross.md","url":"/options/sections__six__total_gross.html"},{"sort":112,"title":"F.23 sections__four__snippet","layout":"page","content":"# sections__four__snippet\n\nDefine text for section \"four\".\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__four__snippet' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__four__snippet => \n {:content => nil,\n :struct => \n \"Greetings from <<--a-->>,\\n\" +\n \"\\n\" +\n \"This is a <u>demo invoice</u> for usage of <<--a-->> services for billing period <b><<--b-->> - <<--c-->></b>.\",\n :assigns => \n [{:value => :payload__from__address__name, :format => nil},\n {:value => :payload__date__period__from,\n :format => :obj__format_types__date__short},\n {:value => :payload__date__period__to,\n :format => :obj__format_types__date__default}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__four__snippet``` | [Sections](./#sections) | [Four](/sections/four) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"Greetings from <<--a-->>,\\n\\nThis is a <u>demo invoice</u> for usage of <<--a-->> services for billing period <b><<--b-->> - <<--c-->></b>.\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}, {:value=>:payload__date__period__from, :format=>:obj__format_types__date__short}, {:value=>:payload__date__period__to, :format=>:obj__format_types__date__default}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nChange Date format type to `\"EU\"`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__four__snippet--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__four__snippet => {:content => nil, :struct => \"Greetings from <<--a-->>,\\n\" + \"\\n\" + \"This is a <u>demo invoice</u> for usage of <<--a-->> services for billing period <b><<--b-->> - <<--c-->></b>.\", :assigns => [{:value => :payload__from__address__name, :format => nil}, {:value => :payload__date__period__from, :format => :obj__format_types__date__eu}, {:value => :payload__date__period__to, :format => :obj__format_types__date__eu}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__four__snippet => \n {:content => nil,\n :struct => \n \"Greetings from <<--a-->>,\\n\" +\n \"\\n\" +\n \"This is a <u>demo invoice</u> for usage of <<--a-->> services for billing period <b><<--b-->> - <<--c-->></b>.\",\n :assigns => \n [{:value => :payload__from__address__name, :format => nil},\n {:value => :payload__date__period__from,\n :format => :obj__format_types__date__eu},\n {:value => :payload__date__period__to,\n :format => :obj__format_types__date__eu}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Date format type to `\"US\"`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__four__snippet--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__date__default => {:strf => \"%m/%d/%Y\"}, :sections__four__snippet => {:content => nil, :struct => \"Greetings from <<--a-->>,\\n\" + \"\\n\" + \"This is a <u>demo invoice</u> for usage of <<--a-->> services for billing period <b><<--b-->> - <<--c-->></b>.\", :assigns => [{:value => :payload__from__address__name, :format => nil}, {:value => :payload__date__period__from, :format => :obj__format_types__date__default}, {:value => :payload__date__period__to, :format => :obj__format_types__date__default}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__date__default => {:strf => \"%m/%d/%Y\"},\n :sections__four__snippet => \n {:content => nil,\n :struct => \n \"Greetings from <<--a-->>,\\n\" +\n \"\\n\" +\n \"This is a <u>demo invoice</u> for usage of <<--a-->> services for billing period <b><<--b-->> - <<--c-->></b>.\",\n :assigns => \n [{:value => :payload__from__address__name, :format => nil},\n {:value => :payload__date__period__from,\n :format => :obj__format_types__date__default},\n {:value => :payload__date__period__to,\n :format => :obj__format_types__date__default}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__four__snippet.md","path":"options/sections__four__snippet.md","url":"/options/sections__four__snippet.html"},{"sort":113,"title":"F.24 sections__three__qr_code","layout":"page","content":"# sections__three__qr_code\n\nDefine text for `\"QR Code\"` in section \"three\".\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__three__qr_code' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__three__qr_code => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => [{:value => :payload__meta__qr_code, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__three__qr_code``` | [Sections](./#sections) | [Three](/sections/three) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__meta__qr_code, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nAdd `#test-123` to url.\n\n### Output\n\n<img src=\"../assets/images/options/sections__three__qr_code--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__three__qr_code => {:content => nil, :struct => \"<<--a-->>#test-123\", :assigns => [{:value => :payload__meta__qr_code, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__three__qr_code => \n {:content => nil,\n :struct => \"<<--a-->>#test-123\",\n :assigns => [{:value => :payload__meta__qr_code, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert `VCard`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__three__qr_code--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__three__qr_code => {:content => nil, :struct => \"BEGIN:VCARD VERSION:3.0 N:User;Test FN:Test User ORG:13p4 Organisation TITLE:Title [title] REV:20121015T195243Z END:VCARD\", :assigns => []}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__three__qr_code => \n {:content => nil,\n :struct => \n \"BEGIN:VCARD VERSION:3.0 N:User;Test FN:Test User ORG:13p4 Organisation TITLE:Title [title] REV:20121015T195243Z END:VCARD\",\n :assigns => []}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__three__qr_code.md","path":"options/sections__three__qr_code.md","url":"/options/sections__three__qr_code.html"},{"sort":114,"title":"F.25 sections__three__date","layout":"page","content":"# sections__three__date\n\nDefine `date` in section \"three\"\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__three__date' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__three__date => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => \n [{:value => :payload__date__invoice,\n :format => :obj__format_types__date__eu}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__three__date``` | [Sections](./#sections) | [Three](/sections/three) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<<--a-->>\", :assigns=>[{:value=>:payload__date__invoice, :format=>:obj__format_types__date__eu}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nInsert text: `Date:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__three__date--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__three__date => {:content => nil, :struct => \"<b>Date:</b> <<--a-->>\", :assigns => [{:value => :payload__date__invoice, :format => :obj__format_types__date__eu}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__three__date => \n {:content => nil,\n :struct => \"<b>Date:</b> <<--a-->>\",\n :assigns => \n [{:value => :payload__date__invoice,\n :format => :obj__format_types__date__eu}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange date to `\"US\" Style`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__three__date--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:format_types__date__default => {:strf => \"%m/%d/%Y\"}, :sections__three__date => {:content => nil, :struct => \"<<--a-->>\", :assigns => [{:value => :payload__date__invoice, :format => :obj__format_types__date__default}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :format_types__date__default => {:strf => \"%m/%d/%Y\"},\n :sections__three__date => \n {:content => nil,\n :struct => \"<<--a-->>\",\n :assigns => \n [{:value => :payload__date__invoice,\n :format => :obj__format_types__date__default}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__three__date.md","path":"options/sections__three__date.md","url":"/options/sections__three__date.html"},{"sort":115,"title":"F.26 sections__three__headline","layout":"page","content":"# sections__three__headline\n\nDefine `headlinev in section \"three\".\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__three__headline' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__three__headline => \n {:content => nil,\n :struct => \"<b><<--a-->> | <<--b-->></b>\",\n :assigns => \n [{:value => :obj__text__invoice, :format => nil},\n {:value => :payload__meta__id, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__three__headline``` | [Sections](./#sections) | [Three](/sections/three) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<b><<--a-->> | <<--b-->></b>\", :assigns=>[{:value=>:obj__text__invoice, :format=>nil}, {:value=>:payload__meta__id, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nChange text to: `ID:`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__three__headline--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__three__headline => {:content => nil, :struct => \"<b><<--a-->>, ID: <<--b-->></b>\", :assigns => [{:value => :obj__text__invoice, :format => nil}, {:value => :payload__meta__id, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__three__headline => \n {:content => nil,\n :struct => \"<b><<--a-->>, ID: <<--b-->></b>\",\n :assigns => \n [{:value => :obj__text__invoice, :format => nil},\n {:value => :payload__meta__id, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__three__headline--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__three__headline => {:content => nil, :struct => \"<u><<--a-->></u> | ID: <<--b-->>\", :assigns => [{:value => :obj__text__invoice, :format => nil}, {:value => :payload__meta__id, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__three__headline => \n {:content => nil,\n :struct => \"<u><<--a-->></u> | ID: <<--b-->>\",\n :assigns => \n [{:value => :obj__text__invoice, :format => nil},\n {:value => :payload__meta__id, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__three__headline.md","path":"options/sections__three__headline.md","url":"/options/sections__three__headline.html"},{"sort":116,"title":"F.27 sections__two__small","layout":"page","content":"# sections__two__small\n\nDefine address label (from) in section \"two\"\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__two__small' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__two__small => \n {:content => nil,\n :struct => \"<u><<--a-->> - <<--b-->> - <<--c-->></u>\",\n :assigns => \n [{:value => :payload__from__address__name, :format => nil},\n {:value => :payload__from__address__street, :format => nil},\n {:value => :payload__from__address__city, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__two__small``` | [Sections](./#sections) | [Two](/sections/two) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<u><<--a-->> - <<--b-->> - <<--c-->></u>\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}, {:value=>:payload__from__address__street, :format=>nil}, {:value=>:payload__from__address__city, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nModify text to `bold <b>`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__two__small--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__two__small => {:content => nil, :struct => \"<b><<--a-->> - <<--b-->> - <<--c-->></b>\", :assigns => [{:value => :payload__from__address__name, :format => nil}, {:value => :payload__from__address__street, :format => nil}, {:value => :payload__from__address__city, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__two__small => \n {:content => nil,\n :struct => \"<b><<--a-->> - <<--b-->> - <<--c-->></b>\",\n :assigns => \n [{:value => :payload__from__address__name, :format => nil},\n {:value => :payload__from__address__street, :format => nil},\n {:value => :payload__from__address__city, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nInsert Text: `Sender`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__two__small--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__two__small => {:content => nil, :struct => \"Sender: <<--a-->> - <<--b-->> - <<--c-->>\", :assigns => [{:value => :payload__from__address__name, :format => nil}, {:value => :payload__from__address__street, :format => nil}, {:value => :payload__from__address__city, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__two__small => \n {:content => nil,\n :struct => \"Sender: <<--a-->> - <<--b-->> - <<--c-->>\",\n :assigns => \n [{:value => :payload__from__address__name, :format => nil},\n {:value => :payload__from__address__street, :format => nil},\n {:value => :payload__from__address__city, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__two__small.md","path":"options/sections__two__small.md","url":"/options/sections__two__small.html"},{"sort":117,"title":"F.28 sections__two__to","layout":"page","content":"# sections__two__to\n\nDefine address label (to) in section \"two\"\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__two__to' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__two__to => \n {:content => nil,\n :struct => \n \"\\t\\t<b><<--a-->></b>\\n\" +\n \"<<--b-->>\\n\" +\n \"<<--c-->>\\n\" +\n \"Tax ID: <<--d-->>\",\n :assigns => \n [{:value => :payload__to__address__name, :format => nil},\n {:value => :payload__to__address__street, :format => nil},\n {:value => :payload__to__address__city, :format => nil},\n {:value => :payload__to__tax_id, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__two__to``` | [Sections](./#sections) | [Two](/sections/two) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"\\t\\t<b><<--a-->></b>\\n<<--b-->>\\n<<--c-->>\\nTax ID: <<--d-->>\", :assigns=>[{:value=>:payload__to__address__name, :format=>nil}, {:value=>:payload__to__address__street, :format=>nil}, {:value=>:payload__to__address__city, :format=>nil}, {:value=>:payload__to__tax_id, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__two__to--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__two__to => {:content => nil, :struct => \"\\t\\t<u><<--a-->></u>\\n\" + \"<<--b-->>\\n\" + \"<<--c-->>\\n\" + \"Tax ID: <<--d-->>\", :assigns => [{:value => :payload__to__address__name, :format => nil}, {:value => :payload__to__address__street, :format => nil}, {:value => :payload__to__address__city, :format => nil}, {:value => :payload__to__tax_id, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__two__to => \n {:content => nil,\n :struct => \n \"\\t\\t<u><<--a-->></u>\\n\" +\n \"<<--b-->>\\n\" +\n \"<<--c-->>\\n\" +\n \"Tax ID: <<--d-->>\",\n :assigns => \n [{:value => :payload__to__address__name, :format => nil},\n {:value => :payload__to__address__street, :format => nil},\n {:value => :payload__to__address__city, :format => nil},\n {:value => :payload__to__tax_id, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nModify text `<u>`.\n\n### Output\n\n<img src=\"../assets/images/options/sections__two__to--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__two__to => {:content => nil, :struct => \"\\t\\t<u><<--a-->></u>\\n\" + \"<<--b-->>\\n\" + \"<<--c-->>\", :assigns => [{:value => :payload__to__address__name, :format => nil}, {:value => :payload__to__address__street, :format => nil}, {:value => :payload__to__address__city, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__two__to => \n {:content => nil,\n :struct => \"\\t\\t<u><<--a-->></u>\\n\" + \"<<--b-->>\\n\" + \"<<--c-->>\",\n :assigns => \n [{:value => :payload__to__address__name, :format => nil},\n {:value => :payload__to__address__street, :format => nil},\n {:value => :payload__to__address__city, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__two__to.md","path":"options/sections__two__to.md","url":"/options/sections__two__to.html"},{"sort":118,"title":"F.29 sections__one__name","layout":"page","content":"# sections__one__name\n\nDefine text in section \"one\" (header)\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':sections__one__name' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :sections__one__name => \n {:content => nil,\n :struct => \"<b><<--a-->></b>\\n\" + \"<<--b-->>\\n\" + \"<<--c-->>\\n\" + \"<<--d-->>\",\n :assigns => \n [{:value => :payload__from__address__name, :format => nil},\n {:value => :payload__from__address__phrase, :format => nil},\n {:value => :payload__from__address__city, :format => nil},\n {:value => :payload__from__address__country, :format => nil}]}\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:sections__one__name``` | [Sections](./#sections) | [Header](/sections/header) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```{:content=>nil, :struct=>\"<b><<--a-->></b>\\n<<--b-->>\\n<<--c-->>\\n<<--d-->>\", :assigns=>[{:value=>:payload__from__address__name, :format=>nil}, {:value=>:payload__from__address__phrase, :format=>nil}, {:value=>:payload__from__address__city, :format=>nil}, {:value=>:payload__from__address__country, :format=>nil}]}``` | ```^{a-zA-Z0-9}*$``` | Hash |\n\n## Example A.\n\nUnderline `<u>` text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__one__name--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__one__name => {:content => nil, :struct => \"<u><<--a-->></u>\\n\" + \"<<--b-->>\\n\" + \"<<--c-->>\\n\" + \"<<--d-->>\", :assigns => [{:value => :payload__from__address__name, :format => nil}, {:value => :payload__from__address__phrase, :format => nil}, {:value => :payload__from__address__city, :format => nil}, {:value => :payload__from__address__country, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__one__name => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\\n\" + \"<<--b-->>\\n\" + \"<<--c-->>\\n\" + \"<<--d-->>\",\n :assigns => \n [{:value => :payload__from__address__name, :format => nil},\n {:value => :payload__from__address__phrase, :format => nil},\n {:value => :payload__from__address__city, :format => nil},\n {:value => :payload__from__address__country, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nModify text.\n\n### Output\n\n<img src=\"../assets/images/options/sections__one__name--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__one__name => {:content => nil, :struct => \"<u><<--a-->></u>\\n\" + \"<<--b-->>\", :assigns => [{:value => :payload__from__address__name, :format => nil}, {:value => :payload__from__address__phrase, :format => nil}]}}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__one__name => \n {:content => nil,\n :struct => \"<u><<--a-->></u>\\n\" + \"<<--b-->>\",\n :assigns => \n [{:value => :payload__from__address__name, :format => nil},\n {:value => :payload__from__address__phrase, :format => nil}]}\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"sections__one__name.md","path":"options/sections__one__name.md","url":"/options/sections__one__name.html"},{"sort":119,"title":"G.1 headline__grid__x","layout":"page","content":"# headline__grid__x\n\nSet grid size on the `x axis`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__grid__x' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__grid__x => 3\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__grid__x``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```3``` | ```^[1-9]d*$``` | Integer |\n\n","dir":"/options/","name":"headline__grid__x.md","path":"options/headline__grid__x.md","url":"/options/headline__grid__x.html"},{"sort":120,"title":"G.2 headline__grid__y","layout":"page","content":"# headline__grid__y\n\nSet grid size on the `y axis`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__grid__y' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__grid__y => 1\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__grid__y``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```1``` | ```^[1-9]d*$``` | Integer |\n\n","dir":"/options/","name":"headline__grid__y.md","path":"options/headline__grid__y.md","url":"/options/headline__grid__y.html"},{"sort":121,"title":"G.3 headline__default__content","layout":"page","content":"# headline__default__content\n\n`Autofill` every cell with content if you wish.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__default__content' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__default__content => \"\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__default__content``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nChange default content to `-`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__content--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__content => \"-\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__content => \"-\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange default content to `.`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__content--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__content => \".\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__content => \".\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"headline__default__content.md","path":"options/headline__default__content.md","url":"/options/headline__default__content.html"},{"sort":122,"title":"G.4 headline__default__style","layout":"page","content":"# headline__default__style\n\nSet `font style` as a reference.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__default__style' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__default__style => :style__document__font_size__small\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__default__style``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:style__document__font_size__small``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange default to: `:style__font__small`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__style--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__style => :style__font__small}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__style => :style__font__small\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange default to: `:style__font__default`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__style--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__style => :style__font__default}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__style => :style__font__default\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"headline__default__style.md","path":"options/headline__default__style.md","url":"/options/headline__default__style.html"},{"sort":123,"title":"G.5 headline__default__align","layout":"page","content":"# headline__default__align\n\nSet default aligment behaviour of text.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__default__align' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__default__align => :right\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__default__align``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:right``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange default header alignment to `:left`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__align--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__align => :left}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__align => :left\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange default header alignment to `:center`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__align--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__align => :center}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__align => :center\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"headline__default__align.md","path":"options/headline__default__align.md","url":"/options/headline__default__align.html"},{"sort":124,"title":"G.6 headline__default__text_color","layout":"page","content":"# headline__default__text_color\n\nSet `default text` color in section \"one\" (headline).\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__default__text_color' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__default__text_color => :style__colors__header__default\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__default__text_color``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:style__colors__header__default``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange color to rows `even` to `:style__colors__rows__even`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__text_color--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__text_color => :style__colors__rows__even}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__text_color => :style__colors__rows__even\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange color to rows `odd` to `:style__colors__rows__odd`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__text_color--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__text_color => :style__colors__rows__odd}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__text_color => :style__colors__rows__odd\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"headline__default__text_color.md","path":"options/headline__default__text_color.md","url":"/options/headline__default__text_color.html"},{"sort":125,"title":"G.7 headline__default__borders","layout":"page","content":"# headline__default__borders\n\nSet `border type` in section \"one\" (headline).\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__default__borders' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__default__borders => [:left]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__default__borders``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[:left]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n## Example A.\n\nChange headline border type to `:right`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__borders--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__borders => [:right]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__borders => [:right]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange headline border type to `:left` and `:right`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__borders--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__borders => [:left, :right]}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__borders => [:left, :right]\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"headline__default__borders.md","path":"options/headline__default__borders.md","url":"/options/headline__default__borders.html"},{"sort":126,"title":"G.8 headline__default__border_width","layout":"page","content":"# headline__default__border_width\n\nSet `border width` in section \"one\" (headline).\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__default__border_width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__default__border_width => 2\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__default__border_width``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```2``` | ```^[1-9]d*$``` | Integer |\n\n## Example A.\n\nChange border width to `5`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__border_width--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__border_width => 5}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__border_width => 5\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange border width to `10`.\n\n### Output\n\n<img src=\"../assets/images/options/headline__default__border_width--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:headline__default__border_width => 10}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :headline__default__border_width => 10\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"headline__default__border_width.md","path":"options/headline__default__border_width.md","url":"/options/headline__default__border_width.html"},{"sort":127,"title":"G.9 headline__image__src","layout":"page","content":"# headline__image__src\n\nSet local `image path` for company logo, use .png or .jpg\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__image__src' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__image__src => \"\"\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__image__src``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow A-Z, a-b and 0-9 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```\"\"``` | ```^[a-zA-Z0-9_]*$``` | String |\n\n## Example A.\n\nShow Logo\n\n### Output\n\n<img src=\"../assets/images/options/headline__image__src--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:show__logo => true, :headline__image__src => \"<<--ROOT-->__generate/files/templates/logo.png\"}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :show__logo => true,\n :headline__image__src => \"<<--ROOT-->__generate/files/templates/logo.png\"\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"headline__image__src.md","path":"options/headline__image__src.md","url":"/options/headline__image__src.html"},{"sort":128,"title":"G.10 headline__image__colspan","layout":"page","content":"# headline__image__colspan\n\nSet how many cells in the `columns (x)` direction should be merge to show the image.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__image__colspan' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__image__colspan => 2\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__image__colspan``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```2``` | ```^[1-9]d*$``` | Integer |\n\n","dir":"/options/","name":"headline__image__colspan.md","path":"options/headline__image__colspan.md","url":"/options/headline__image__colspan.html"},{"sort":129,"title":"G.11 headline__image__rowspan","layout":"page","content":"# headline__image__rowspan\n\nSet how many cells in the `rows (y)` direction should be merge to show the image.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__image__rowspan' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__image__rowspan => 2\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__image__rowspan``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```2``` | ```^[1-9]d*$``` | Integer |\n\n","dir":"/options/","name":"headline__image__rowspan.md","path":"options/headline__image__rowspan.md","url":"/options/headline__image__rowspan.html"},{"sort":130,"title":"G.12 headline__image__grid","layout":"page","content":"# headline__image__grid\n\nSet start position `[ columns x, rows y ]` of image.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__image__grid' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__image__grid => [0, 0]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__image__grid``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[0, 0]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n","dir":"/options/","name":"headline__image__grid.md","path":"options/headline__image__grid.md","url":"/options/headline__image__grid.html"},{"sort":131,"title":"G.13 headline__image__borders","layout":"page","content":"# headline__image__borders\n\nSet `border type` of image cell.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__image__borders' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__image__borders => []\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__image__borders``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n","dir":"/options/","name":"headline__image__borders.md","path":"options/headline__image__borders.md","url":"/options/headline__image__borders.html"},{"sort":132,"title":"G.14 headline__image__fit","layout":"page","content":"# headline__image__fit\n\nUse `fit size` to adjust the image.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__image__fit' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__image__fit => [160, 100]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__image__fit``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[160, 100]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n","dir":"/options/","name":"headline__image__fit.md","path":"options/headline__image__fit.md","url":"/options/headline__image__fit.html"},{"sort":133,"title":"G.15 headline__image__border_width","layout":"page","content":"# headline__image__border_width\n\nSet `border width` of image cell.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__image__border_width' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__image__border_width => 0\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__image__border_width``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\nAllow positive integers beginning from 1 as value.\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```0``` | ```^[1-9]d*$``` | Integer |\n\n","dir":"/options/","name":"headline__image__border_width.md","path":"options/headline__image__border_width.md","url":"/options/headline__image__border_width.html"},{"sort":134,"title":"G.16 headline__texts","layout":"page","content":"# headline__texts\n\nSet a reference to `string data`.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':headline__texts' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :headline__texts => \n [{:content => :sections__one__name__content,\n :grid => [2, 0],\n :style => :style__document__font_size__h1,\n :align => :right,\n :text_color => :style__colors__header__default,\n :borders => [],\n :border_width => 0}]\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:headline__texts``` | [Headline](./#headline) | [Header](/sections/header) |\n\n### Value\n\n\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```[{:content=>:sections__one__name__content, :grid=>[2, 0], :style=>:style__document__font_size__h1, :align=>:right, :text_color=>:style__colors__header__default, :borders=>[], :border_width=>0}]``` | ```^[a-zA-Z0-9]*$``` | Array |\n\n","dir":"/options/","name":"headline__texts.md","path":"options/headline__texts.md","url":"/options/headline__texts.html"},{"sort":135,"title":"H.1 footer__left__one","layout":"page","content":"# footer__left__one\n\nSet a reference for `\"left\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__left__one' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__left__one => :sections__nine__left_one__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__left__one``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__left_one__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__left_two__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__left__one--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__left__one => :sections__nine__left_two__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__left__one => :sections__nine__left_two__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__left__one--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_one => {:content => nil, :struct => \"\", :assigns => []}, :footer__left__one => :sections__nine__left_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_one => {:content => nil, :struct => \"\", :assigns => []},\n :footer__left__one => :sections__nine__left_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__left__one.md","path":"options/footer__left__one.md","url":"/options/footer__left__one.html"},{"sort":136,"title":"H.2 footer__left__two","layout":"page","content":"# footer__left__two\n\nSet a reference for `\"left\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__left__two' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__left__two => :sections__nine__left_two__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__left__two``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__left_two__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__left_one__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__left__two--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__left__two => :sections__nine__left_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__left__two => :sections__nine__left_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__left__two--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_two => {:content => nil, :struct => \"\", :assigns => []}, :footer__left__two => :sections__nine__left_two__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_two => {:content => nil, :struct => \"\", :assigns => []},\n :footer__left__two => :sections__nine__left_two__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__left__two.md","path":"options/footer__left__two.md","url":"/options/footer__left__two.html"},{"sort":137,"title":"H.3 footer__left__three","layout":"page","content":"# footer__left__three\n\nSet a reference for `\"left\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__left__three' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__left__three => :sections__nine__left_three__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__left__three``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__left_three__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__left_one__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__left__three--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__left__three => :sections__nine__left_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__left__three => :sections__nine__left_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__left__three--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_three => {:content => nil, :struct => \"\", :assigns => []}, :footer__left__three => :sections__nine__left_three__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_three => {:content => nil, :struct => \"\", :assigns => []},\n :footer__left__three => :sections__nine__left_three__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__left__three.md","path":"options/footer__left__three.md","url":"/options/footer__left__three.html"},{"sort":138,"title":"H.4 footer__left__four","layout":"page","content":"# footer__left__four\n\nSet a reference for `\"left\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__left__four' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__left__four => :sections__nine__left_four__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__left__four``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__left_four__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__left_one__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__left__four--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__left__four => :sections__nine__left_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__left__four => :sections__nine__left_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__left__four--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__left_four => {:content => nil, :struct => \"\", :assigns => []}, :footer__left__four => :sections__nine__left_four__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__left_four => {:content => nil, :struct => \"\", :assigns => []},\n :footer__left__four => :sections__nine__left_four__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__left__four.md","path":"options/footer__left__four.md","url":"/options/footer__left__four.html"},{"sort":139,"title":"H.5 footer__center__one","layout":"page","content":"# footer__center__one\n\nSet a reference for `\"center\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__center__one' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__center__one => :sections__nine__center_one__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__center__one``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__center_one__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__center_two__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__center__one--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__center__one => :sections__nine__center_two__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__center__one => :sections__nine__center_two__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__center__one--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_one => {:content => nil, :struct => \"\", :assigns => []}, :footer__center__one => :sections__nine__center_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_one => {:content => nil, :struct => \"\", :assigns => []},\n :footer__center__one => :sections__nine__center_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__center__one.md","path":"options/footer__center__one.md","url":"/options/footer__center__one.html"},{"sort":140,"title":"H.6 footer__center__two","layout":"page","content":"# footer__center__two\n\nSet a reference for `\"center\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__center__two' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__center__two => :sections__nine__center_two__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__center__two``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__center_two__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__center_one__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__center__two--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__center__two => :sections__nine__center_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__center__two => :sections__nine__center_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__center__two--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_two => {:content => nil, :struct => \"\", :assigns => []}, :footer__center__two => :sections__nine__center_two__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_two => {:content => nil, :struct => \"\", :assigns => []},\n :footer__center__two => :sections__nine__center_two__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__center__two.md","path":"options/footer__center__two.md","url":"/options/footer__center__two.html"},{"sort":141,"title":"H.7 footer__center__three","layout":"page","content":"# footer__center__three\n\nSet a reference for `\"center\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__center__three' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__center__three => :sections__nine__center_three__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__center__three``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__center_three__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__center_one__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__center__three--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__center__three => :sections__nine__center_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__center__three => :sections__nine__center_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__center__three--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_three => {:content => nil, :struct => \"\", :assigns => []}, :footer__center__three => :sections__nine__center_three__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_three => {:content => nil, :struct => \"\", :assigns => []},\n :footer__center__three => :sections__nine__center_three__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__center__three.md","path":"options/footer__center__three.md","url":"/options/footer__center__three.html"},{"sort":142,"title":"H.8 footer__center__four","layout":"page","content":"# footer__center__four\n\nSet a reference for `\"center\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__center__four' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__center__four => :sections__nine__center_four__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__center__four``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__center_four__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__center_one__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__center__four--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__center__four => :sections__nine__center_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__center__four => :sections__nine__center_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__center__four--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__center_four => {:content => nil, :struct => \"\", :assigns => []}, :footer__center__four => :sections__nine__center_four__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__center_four => {:content => nil, :struct => \"\", :assigns => []},\n :footer__center__four => :sections__nine__center_four__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__center__four.md","path":"options/footer__center__four.md","url":"/options/footer__center__four.html"},{"sort":143,"title":"H.9 footer__right__one","layout":"page","content":"# footer__right__one\n\nSet a reference for `\"right\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__right__one' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__right__one => :sections__nine__right_one__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__right__one``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__right_one__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__right_two__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__right__one--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__right__one => :sections__nine__right_two__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__right__one => :sections__nine__right_two__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__right__one--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_one => {:content => nil, :struct => \"\", :assigns => []}, :footer__right__one => :sections__nine__right_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_one => {:content => nil, :struct => \"\", :assigns => []},\n :footer__right__one => :sections__nine__right_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__right__one.md","path":"options/footer__right__one.md","url":"/options/footer__right__one.html"},{"sort":144,"title":"H.10 footer__right__two","layout":"page","content":"# footer__right__two\n\nSet a reference for `\"right\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__right__two' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__right__two => :sections__nine__right_two__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__right__two``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__right_two__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__right_one__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__right__two--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__right__two => :sections__nine__right_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__right__two => :sections__nine__right_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__right__two--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_two => {:content => nil, :struct => \"\", :assigns => []}, :footer__right__two => :sections__nine__right_two__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_two => {:content => nil, :struct => \"\", :assigns => []},\n :footer__right__two => :sections__nine__right_two__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__right__two.md","path":"options/footer__right__two.md","url":"/options/footer__right__two.html"},{"sort":145,"title":"H.11 footer__right__three","layout":"page","content":"# footer__right__three\n\nSet a reference for `\"right\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__right__three' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__right__three => :sections__nine__right_three__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__right__three``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__right_three__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__right_one__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__right__three--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__right__three => :sections__nine__right_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__right__three => :sections__nine__right_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__right__three--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_three => {:content => nil, :struct => \"\", :assigns => []}, :footer__right__three => :sections__nine__right_three__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_three => {:content => nil, :struct => \"\", :assigns => []},\n :footer__right__three => :sections__nine__right_three__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__right__three.md","path":"options/footer__right__three.md","url":"/options/footer__right__three.html"},{"sort":146,"title":"H.12 footer__right__four","layout":"page","content":"# footer__right__four\n\nSet a reference for `\"right\"` \"footer\" section to a formatted string.\n\n\n## Preview\n\n<div >\n <canvas id='canvas' search=':footer__right__four' palette='option_detail'></canvas>\n</div>\n<script src=\"../assets/js/marker.js\"></script> \n\n \n## Default\n\n### Hash\n\n```ruby\n{\n :footer__right__four => :sections__nine__right_four__content\n} \n```\n\n### Key\n\n| **Name** | **Category** | **Section** |\n| :--- | :--- | :--- |\n| ```:footer__right__four``` | [Footer](./#footer) | [Footer](/sections/footer) |\n\n### Value\n\nAllow only Type Symbol\n\n| **Default**| **Validation**| **Type** |\n| :--- | :--- | :--- |\n| ```:sections__nine__right_four__content``` | ```:^[a-zA-Z0-9_]*$``` | Symbol |\n\n## Example A.\n\nChange pointer to: `:sections__nine__right_one__content`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__right__four--a.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:footer__right__four => :sections__nine__right_one__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :footer__right__four => :sections__nine__right_one__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n## Example B.\n\nChange Text to: `\"\"`.\n\n### Output\n\n<img src=\"../assets/images/options/footer__right__four--b.png\">\n\n\n\n### Parameters\n\n| | **Value** | **Type** |\n|------:|:------|:------|\n| **Output** | 'my-invoice.pdf' | String |\n| **Payload** | {...} [see Payload](../payload) | hash |\n| **Options** | ```{:sections__nine__right_four => {:content => nil, :struct => \"\", :assigns => []}, :footer__right__four => :sections__nine__right_four__content}``` | hash |\n\n\n### Source Code\n\n* Invoke Function\n\n```ruby\nrequire 'write_invoice'\n \npyld = WriteInvoice::Example.generate()\nopts = {\n :sections__nine__right_four => {:content => nil, :struct => \"\", :assigns => []},\n :footer__right__four => :sections__nine__right_four__content\n}\n \nWriteInvoice::Document.generate( output: 'my-invoice.pdf', payload: pyld, options: opts )\n\n```\n\n","dir":"/options/","name":"footer__right__four.md","path":"options/footer__right__four.md","url":"/options/footer__right__four.html"}]